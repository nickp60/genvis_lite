{"version":3,"sources":["webpack:///ideogram.min.js","webpack:///webpack/bootstrap 83cf35a37409d33cd29e","webpack:///./node_modules/d3/build/d3.js","webpack:///./src/js/ploidy.js","webpack:///./src/js/index.js","webpack:///./src/js/core.js","webpack:///./node_modules/d3.promise/dist/d3.promise.min.js","webpack:///./node_modules/d3.promise/node_modules/d3-request/build/d3-request.js","webpack:///./node_modules/d3-collection/build/d3-collection.js","webpack:///./node_modules/d3-dispatch/build/d3-dispatch.js","webpack:///./node_modules/d3-dsv/build/d3-dsv.js","webpack:///./node_modules/es6-promise/dist/es6-promise.js","webpack:///./node_modules/process/browser.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/js/layouts/layout.js","webpack:///./src/js/views/chromosome-util.js","webpack:///./src/js/model-adapter.js","webpack:///./src/js/views/chromosome.js","webpack:///./src/js/color.js","webpack:///./src/js/range.js","webpack:///./src/js/parsers/bed-parser.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","global","factory","this","ascending","a","b","NaN","bisector","compare","length","ascendingComparator","left","x","lo","hi","mid","right","f","descending","number","variance","array","j","isNaN","deviation","v","Math","sqrt","extent","constant","identity","range","start","stop","step","arguments","max","ceil","Array","ticks","count","tickStep","floor","step0","abs","step1","pow","log","LN10","error","e10","e5","e2","sturges","values","LN2","histogram","data","value","xz","domain","x0","x1","tz","threshold","isArray","shift","pop","bin","bins","bisectRight","push","_","thresholds","slice","h","freedmanDiaconis","min","map","sort","scott","mean","median","numbers","merge","arrays","merged","pairs","permute","indexes","permutes","scan","xi","xj","shuffle","i0","i1","t","random","sum","transpose","matrix","row","zip","Map","map$1","each","key","set","nest","apply","depth","createResult","setResult","keys","rollup","sortValues","keyValue","valuesByKey","result","entries","sortKey","sortKeys","k","createObject","setObject","createMap","setMap","order","Set","add","uniform","normal","mu","sigma","r","y","logNormal","randomNormal","exp","irwinHall","bates","randomIrwinHall","exponential","lambda","linear","quadIn","quadOut","quadInOut","cubicIn","cubicOut","easeCubicInOut","sinIn","cos","halfPi","sinOut","sin","sinInOut","pi","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounceIn","bounceOut","b1","b0","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","area","polygon","centroid","cross","lexicographicOrder","computeUpperHullIndexes","points","size","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","contains","point","y1","y0","inside","length$1","xa","ya","xb","yb","perimeter","Path","_x0","_y0","_x1","_y1","path","tree_add","_x","_y","cover","tree","parent","xm","ym","xp","yp","bottom","node","_root","leaf","next","addAll","yz","Infinity","tree_cover","z","tree_data","visit","tree_extent","undefined","Quad","tree_find","radius","x2","y2","q","x3","y3","quads","dx","dy","d2","tree_remove","retainer","previous","removeAll","remove","tree_root","tree_size","tree_visit","callback","child","tree_visitAfter","defaultX","tree_x","defaultY","tree_y","quadtree","nodes","Quadtree","leaf_copy","copy","Queue","Error","_size","_call","_error","_tasks","_data","_waiting","_active","_ended","_start","poke","e","abort","end","noabort","maybeNotify","queue","concurrency","constant$1","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","asin","halfPi$1","intersect","x10","y10","x32","y32","cornerTangents","r1","rc","cw","x01","y01","ox","oy","x11","y11","x00","y00","D","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","arc","buffer","r0","a0","a1","da","context","epsilon$1","tau$2","moveTo","t0","t1","a01","a11","a00","a10","da0","da1","ap","rp","padRadius","cornerRadius","rc0","rc1","p0","p1","pi$2","oc","ax","ay","bx","by","kc","acos","lc","atan2","lineTo","closePath","Linear","_context","curveLinear","line","defined0","output","curve","defined","lineStart","lineEnd","x$$","y$$","area$1","x0z","y0z","areaStart","areaEnd","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$1","pie","index","arcs","pa","Radial","_curve","curveRadial","radial","radialLine","angle","radialLine$1","curveRadialLinear","radialArea","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","symbol","type","draw","circle","noop","that","bezierCurveTo","Basis","basis","BasisClosed","basisClosed","BasisOpen","basisOpen","Bundle","beta","_basis","_beta","point$1","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$2","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","alpha","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","linearClosed","sign","slope3","h0","h1","s0","s1","slope2","point$3","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","natural","Step","_t","stepBefore","stepAfter","none","series","none$1","stackValue","stack","oz","kz","sz","sij","ki","si","offset","slice$2","expand","silhouette","wiggle","s2","sij0","sij1","s3","sk","ascending$1","sums","sum$1","descending$2","reverse","insideOut","top","tops","bottoms","concat","define","constructor","extend","definition","create","Color","color","format","trim","toLowerCase","reHex3","exec","parseInt","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","g","rgbConvert","rgb","opacity","colorRgb","Hsl","hslConvert","colorHsl","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","rgb2xyz","xyz2lab","Xn","Yn","Zn","lab","t3","t2","lab2xyz","xyz2rgb","hclConvert","rad2deg","colorHcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","E","C","cubehelix","basis$1","v0","v1","v2","v3","basis$2","basisClosed$1","constant$2","linear$1","exponential$1","hue","round","gamma","nogamma","rgbSpline","spline","colors","array$1","nb","na","interpolate","date","Date","setTime","interpolateNumber","zero","one","interpolateString","am","bm","bs","bi","reA","lastIndex","reB","join","interpolateRgb","interpolateRound","decompose","scaleX","scaleY","skewX","translateX","translateY","rotate","degrees","atan","parseCss","identity$2","cssNode","document","createElement","cssRoot","documentElement","cssView","defaultView","style","transform","getComputedStyle","appendChild","getPropertyValue","removeChild","split","parseSvg","svgNode","createElementNS","setAttribute","baseVal","consolidate","interpolateTransform","parse","pxComma","pxParen","degParen","translate","scale","cosh","sinh","tanh","interpolateZoom","S","ux0","uy0","w0","ux1","uy1","w1","epsilon2","rho","d1","rho4","rho2","coshr0","u","duration","hsl","lab$1","hcl","cubehelix$1","cubehelixGamma","cubehelix$$","quantize","interpolator","samples","dispatch","Dispatch","parseTypenames","typenames","types","indexOf","set$1","noop$1","objectConverter","columns","Function","JSON","stringify","customConverter","inferColumns","rows","columnSet","forEach","column","dsv","delimiter","text","convert","parseRows","token","I","N","EOF","eol","EOL","charCodeAt","replace","delimiterCode","formatValue","formatRows","formatRow","reFormat","test","RegExp","request","url","respond","status","xhr","hasResponse","response","event","mimeType","responseType","headers","XMLHttpRequest","user","password","timeout","XDomainRequest","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","send","post","method","open","has","setRequestHeader","overrideMimeType","fixCallback","on","responseText","defaultMimeType","dsv$1","responseOf","now","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_time","_next","timer","delay","time","restart","timerFlush","frame","taskHead","wake","clockLast","nap","poke$1","pokeDelay","taskTail","sleep","clearTimeout","setTimeout","interval","clearInterval","setInterval","timeout$1","elapsed","interval$1","total","tick","newInterval","floori","offseti","field","d0","filter","t0$1","t1$1","every","isFinite","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","durationMinute","durationWeek","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","formatDecimal","toExponential","coefficient","exponent$1","formatGroup","grouping","thousands","width","substring","formatDefault","toPrecision","out","formatPrefixAuto","exponent","prefixExponent","formatRounded","formatSpecifier","specifier","FormatSpecifier","match","re","fill","align","comma","precision","formatTypes","identity$3","formatLocale","locale","newFormat","valuePrefix","prefix","valueSuffix","suffix","formatType","valueNegative","prefixes","maybeSuffix","decimal","group","padding","currency","toString","formatPrefix","defaultLocale","precisionFixed","precisionPrefix","precisionRound","localDate","H","M","L","setFullYear","utcDate","UTC","setUTCFullYear","newYear","formatLocale$1","formats","pad","string","pads","charAt","newParse","newDate","parseSpecifier","w","day","W","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","getMonth","formatMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","getUTCMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","A","B","formatDayOfMonth","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","X","formatYear","Y","formatFullYear","formatZone","%","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","utcFormat","utcParse","requote","requoteRe","names","numberRe","percentRe","year","getMilliseconds","getMinutes","getSeconds","timeWeek","timeMonday","getFullYear","utcDay","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcWeek","utcMonday","getUTCFullYear","defaultLocale$1","locale$1","timeFormat","timeParse","formatIsoNative","toISOString","parseIsoNative","ordinal","unknown","implicit","slice$3","band","rescale","range$$","paddingInner","paddingOuter","bandwidth","ordinalRange","rangeRound","pointish","point$4","constant$3","number$1","deinterpolate","deinterpolateClamp","reinterpolateClamp","reinterpolate","bimap","polymap","source","target","clamp","continuous","deinterpolate$$","piecewise","input","interpolate$$","unit","invert","map$2","tickFormat","linearish","nice","linear$2","identity$4","deinterpolate$1","pow10","powp","base","logp","log10","log2","reflect","logs","pows","raise","quantile","invertExtent","quantiles","quantize$1","threshold$1","date$1","number$2","calendar","month","week","hour","minute","second","millisecond","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickInterval","tickIntervals","durationYear","durationSecond$1","durationMinute$1","durationHour$1","durationDay$1","durationWeek$1","durationMonth","utcTime","utcMonth","utcHour","utcMinute","rainbow$1","ts","rainbow","ramp","sequential","namespace","namespaces","space","local","creatorInherit","ownerDocument","uri","namespaceURI","xhtml","creatorFixed","fullname","creator","Local","nextId","filterContextListener","listener","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","parseTypenames$1","onRemove","typename","__on","removeEventListener","capture","onAdd","wrap","filterEvents","addEventListener","selection_on","customEvent","args","sourceEvent","current","point$5","svg","ownerSVGElement","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","clientTop","mouse","changedTouches","none$2","selector","querySelector","selection_select","select","groups","_groups","subgroups","subnode","subgroup","Selection","_parents","empty","selectorAll","querySelectorAll","selection_selectAll","parents","selection_filter","matcher$1","sparse","update","selection_enter","_enter","EnterNode","datum","_parent","constant$4","bindIndex","enter","exit","groupLength","dataLength","bindKey","nodeByKeyValue","keyValues","keyPrefix","selection_data","bind","enterGroup","updateGroup","_exit","selection_exit","selection_merge","selection","groups0","groups1","m0","merges","group0","group1","selection_order","nextSibling","parentNode","insertBefore","selection_sort","compareNode","ascending$2","sortgroups","sortgroup","selection_call","selection_nodes","selection_node","selection_size","selection_empty","selection_each","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","selection_attr","getAttributeNS","getAttribute","window","styleRemove","removeProperty","styleConstant","priority","setProperty","styleFunction","selection_style","propertyRemove","propertyConstant","propertyFunction","selection_property","classArray","classList","ClassList","_node","_names","classedAdd","list","classedRemove","classedTrue","classedFalse","classedFunction","selection_classed","textRemove","textContent","textConstant","textFunction","selection_text","htmlRemove","innerHTML","htmlConstant","htmlFunction","selection_html","raise$1","selection_raise","lower","previousSibling","firstChild","selection_lower","selection_append","constantNull","selection_insert","before","selection_remove","selection_datum","dispatchEvent","params","window$$","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","selection_dispatch","root","selectAll","touch","touches","identifier","schedule","id","timing","schedules","__transition","emptyOn","tween","emptyTween","ease","state","CREATED","init","set$2","STARTING","get$1","self","SCHEDULED","STARTED","ENDED","ENDING","interrupt","active","selection_interrupt","tweenRemove","tween0","tween1","splice","tweenFunction","transition_tween","_id","tweenValue","transition","interpolate$1","attrRemove$1","attrRemoveNS$1","attrConstant$1","value1","value00","interpolate0","value0","attrConstantNS$1","attrFunction$1","value10","attrFunctionNS$1","transition_attr","interpolateTransform$2","attrTween","attrTweenNS","_value","transition_attrTween","delayFunction","delayConstant","transition_delay","durationFunction","durationConstant","transition_duration","easeConstant","transition_ease","transition_filter","Transition","_name","transition_merge","start$1","onFunction","on0","on1","sit","transition_on","removeFunction","transition_remove","transition_select","transition_selectAll","children","inherit","transition_selection","Selection$1","styleRemove$1","styleRemoveEnd","styleConstant$1","styleFunction$1","transition_style","interpolateTransform$1","styleTween","transition_styleTween","textConstant$1","textFunction$1","transition_text","transition_transition","id0","id1","newId","defaultTiming","selection_transition","root$1","identity$5","scale0","scale1","center","entering","__axis","axis","orient","tickValues","tickArguments","spacing","tickSizeInner","tickPadding","range0","range1","position","tickExit","tickEnter","append","attr","insert","epsilon$2","tickSizeOuter","slice$4","tickSize","axisTop","axisRight","axisBottom","axisLeft","defaultSeparation","meanX","reduce","meanXReduce","maxY","maxYReduce","leafLeft","leafRight","cluster","previousNode","eachAfter","separation","nodeSize","node_each","node_eachBefore","node_eachAfter","node_sum","node_sort","eachBefore","node_path","ancestor","leastCommonAncestor","aNodes","ancestors","bNodes","node_ancestors","node_descendants","node_leaves","leaves","node_links","links","hierarchy","childs","Node","valued","defaultChildren","computeHeight","node_copy","copyData","height","Node$2","shuffle$1","head","tail","enclose","circles","encloseN","encloses","dr","l2","l0","l1","enclose1","enclose2","enclose3","r2","x21","y21","r21","r3","a2","c2","a3","c3","d3","ab","place","db","dc","intersects","distance2","Node$1","packEnclose","sj","aa","ba","ca","oa","pack","siblings","optional","required","constantZero","constant$5","defaultRadius","radiusLeaf","packChildren","translateChild","roundNode","treemapDice","partition","positionNode","defaultId","defaultParentId","parentId","stratify","nodeId","nodeKey","nodeByKey","keyPrefix$1","ambiguous","preroot","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","change","executeShifts","nextAncestor","vim","TreeNode","treeRoot","firstWalk","secondWalk","sizeNode","tx","kx","ky","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","treemapSlice","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","dice","index$1","treemap","paddingStack","paddingLeft","paddingTop","paddingRight","paddingBottom","tile","squarify","binary","valueOffset","valueTarget","valueLeft","valueRight","yk","xk","sliceDice","center$1","force","sx","sy","initialize","constant$6","jiggle","x$1","vx","y$1","vy","collide","quad","rj","ri","yi","strength","ri2","iterations","visitAfter","prepare","radii","index$2","link","defaultStrength","distances","strengths","bias","nodeById","initializeStrength","initializeDistance","distance","x$2","y$2","simulation","alphaMin","stepper","alphaTarget","alphaDecay","forces","fx","velocityDecay","fy","initializeNodes","initialRadius","initialAngle","initializeForce","find","closest","manyBody","accumulate","theta2","distanceMax2","distanceMin2","distanceMin","distanceMax","theta","x$3","y$3","nopropagation","stopImmediatePropagation","noevent","preventDefault","dragDisable","view","__noselect","MozUserSelect","dragEnable","noclick","constant$7","DragEvent","subject","defaultFilter","button","defaultContainer","defaultSubject","drag","mousedowned","touchstarted","touchmoved","touchended","touchending","gesture","beforestart","container","mousemoved","mouseupped","mousemoving","gestures","sublisteners","listeners","constant$8","x$4","y$4","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","connectEdge","fm","fb","lx","ly","rx","ry","clipEdges","epsilon$3","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","v00","v01","v11","v10","Circle","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2$1","ha","hc","circlePool","firstCircle","detachCircle","Beach","createBeach","beach","beachPool","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","voronoi","polygons","triangles","constant$9","ZoomEvent","Transform","__zoom","identity$6","nopropagation$1","noevent$1","defaultFilter$1","defaultExtent","SVGElement","clientWidth","clientHeight","defaultTransform","zoom","wheeled","dblclicked","k0","k1","constrain","invertX","invertY","Gesture","wheelidled","wheel","deltaY","deltaMode","wheelDelay","moved","shiftKey","touch0","touch1","touchstarting","touchDelay","dp","dl","collection","scaleBy","scaleTo","translateBy","emit","scaleExtent","translateExtent","constant$10","BrushEvent","nopropagation$2","noevent$2","type$1","defaultFilter$2","defaultExtent$1","local$1","__brush","empty$1","brushSelection","dim","brushX","brush$1","brushY","brush","XY","overlay","cursors","handle","handles","redraw","started","handleSize","emitter","Emitter","point1","shifting","lockX","lockY","moving","move","point0","mode","MODE_SPACE","MODE_DRAG","signX","e0","e1","signY","n0","n1","MODE_HANDLE","MODE_CENTER","flipX","flipY","ended","keydowned","keyCode","keyupped","altKey","metaKey","signsX","signsY","selection1","selection0","starting","compareValue","chord","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","max$1","tau$3","di","dj","subindex","sortChords","constant$11","defaultSource","defaultTarget","defaultRadius$1","defaultStartAngle","defaultEndAngle","ribbon","argv","slice$5","sr","sa0","halfPi$2","sa1","sx0","sy0","tr","ta0","ta1","quadraticCurveTo","adder","Adder","reset","add$1","bv","av","pi$4","asin$1","halfPi$3","haversin","sin$1","noop$2","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","streamPolygon","polygonStart","polygonEnd","streamObjectType","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","phi","radians","lambda0","cosPhi0","cos$1","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","areaRingSum","area$2","areaSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","sqrt$1","boundsPoint","ranges","range$1","lambda0$1","lambda1","phi0","phi1","linePoint","equatorial","inflection","phii","delta","lambda2","lambdai","degrees$1","antimeridian","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon$4","rangeCompare","rangeContains","bounds","feature","deltaMax","centroidPoint","centroidPointCartesian","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","z0","centroidLinePoint","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cz","X2","Y2","Z2","centroid$1","epsilon2$2","constant$12","compose","rotationIdentity","tau$4","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","forward","circleStream","direction","cosRadius","sinRadius","circleRadius","circle$1","ring","clipBuffer","lines","rejoin","clipLine","pointEqual","Intersection","other","entry","clipPolygon","segments","compareIntersection","startInside","clip","segment","link$1","isSubject","clipExtent","visible","from","to","corner","comparePoint","cb","activeStream","polygonInside","winding","bufferStream","clean","cleanInside","clipStream","first","v_","x_","y_","x__","y__","v__","clipMin","clipMax","extent$1","cache","cacheStream","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","length$2","object$1","graticuleX","graticuleY","graticule","DX","DY","outline","extentMajor","extentMinor","stepMajor","stepMinor","interpolate$2","sy1","kx0","ky0","kx1","ky1","identity$7","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x0$1","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","pointRadius","pointLineStart","pointLine","lineEndPolygon","PathString","pointCircle","circle$2","index$3","contextStream","projectionStream","projection","boundsStream$1","polygonContains","sinPhi1","cosPhi1","absDelta","sum$2","intersection","phiArc","pointVisible","sink","pointRing","ringSink","ringStart","ringEnd","ringSegments","ringBuffer","polygonStarted","validSegment","rotatedStart","sphere","clipAntimeridianLine","sign0","sign1","clipAntimeridianIntersect","sinLambda0Lambda1","clipAntimeridianInterpolate","clipCircle","cr","c0","point2","smallRadius","code","notHemisphere","two","pb","n2","n2n2","n1n2","determinant","c1","n1xn2","uu","polar","meridian","q1","transform$1","transform$2","T","Transform$1","resample","project","delta2","resample$1","resampleNone","resampleLineTo","phi2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringPoint","b00","c00","projectionMutator","projectAt","projectRotate","projectTransform","recenter","preclip","clipAntimeridian","postclip","projectResample","transformRadians","clipAngle","conicProjection","parallels","conicEqualAreaRaw","r0y","conicEqualArea","albers","multiplex","streams","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalRaw","azimuthalInvert","sc","cc","azimuthalEqualArea","azimuthalEqualAreaRaw","azimuthalEquidistant","azimuthalEquidistantRaw","mercatorRaw","log$1","tan","mercator","mercatorProjection","clipAuto","tany","conicConformalRaw","pow$1","sign$1","conicConformal","equirectangularRaw","equirectangular","conicEquidistantRaw","gy","nx","conicEquidistant","gnomonicRaw","gnomonic","orthographicRaw","orthographic","stereographicRaw","stereographic","transverseMercatorRaw","transverseMercator","ascendingBisect","bisectLeft","clear","proto","polyIn","custom","polyOut","polyInOut","PI","backIn","overshoot","backOut","backInOut","tau","elasticIn","amplitude","period","elasticOut","elasticInOut","pi$1","tau$1","tauEpsilon","arcTo","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","treeProto","slice$1","defer","await","results","awaitAll","_line","_point","cross$1","tan30","tan30_2","diamond","kr","star","square","sqrt3","triangle","wye","symbols","_x3","_x4","_y3","_y4","bundle","cardinal","_x5","_y5","cardinalClosed","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRomOpen","_t0","px","py","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","brighter","darker","rgbGamma","rgbBasis","rgbBasisClosed","SQRT2","hsl$1","hslLong","hcl$1","hclLong","cubehelix$2","interpolateCubehelixLong","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","html","createRange","createContextualFragment","json","xml","responseXML","csv$1","tsv$1","performance","requestAnimationFrame","TypeError","milliseconds","seconds","minutes","hours","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","setMonth","years","setUTCSeconds","utcMinutes","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","setUTCMonth","utcMonths","utcYears","","toFixed","toUpperCase","-","0","formatIso","parseIso","array$2","category10","category20b","category20c","category20","cubehelix$3","warm","cool","viridis","magma","inferno","plasma","xlink","xmlns","matcher","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","mouseenter","mouseleave","classed","selection_prototype","descendants","resquarify","_squarify","after","grandpa","uncle","sibling","applyX","applyY","location","rescaleX","rescaleY","xy","nw","ne","se","sw","pi$3","temp","valueOf","Feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaRing","areaSum$1","cxcy","version","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","randomUniform","randomLogNormal","randomBates","randomExponential","easeLinear","easeQuad","easeQuadIn","easeQuadOut","easeQuadInOut","easeCubic","easeCubicIn","easeCubicOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","polygonArea","polygonCentroid","polygonHull","polygonLength","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderNone","stackOrderReverse","interpolateArray","interpolateDate","interpolateObject","interpolateTransformCss","interpolateTransformSvg","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateBasis","interpolateBasisClosed","dsvFormat","timeInterval","timeMillisecond","timeMilliseconds","timeSecond","timeSeconds","timeMinute","timeMinutes","timeHour","timeHours","timeDay","timeDays","timeWeeks","timeSunday","timeSundays","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonth","timeMonths","timeYear","timeYears","utcMillisecond","utcMilliseconds","utcSecond","utcSeconds","utcWeeks","utcSunday","formatDefaultLocale","isoFormat","isoParse","timeFormatLocale","timeFormatDefaultLocale","scaleBand","scalePoint","scaleIdentity","scaleLinear","scaleLog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleTime","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","scaleSequential","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","packSiblings","treemapBinary","treemapSliceDice","treemapSquarify","treemapResquarify","forceCenter","forceCollide","forceLink","forceManyBody","forceSimulation","forceX","forceY","zoomIdentity","zoomTransform","geoAlbers","geoAlbersUsa","geoArea","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoBounds","geoCentroid","geoCircle","geoClipExtent","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoDistance","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoGraticule","geoInterpolate","geoLength","geoMercator","geoMercatorRaw","geoOrthographic","geoOrthographicRaw","geoPath","geoProjection","geoProjectionMutator","geoRotation","geoStereographic","geoStereographicRaw","geoStream","geoTransform","geoTransverseMercator","geoTransverseMercatorRaw","__webpack_exports__","_classCallCheck","instance","Constructor","Ploidy","_createClass","defineProperties","props","descriptor","writable","protoProps","staticProps","config","_config","_description","_normalize","ploidyDesc","setNumber","chrSetCode","ploidy","description","normalized","descValue","orientation","existence","_getexistenceArray","chrSetNumber","chrNumber","armNumber","desc","Number","__WEBPACK_IMPORTED_MODULE_0__core__","Ideogram","__WEBPACK_IMPORTED_MODULE_0_d3__","__WEBPACK_IMPORTED_MODULE_0_d3___default","__WEBPACK_IMPORTED_MODULE_1_d3_promise__","__WEBPACK_IMPORTED_MODULE_1_d3_promise___default","__WEBPACK_IMPORTED_MODULE_2_es6_promise__","__WEBPACK_IMPORTED_MODULE_2_es6_promise___default","__WEBPACK_IMPORTED_MODULE_3__ploidy__","__WEBPACK_IMPORTED_MODULE_4__layouts_layout__","__WEBPACK_IMPORTED_MODULE_5__model_adapter__","__WEBPACK_IMPORTED_MODULE_6__views_chromosome__","__WEBPACK_IMPORTED_MODULE_7__parsers_bed_parser__","_typeof","Symbol","iterator","obj","chrWidth","chrHeight","_bandsXOffset","debug","dataDir","sexChromosomes","sex","resolution","showChromosomeLabels","chrMargin","showBandLabels","showFullyBanded","bump","adjustedBump","chromosome","chromosomes","rotatable","showNonNuclearChromosomes","initAnnotSettings","annotTracksHeight","onLoad","onLoadCallback","onDrawAnnots","onDrawAnnotsCallback","onBrushMove","onBrushMoveCallback","coordinateSystem","maxLength","bp","iscn","eutils","esearch","esummary","elink","organisms","9606","commonName","scientificName","scientificNameAbbr","assemblies","default","GRCh38","GRCh37","10090","4641","chromosomesArray","bandsToShow","numChromosomes","bandData","getBands","content","taxid","tsvLines","stain","chr","tsvLinesLength","firstColumn","tmp","chrBands","eval","chromosomeName","bands","chrIndex","pxStop","chrLength","cs","hasBands","fullChromosomeLabels","orgName","csLength","pcenIndex","multiorganism","centromerePosition","ideo","chromosomeLabelClass","_layout","getChromosomeLabelClass","chrSetLabelXPosition","getChromosomeSetLabelXPosition","chrSetLabelTranslate","getChromosomeSetLabelTranslate","getChromosomeSetLabelYPosition","getChromosomeSetLabelAnchor","fullLabels","String","setLabelTranslate","getChromosomeLabelXPosition","getChromosomeLabelYPosition","_ploidy","getAncestor","chrs","chrModel","textOffsets","getChromosomeBandLabelTranslate","getChromosomeBandLabelAnchor","getChromosomeBandTickY1","getChromosomeBandTickY2","overlappingLabelXRight","prevHiddenBoxIndex","xLeft","prevLabelXRight","prevTextBoxLeft","prevTextBoxWidth","textPadding","textsLength","indexesToShow","selectorsToShow","ithLength","numAnnotTracks","scaleSvg","tracksHeight","chrMargin2","ci","annotationsLayout","bandLabels","perspective","coord","adapter","getInstance","getCssClass","render","bpToIscnScale","pxStart","pxLength","iscnStart","iscnStop","iscnLength","bpStart","bpStop","bpLength","pxToIscnScale","syntenicRegions","syntenies","regionID","regions","syntenicRegion","getTime","startPx","convertBpToPx","stopPx","activeRegion","others","getChromosomeSetYTranslate","console","annotationsPath","localAnnotationsPath","annots","annotations","annotationHeight","annotHeight","annotationTracks","barWidth","annotationsColor","annotsUrl","rawAnnots","extension","alert","friendlyAnnots","annot","rawAnnot","drawProcessedAnnots","shape","processAnnotData","annotsByChr","ra","trackIndex","warn","chrModels","chrPxStop","chrAnnots","chrName","bars","bar","barPx","nextBarPx","maxAnnotsPerBar","lastBand","numBins","barAnnots","barCount","histogramScaling","firstGet","convertPxToBp","filledAnnots","chrArray","layout","chrAnnot","getHistogramBars","fillAnnots","thisChrWidth","xScale","selectedRegion","chrLengthBp","xOffset","getMargin","yTranslate","yOffset","color1","color2","color3","css","gradients","organism","taxonomySearch","esearchresult","idlist","getTaxids","taxids","org","orgs","taxidInit","tmpChrs","assembly","promise","resolve","getTaxidFromEutils","then","urlOrg","fullyBandedTaxids","chromosomesUrl","reject","asmAndChrArray","seenChrs","sortChromosomes","getAssemblyAndChromosomesFromEutils","asmChrArray","aIsNuclear","bIsNuclear","aIsCP","bIsCP","aIsMT","bIsMT","naturalSort","assemblyAccession","asmSearch","asmUid","asmSummary","rsUid","nuccoreLink","ntSummary","cnIndex","rsuid","assemblyaccession","qs","linksets","linksetdbs","genome","subtype","subname","substr","slen","bandsArray","defs","sci","sexChromosomeIndexes","getChromosomeModel","drawChromosome","class","setSexChromosomes","getChromosomeSetTranslate","drawSexChromosomes","numChrsInSet","getChromosomesNumber","drawBandLabels","sexChrs","bandsByChr","chrsByTaxid","t0B","t1B","writeContainer","fetchAnnots","svgClass","getBandColorGradients","svgWidth","getWidth","svgHeight","getHeight","finishInit","t0A","initDrawChromosomes","crossfilter","initCrossFilter","checkAnnotData","t0C","t1C","chrID","rotateChromosomeLabels","drawChromosomeLabels","createBrush","drawAnnots","t1A","rotateAndToggleDisplay","numBandDataResponses","accession","bandFileName","bandDataFileNames","slugify","processBandData","insensitive","parseFloat","localeCompare","Promise","d3Collection","d3Dispatch","d3Dsv","request$$1","process","objectOrFunction","isFunction","setScheduler","scheduleFn","customSchedulerFn","setAsap","asapFn","asap","useVertxTimer","vertxNext","flush","useSetTimeout","globalSetTimeout","len","onFulfillment","onRejection","_arguments","PROMISE_ID","makePromise","_state","invokeCallback","_result","subscribe","resolve$1","selfFulfillment","cannotReturnOwn","getThen","GET_THEN_ERROR","tryThen","then$$1","fulfillmentHandler","rejectionHandler","handleForeignThenable","thenable","sealed","fulfill","reason","_label","handleOwnThenable","FULFILLED","REJECTED","handleMaybeThenable","maybeThenable","publishRejection","_onerror","publish","PENDING","_subscribers","subscribers","settled","ErrorObject","tryCatch","TRY_CATCH_ERROR","hasCallback","succeeded","failed","initializePromise","resolver","Enumerator$1","_instanceConstructor","_remaining","_enumerate","validationError","all$1","race$1","reject$1","needsResolver","needsNew","Promise$2","polyfill$1","promiseToString","cast","_isArray","arg","scheduleFlush","browserWindow","browserGlobal","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","isNode","isWorker","Uint8ClampedArray","importScripts","MessageChannel","nextTick","observer","createTextNode","observe","characterData","channel","port1","onmessage","port2","postMessage","vertx","runOnLoop","runOnContext","_eachEntry","resolve$$1","_then","_settledAt","_willSettleAt","enumerator","all","race","_setScheduler","_setAsap","_asap","catch","polyfill","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","run","Item","title","browser","env","versions","addListener","once","off","removeListener","removeAllListeners","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","__proto__","Layout","__WEBPACK_IMPORTED_MODULE_1__views_chromosome_util__","_ideo","_translate","chrSetMargin","_tickSize","_isRotated","_margin","chrElement","util","getSetLabel","getLabel","_class","otherChrs","rotateBack","rotateForward","getSetSize","PairedLayout","SmallLayout","VerticalLayout","HorizontalLayout","_Layout","_this","getPrototypeOf","margin","_getLeftMargin","ideoBox","chrBox","_getYScale","labels","getChromosomeLabels","getSvg","taxId","lastSetOffset","_getChromosomeSetSize","_getAdditionalOffset","setSize","_Layout2","_this2","chromosomeSetYTranslate","_Layout3","_this3","taxIdList","rowSize","additionalPadding","_Layout4","_this4","prevTranslate","ChromosomeUtil","ModelAdapter","model","_model","ModelNoBandsAdapter","_ModelAdapter","Chromosome","__WEBPACK_IMPORTED_MODULE_0__color__","__WEBPACK_IMPORTED_MODULE_1__range__","_adapter","getModel","_color","_bumpCoefficient","clipPath","isPArmRendered","_getPArmShape","isQArmRendered","_getQArmShape","_renderPArm","_renderQArm","_renderRangeSet","_addPArmShape","_addQArmShape","isFullyBanded","getArmColor","getBorderColor","strokeWidth","rangeSet","rangesContainer","bandsXOffset","getStart","getLength","getColor","firstQBand","rightTerminalPosition","_getShapeData","x2b","arm","_renderBands","Boolean","TelocentricChromosome","MetacentricChromosome","_Chromosome","_Chromosome2","_pArmOffset","__WEBPACK_IMPORTED_MODULE_0__ploidy__","armColors","_getPolyploidArmColor","exists","Range","_getColor","BedParser","bed","parseBed","bedStartIndex","ucscStyle","label","rgbToHex","hex","componentToHex"],"mappings":"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","file":"ideogram.min.js","sourcesContent":["/*! Ideogram.js, developed by Eric Weitz. https://github.com/eweitz/ideogram.  Public domain (CC0 1.0). */\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 2);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// https://d3js.org Version 4.1.1. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n   true ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  var version = \"4.1.1\";\n\n  function ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  function bisector(compare) {\n    if (compare.length === 1) compare = ascendingComparator(compare);\n    return {\n      left: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1;\n          else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid;\n          else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n\n  function ascendingComparator(f) {\n    return function(d, x) {\n      return ascending(f(d), x);\n    };\n  }\n\n  var ascendingBisect = bisector(ascending);\n  var bisectRight = ascendingBisect.right;\n  var bisectLeft = ascendingBisect.left;\n\n  function descending(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  }\n\n  function number(x) {\n    return x === null ? NaN : +x;\n  }\n\n  function variance(array, f) {\n    var n = array.length,\n        m = 0,\n        a,\n        d,\n        s = 0,\n        i = -1,\n        j = 0;\n\n    if (f == null) {\n      while (++i < n) {\n        if (!isNaN(a = number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    else {\n      while (++i < n) {\n        if (!isNaN(a = number(f(array[i], i, array)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    if (j > 1) return s / (j - 1);\n  }\n\n  function deviation(array, f) {\n    var v = variance(array, f);\n    return v ? Math.sqrt(v) : v;\n  }\n\n  function extent(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b,\n        c;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    return [a, c];\n  }\n\n  var array = Array.prototype;\n\n  var slice = array.slice;\n  var map = array.map;\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function identity(x) {\n    return x;\n  }\n\n  function range(start, stop, step) {\n    start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n    var i = -1,\n        n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n        range = new Array(n);\n\n    while (++i < n) {\n      range[i] = start + i * step;\n    }\n\n    return range;\n  }\n\n  var e10 = Math.sqrt(50);\n  var e5 = Math.sqrt(10);\n  var e2 = Math.sqrt(2);\n  function ticks(start, stop, count) {\n    var step = tickStep(start, stop, count);\n    return range(\n      Math.ceil(start / step) * step,\n      Math.floor(stop / step) * step + step / 2, // inclusive\n      step\n    );\n  }\n\n  function tickStep(start, stop, count) {\n    var step0 = Math.abs(stop - start) / Math.max(0, count),\n        step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n        error = step0 / step1;\n    if (error >= e10) step1 *= 10;\n    else if (error >= e5) step1 *= 5;\n    else if (error >= e2) step1 *= 2;\n    return stop < start ? -step1 : step1;\n  }\n\n  function sturges(values) {\n    return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n  }\n\n  function histogram() {\n    var value = identity,\n        domain = extent,\n        threshold = sturges;\n\n    function histogram(data) {\n      var i,\n          n = data.length,\n          x,\n          values = new Array(n);\n\n      for (i = 0; i < n; ++i) {\n        values[i] = value(data[i], i, data);\n      }\n\n      var xz = domain(values),\n          x0 = xz[0],\n          x1 = xz[1],\n          tz = threshold(values, x0, x1);\n\n      // Convert number of thresholds into uniform thresholds.\n      if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n      // Remove any thresholds outside the domain.\n      var m = tz.length;\n      while (tz[0] <= x0) tz.shift(), --m;\n      while (tz[m - 1] >= x1) tz.pop(), --m;\n\n      var bins = new Array(m + 1),\n          bin;\n\n      // Initialize bins.\n      for (i = 0; i <= m; ++i) {\n        bin = bins[i] = [];\n        bin.x0 = i > 0 ? tz[i - 1] : x0;\n        bin.x1 = i < m ? tz[i] : x1;\n      }\n\n      // Assign data to bins by value, ignoring any outside the domain.\n      for (i = 0; i < n; ++i) {\n        x = values[i];\n        if (x0 <= x && x <= x1) {\n          bins[bisectRight(tz, x, 0, m)].push(data[i]);\n        }\n      }\n\n      return bins;\n    }\n\n    histogram.value = function(_) {\n      return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n    };\n\n    histogram.domain = function(_) {\n      return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n    };\n\n    histogram.thresholds = function(_) {\n      return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n    };\n\n    return histogram;\n  }\n\n  function threshold(array, p, f) {\n    if (f == null) f = number;\n    if (!(n = array.length)) return;\n    if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n    if (p >= 1) return +f(array[n - 1], n - 1, array);\n    var n,\n        h = (n - 1) * p,\n        i = Math.floor(h),\n        a = +f(array[i], i, array),\n        b = +f(array[i + 1], i + 1, array);\n    return a + (b - a) * (h - i);\n  }\n\n  function freedmanDiaconis(values, min, max) {\n    values = map.call(values, number).sort(ascending);\n    return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function scott(values, min, max) {\n    return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function max(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n    }\n\n    return a;\n  }\n\n  function mean(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1,\n        j = n;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n    }\n\n    if (j) return s / j;\n  }\n\n  function median(array, f) {\n    var numbers = [],\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n    }\n\n    return threshold(numbers.sort(ascending), 0.5);\n  }\n\n  function merge(arrays) {\n    var n = arrays.length,\n        m,\n        i = -1,\n        j = 0,\n        merged,\n        array;\n\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n\n    return merged;\n  }\n\n  function min(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n    }\n\n    return a;\n  }\n\n  function pairs(array) {\n    var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [p, p = array[++i]];\n    return pairs;\n  }\n\n  function permute(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  }\n\n  function scan(array, compare) {\n    if (!(n = array.length)) return;\n    var i = 0,\n        n,\n        j = 0,\n        xi,\n        xj = array[j];\n\n    if (!compare) compare = ascending;\n\n    while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n    if (compare(xj, xj) === 0) return j;\n  }\n\n  function shuffle(array, i0, i1) {\n    var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n        t,\n        i;\n\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0];\n      array[m + i0] = array[i + i0];\n      array[i + i0] = t;\n    }\n\n    return array;\n  }\n\n  function sum(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n    }\n\n    else {\n      while (++i < n) if (a = +f(array[i], i, array)) s += a;\n    }\n\n    return s;\n  }\n\n  function transpose(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  }\n\n  function length(d) {\n    return d.length;\n  }\n\n  function zip() {\n    return transpose(arguments);\n  }\n\n  var prefix = \"$\";\n\n  function Map() {}\n\n  Map.prototype = map$1.prototype = {\n    constructor: Map,\n    has: function(key) {\n      return (prefix + key) in this;\n    },\n    get: function(key) {\n      return this[prefix + key];\n    },\n    set: function(key, value) {\n      this[prefix + key] = value;\n      return this;\n    },\n    remove: function(key) {\n      var property = prefix + key;\n      return property in this && delete this[property];\n    },\n    clear: function() {\n      for (var property in this) if (property[0] === prefix) delete this[property];\n    },\n    keys: function() {\n      var keys = [];\n      for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n      return keys;\n    },\n    values: function() {\n      var values = [];\n      for (var property in this) if (property[0] === prefix) values.push(this[property]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n      return entries;\n    },\n    size: function() {\n      var size = 0;\n      for (var property in this) if (property[0] === prefix) ++size;\n      return size;\n    },\n    empty: function() {\n      for (var property in this) if (property[0] === prefix) return false;\n      return true;\n    },\n    each: function(f) {\n      for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n    }\n  };\n\n  function map$1(object, f) {\n    var map = new Map;\n\n    // Copy constructor.\n    if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n    // Index array by numeric index or specified key function.\n    else if (Array.isArray(object)) {\n      var i = -1,\n          n = object.length,\n          o;\n\n      if (f == null) while (++i < n) map.set(i, object[i]);\n      else while (++i < n) map.set(f(o = object[i], i, object), o);\n    }\n\n    // Convert object to map.\n    else if (object) for (var key in object) map.set(key, object[key]);\n\n    return map;\n  }\n\n  function nest() {\n    var keys = [],\n        sortKeys = [],\n        sortValues,\n        rollup,\n        nest;\n\n    function apply(array, depth, createResult, setResult) {\n      if (depth >= keys.length) return rollup != null\n          ? rollup(array) : (sortValues != null\n          ? array.sort(sortValues)\n          : array);\n\n      var i = -1,\n          n = array.length,\n          key = keys[depth++],\n          keyValue,\n          value,\n          valuesByKey = map$1(),\n          values,\n          result = createResult();\n\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n          values.push(value);\n        } else {\n          valuesByKey.set(keyValue, [value]);\n        }\n      }\n\n      valuesByKey.each(function(values, key) {\n        setResult(result, key, apply(values, depth, createResult, setResult));\n      });\n\n      return result;\n    }\n\n    function entries(map, depth) {\n      if (++depth > keys.length) return map;\n      var array, sortKey = sortKeys[depth - 1];\n      if (rollup != null && depth >= keys.length) array = map.entries();\n      else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n      return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n    }\n\n    return nest = {\n      object: function(array) { return apply(array, 0, createObject, setObject); },\n      map: function(array) { return apply(array, 0, createMap, setMap); },\n      entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n      key: function(d) { keys.push(d); return nest; },\n      sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n      sortValues: function(order) { sortValues = order; return nest; },\n      rollup: function(f) { rollup = f; return nest; }\n    };\n  }\n\n  function createObject() {\n    return {};\n  }\n\n  function setObject(object, key, value) {\n    object[key] = value;\n  }\n\n  function createMap() {\n    return map$1();\n  }\n\n  function setMap(map, key, value) {\n    map.set(key, value);\n  }\n\n  function Set() {}\n\n  var proto = map$1.prototype;\n\n  Set.prototype = set.prototype = {\n    constructor: Set,\n    has: proto.has,\n    add: function(value) {\n      value += \"\";\n      this[prefix + value] = value;\n      return this;\n    },\n    remove: proto.remove,\n    clear: proto.clear,\n    values: proto.keys,\n    size: proto.size,\n    empty: proto.empty,\n    each: proto.each\n  };\n\n  function set(object, f) {\n    var set = new Set;\n\n    // Copy constructor.\n    if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n    // Otherwise, assume it’s an array.\n    else if (object) {\n      var i = -1, n = object.length;\n      if (f == null) while (++i < n) set.add(object[i]);\n      else while (++i < n) set.add(f(object[i], i, object));\n    }\n\n    return set;\n  }\n\n  function keys(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  }\n\n  function values(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  }\n\n  function entries(map) {\n    var entries = [];\n    for (var key in map) entries.push({key: key, value: map[key]});\n    return entries;\n  }\n\n  function uniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return Math.random() * max + min;\n    };\n  }\n\n  function normal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = Math.random() * 2 - 1;\n        y = Math.random() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  function logNormal() {\n    var randomNormal = normal.apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  function irwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n      return sum;\n    };\n  }\n\n  function bates(n) {\n    var randomIrwinHall = irwinHall(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  function exponential(lambda) {\n    return function() {\n      return -Math.log(1 - Math.random()) / lambda;\n    };\n  }\n\n  function linear(t) {\n    return +t;\n  }\n\n  function quadIn(t) {\n    return t * t;\n  }\n\n  function quadOut(t) {\n    return t * (2 - t);\n  }\n\n  function quadInOut(t) {\n    return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n  }\n\n  function cubicIn(t) {\n    return t * t * t;\n  }\n\n  function cubicOut(t) {\n    return --t * t * t + 1;\n  }\n\n  function easeCubicInOut(t) {\n    return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n  }\n\n  var exponent = 3;\n\n  var polyIn = (function custom(e) {\n    e = +e;\n\n    function polyIn(t) {\n      return Math.pow(t, e);\n    }\n\n    polyIn.exponent = custom;\n\n    return polyIn;\n  })(exponent);\n\n  var polyOut = (function custom(e) {\n    e = +e;\n\n    function polyOut(t) {\n      return 1 - Math.pow(1 - t, e);\n    }\n\n    polyOut.exponent = custom;\n\n    return polyOut;\n  })(exponent);\n\n  var polyInOut = (function custom(e) {\n    e = +e;\n\n    function polyInOut(t) {\n      return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n    }\n\n    polyInOut.exponent = custom;\n\n    return polyInOut;\n  })(exponent);\n\n  var pi = Math.PI;\n  var halfPi = pi / 2;\n  function sinIn(t) {\n    return 1 - Math.cos(t * halfPi);\n  }\n\n  function sinOut(t) {\n    return Math.sin(t * halfPi);\n  }\n\n  function sinInOut(t) {\n    return (1 - Math.cos(pi * t)) / 2;\n  }\n\n  function expIn(t) {\n    return Math.pow(2, 10 * t - 10);\n  }\n\n  function expOut(t) {\n    return 1 - Math.pow(2, -10 * t);\n  }\n\n  function expInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n  }\n\n  function circleIn(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n\n  function circleOut(t) {\n    return Math.sqrt(1 - --t * t);\n  }\n\n  function circleInOut(t) {\n    return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n  }\n\n  var b1 = 4 / 11;\n  var b2 = 6 / 11;\n  var b3 = 8 / 11;\n  var b4 = 3 / 4;\n  var b5 = 9 / 11;\n  var b6 = 10 / 11;\n  var b7 = 15 / 16;\n  var b8 = 21 / 22;\n  var b9 = 63 / 64;\n  var b0 = 1 / b1 / b1;\n  function bounceIn(t) {\n    return 1 - bounceOut(1 - t);\n  }\n\n  function bounceOut(t) {\n    return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n  }\n\n  function bounceInOut(t) {\n    return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n  }\n\n  var overshoot = 1.70158;\n\n  var backIn = (function custom(s) {\n    s = +s;\n\n    function backIn(t) {\n      return t * t * ((s + 1) * t - s);\n    }\n\n    backIn.overshoot = custom;\n\n    return backIn;\n  })(overshoot);\n\n  var backOut = (function custom(s) {\n    s = +s;\n\n    function backOut(t) {\n      return --t * t * ((s + 1) * t + s) + 1;\n    }\n\n    backOut.overshoot = custom;\n\n    return backOut;\n  })(overshoot);\n\n  var backInOut = (function custom(s) {\n    s = +s;\n\n    function backInOut(t) {\n      return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n    }\n\n    backInOut.overshoot = custom;\n\n    return backInOut;\n  })(overshoot);\n\n  var tau = 2 * Math.PI;\n  var amplitude = 1;\n  var period = 0.3;\n  var elasticIn = (function custom(a, p) {\n    var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n    function elasticIn(t) {\n      return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n    }\n\n    elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n    elasticIn.period = function(p) { return custom(a, p); };\n\n    return elasticIn;\n  })(amplitude, period);\n\n  var elasticOut = (function custom(a, p) {\n    var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n    function elasticOut(t) {\n      return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n    }\n\n    elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n    elasticOut.period = function(p) { return custom(a, p); };\n\n    return elasticOut;\n  })(amplitude, period);\n\n  var elasticInOut = (function custom(a, p) {\n    var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n    function elasticInOut(t) {\n      return ((t = t * 2 - 1) < 0\n          ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n          : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n    }\n\n    elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n    elasticInOut.period = function(p) { return custom(a, p); };\n\n    return elasticInOut;\n  })(amplitude, period);\n\n  function area(polygon) {\n    var i = -1,\n        n = polygon.length,\n        a,\n        b = polygon[n - 1],\n        area = 0;\n\n    while (++i < n) {\n      a = b;\n      b = polygon[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n\n    return area / 2;\n  }\n\n  function centroid(polygon) {\n    var i = -1,\n        n = polygon.length,\n        x = 0,\n        y = 0,\n        a,\n        b = polygon[n - 1],\n        c,\n        k = 0;\n\n    while (++i < n) {\n      a = b;\n      b = polygon[i];\n      k += c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n\n    return k *= 3, [x / k, y / k];\n  }\n\n  // Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n  // the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n  // right, +y is up). Returns a positive value if ABC is counter-clockwise,\n  // negative if clockwise, and zero if the points are collinear.\n  function cross(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n\n  function lexicographicOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n\n  // Computes the upper convex hull per the monotone chain algorithm.\n  // Assumes points.length >= 3, is sorted by x, unique in y.\n  // Returns an array of indices into points in left-to-right order.\n  function computeUpperHullIndexes(points) {\n    var n = points.length,\n        indexes = [0, 1],\n        size = 2;\n\n    for (var i = 2; i < n; ++i) {\n      while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n      indexes[size++] = i;\n    }\n\n    return indexes.slice(0, size); // remove popped points\n  }\n\n  function hull(points) {\n    if ((n = points.length) < 3) return null;\n\n    var i,\n        n,\n        sortedPoints = new Array(n),\n        flippedPoints = new Array(n);\n\n    for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n    sortedPoints.sort(lexicographicOrder);\n    for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n    var upperIndexes = computeUpperHullIndexes(sortedPoints),\n        lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n    // Construct the hull polygon, removing possible duplicate endpoints.\n    var skipLeft = lowerIndexes[0] === upperIndexes[0],\n        skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n        hull = [];\n\n    // Add upper hull in right-to-l order.\n    // Then add lower hull in left-to-right order.\n    for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n    for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n    return hull;\n  }\n\n  function contains(polygon, point) {\n    var n = polygon.length,\n        p = polygon[n - 1],\n        x = point[0], y = point[1],\n        x0 = p[0], y0 = p[1],\n        x1, y1,\n        inside = false;\n\n    for (var i = 0; i < n; ++i) {\n      p = polygon[i], x1 = p[0], y1 = p[1];\n      if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n      x0 = x1, y0 = y1;\n    }\n\n    return inside;\n  }\n\n  function length$1(polygon) {\n    var i = -1,\n        n = polygon.length,\n        b = polygon[n - 1],\n        xa,\n        ya,\n        xb = b[0],\n        yb = b[1],\n        perimeter = 0;\n\n    while (++i < n) {\n      xa = xb;\n      ya = yb;\n      b = polygon[i];\n      xb = b[0];\n      yb = b[1];\n      xa -= xb;\n      ya -= yb;\n      perimeter += Math.sqrt(xa * xa + ya * ya);\n    }\n\n    return perimeter;\n  }\n\nvar   pi$1 = Math.PI;\nvar   tau$1 = 2 * pi$1;\n  var epsilon = 1e-6;\n  var tauEpsilon = tau$1 - epsilon;\n  function Path() {\n    this._x0 = this._y0 = // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n    this._ = [];\n  }\n\n  function path() {\n    return new Path;\n  }\n\n  Path.prototype = path.prototype = {\n    constructor: Path,\n    moveTo: function(x, y) {\n      this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y);\n    },\n    closePath: function() {\n      if (this._x1 !== null) {\n        this._x1 = this._x0, this._y1 = this._y0;\n        this._.push(\"Z\");\n      }\n    },\n    lineTo: function(x, y) {\n      this._.push(\"L\", this._x1 = +x, \",\", this._y1 = +y);\n    },\n    quadraticCurveTo: function(x1, y1, x, y) {\n      this._.push(\"Q\", +x1, \",\", +y1, \",\", this._x1 = +x, \",\", this._y1 = +y);\n    },\n    bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n      this._.push(\"C\", +x1, \",\", +y1, \",\", +x2, \",\", +y2, \",\", this._x1 = +x, \",\", this._y1 = +y);\n    },\n    arcTo: function(x1, y1, x2, y2, r) {\n      x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n      var x0 = this._x1,\n          y0 = this._y1,\n          x21 = x2 - x1,\n          y21 = y2 - y1,\n          x01 = x0 - x1,\n          y01 = y0 - y1,\n          l01_2 = x01 * x01 + y01 * y01;\n\n      // Is the radius negative? Error.\n      if (r < 0) throw new Error(\"negative radius: \" + r);\n\n      // Is this path empty? Move to (x1,y1).\n      if (this._x1 === null) {\n        this._.push(\n          \"M\", this._x1 = x1, \",\", this._y1 = y1\n        );\n      }\n\n      // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n      else if (!(l01_2 > epsilon));\n\n      // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n      // Equivalently, is (x1,y1) coincident with (x2,y2)?\n      // Or, is the radius zero? Line to (x1,y1).\n      else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n        this._.push(\n          \"L\", this._x1 = x1, \",\", this._y1 = y1\n        );\n      }\n\n      // Otherwise, draw an arc!\n      else {\n        var x20 = x2 - x0,\n            y20 = y2 - y0,\n            l21_2 = x21 * x21 + y21 * y21,\n            l20_2 = x20 * x20 + y20 * y20,\n            l21 = Math.sqrt(l21_2),\n            l01 = Math.sqrt(l01_2),\n            l = r * Math.tan((pi$1 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n            t01 = l / l01,\n            t21 = l / l21;\n\n        // If the start tangent is not coincident with (x0,y0), line to.\n        if (Math.abs(t01 - 1) > epsilon) {\n          this._.push(\n            \"L\", x1 + t01 * x01, \",\", y1 + t01 * y01\n          );\n        }\n\n        this._.push(\n          \"A\", r, \",\", r, \",0,0,\", +(y01 * x20 > x01 * y20), \",\", this._x1 = x1 + t21 * x21, \",\", this._y1 = y1 + t21 * y21\n        );\n      }\n    },\n    arc: function(x, y, r, a0, a1, ccw) {\n      x = +x, y = +y, r = +r;\n      var dx = r * Math.cos(a0),\n          dy = r * Math.sin(a0),\n          x0 = x + dx,\n          y0 = y + dy,\n          cw = 1 ^ ccw,\n          da = ccw ? a0 - a1 : a1 - a0;\n\n      // Is the radius negative? Error.\n      if (r < 0) throw new Error(\"negative radius: \" + r);\n\n      // Is this path empty? Move to (x0,y0).\n      if (this._x1 === null) {\n        this._.push(\n          \"M\", x0, \",\", y0\n        );\n      }\n\n      // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n      else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n        this._.push(\n          \"L\", x0, \",\", y0\n        );\n      }\n\n      // Is this arc empty? We’re done.\n      if (!r) return;\n\n      // Is this a complete circle? Draw two arcs to complete the circle.\n      if (da > tauEpsilon) {\n        this._.push(\n          \"A\", r, \",\", r, \",0,1,\", cw, \",\", x - dx, \",\", y - dy,\n          \"A\", r, \",\", r, \",0,1,\", cw, \",\", this._x1 = x0, \",\", this._y1 = y0\n        );\n      }\n\n      // Otherwise, draw an arc!\n      else {\n        if (da < 0) da = da % tau$1 + tau$1;\n        this._.push(\n          \"A\", r, \",\", r, \",0,\", +(da >= pi$1), \",\", cw, \",\", this._x1 = x + r * Math.cos(a1), \",\", this._y1 = y + r * Math.sin(a1)\n        );\n      }\n    },\n    rect: function(x, y, w, h) {\n      this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y, \"h\", +w, \"v\", +h, \"h\", -w, \"Z\");\n    },\n    toString: function() {\n      return this._.join(\"\");\n    }\n  };\n\n  function tree_add(d) {\n    var x = +this._x.call(null, d),\n        y = +this._y.call(null, d);\n    return add(this.cover(x, y), x, y, d);\n  }\n\n  function add(tree, x, y, d) {\n    if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n    var parent,\n        node = tree._root,\n        leaf = {data: d},\n        x0 = tree._x0,\n        y0 = tree._y0,\n        x1 = tree._x1,\n        y1 = tree._y1,\n        xm,\n        ym,\n        xp,\n        yp,\n        right,\n        bottom,\n        i,\n        j;\n\n    // If the tree is empty, initialize the root as a leaf.\n    if (!node) return tree._root = leaf, tree;\n\n    // Find the existing leaf for the new point, or add it.\n    while (node.length) {\n      if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n      if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n      if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n    }\n\n    // Is the new point is exactly coincident with the existing point?\n    xp = +tree._x.call(null, node.data);\n    yp = +tree._y.call(null, node.data);\n    if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n    // Otherwise, split the leaf node until the old and new point are separated.\n    do {\n      parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n      if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n      if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n    return parent[j] = node, parent[i] = leaf, tree;\n  }\n\n  function addAll(data) {\n    var d, i, n = data.length,\n        x,\n        y,\n        xz = new Array(n),\n        yz = new Array(n),\n        x0 = Infinity,\n        y0 = Infinity,\n        x1 = -Infinity,\n        y1 = -Infinity;\n\n    // Compute the points and their extent.\n    for (i = 0; i < n; ++i) {\n      if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n      xz[i] = x;\n      yz[i] = y;\n      if (x < x0) x0 = x;\n      if (x > x1) x1 = x;\n      if (y < y0) y0 = y;\n      if (y > y1) y1 = y;\n    }\n\n    // If there were no (valid) points, inherit the existing extent.\n    if (x1 < x0) x0 = this._x0, x1 = this._x1;\n    if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n    // Expand the tree to cover the new points.\n    this.cover(x0, y0).cover(x1, y1);\n\n    // Add the new points.\n    for (i = 0; i < n; ++i) {\n      add(this, xz[i], yz[i], data[i]);\n    }\n\n    return this;\n  }\n\n  function tree_cover(x, y) {\n    if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n    var x0 = this._x0,\n        y0 = this._y0,\n        x1 = this._x1,\n        y1 = this._y1;\n\n    // If the quadtree has no extent, initialize them.\n    // Integer extent are necessary so that if we later double the extent,\n    // the existing quadrant boundaries don’t change due to floating point error!\n    if (isNaN(x0)) {\n      x1 = (x0 = Math.floor(x)) + 1;\n      y1 = (y0 = Math.floor(y)) + 1;\n    }\n\n    // Otherwise, double repeatedly to cover.\n    else if (x0 > x || x > x1 || y0 > y || y > y1) {\n      var z = x1 - x0,\n          node = this._root,\n          parent,\n          i;\n\n      switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n        case 0: {\n          do parent = new Array(4), parent[i] = node, node = parent;\n          while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n          break;\n        }\n        case 1: {\n          do parent = new Array(4), parent[i] = node, node = parent;\n          while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n          break;\n        }\n        case 2: {\n          do parent = new Array(4), parent[i] = node, node = parent;\n          while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n          break;\n        }\n        case 3: {\n          do parent = new Array(4), parent[i] = node, node = parent;\n          while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n          break;\n        }\n      }\n\n      if (this._root && this._root.length) this._root = node;\n    }\n\n    // If the quadtree covers the point already, just return.\n    else return this;\n\n    this._x0 = x0;\n    this._y0 = y0;\n    this._x1 = x1;\n    this._y1 = y1;\n    return this;\n  }\n\n  function tree_data() {\n    var data = [];\n    this.visit(function(node) {\n      if (!node.length) do data.push(node.data); while (node = node.next)\n    });\n    return data;\n  }\n\n  function tree_extent(_) {\n    return arguments.length\n        ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n        : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n  }\n\n  function Quad(node, x0, y0, x1, y1) {\n    this.node = node;\n    this.x0 = x0;\n    this.y0 = y0;\n    this.x1 = x1;\n    this.y1 = y1;\n  }\n\n  function tree_find(x, y, radius) {\n    var data,\n        x0 = this._x0,\n        y0 = this._y0,\n        x1,\n        y1,\n        x2,\n        y2,\n        x3 = this._x1,\n        y3 = this._y1,\n        quads = [],\n        node = this._root,\n        q,\n        i;\n\n    if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n    if (radius == null) radius = Infinity;\n    else {\n      x0 = x - radius, y0 = y - radius;\n      x3 = x + radius, y3 = y + radius;\n      radius *= radius;\n    }\n\n    while (q = quads.pop()) {\n\n      // Stop searching if this quadrant can’t contain a closer node.\n      if (!(node = q.node)\n          || (x1 = q.x0) > x3\n          || (y1 = q.y0) > y3\n          || (x2 = q.x1) < x0\n          || (y2 = q.y1) < y0) continue;\n\n      // Bisect the current quadrant.\n      if (node.length) {\n        var xm = (x1 + x2) / 2,\n            ym = (y1 + y2) / 2;\n\n        quads.push(\n          new Quad(node[3], xm, ym, x2, y2),\n          new Quad(node[2], x1, ym, xm, y2),\n          new Quad(node[1], xm, y1, x2, ym),\n          new Quad(node[0], x1, y1, xm, ym)\n        );\n\n        // Visit the closest quadrant first.\n        if (i = (y >= ym) << 1 | (x >= xm)) {\n          q = quads[quads.length - 1];\n          quads[quads.length - 1] = quads[quads.length - 1 - i];\n          quads[quads.length - 1 - i] = q;\n        }\n      }\n\n      // Visit this point. (Visiting coincident points isn’t necessary!)\n      else {\n        var dx = x - +this._x.call(null, node.data),\n            dy = y - +this._y.call(null, node.data),\n            d2 = dx * dx + dy * dy;\n        if (d2 < radius) {\n          var d = Math.sqrt(radius = d2);\n          x0 = x - d, y0 = y - d;\n          x3 = x + d, y3 = y + d;\n          data = node.data;\n        }\n      }\n    }\n\n    return data;\n  }\n\n  function tree_remove(d) {\n    if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n    var parent,\n        node = this._root,\n        retainer,\n        previous,\n        next,\n        x0 = this._x0,\n        y0 = this._y0,\n        x1 = this._x1,\n        y1 = this._y1,\n        x,\n        y,\n        xm,\n        ym,\n        right,\n        bottom,\n        i,\n        j;\n\n    // If the tree is empty, initialize the root as a leaf.\n    if (!node) return this;\n\n    // Find the leaf node for the point.\n    // While descending, also retain the deepest parent with a non-removed sibling.\n    if (node.length) while (true) {\n      if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n      if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n      if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n      if (!node.length) break;\n      if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n    }\n\n    // Find the point to remove.\n    while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n    if (next = node.next) delete node.next;\n\n    // If there are multiple coincident points, remove just the point.\n    if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n    // If this is the root point, remove it.\n    if (!parent) return this._root = next, this;\n\n    // Remove this leaf.\n    next ? parent[i] = next : delete parent[i];\n\n    // If the parent now contains exactly one leaf, collapse superfluous parents.\n    if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n        && node === (parent[3] || parent[2] || parent[1] || parent[0])\n        && !node.length) {\n      if (retainer) retainer[j] = node;\n      else this._root = node;\n    }\n\n    return this;\n  }\n\n  function removeAll(data) {\n    for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n    return this;\n  }\n\n  function tree_root() {\n    return this._root;\n  }\n\n  function tree_size() {\n    var size = 0;\n    this.visit(function(node) {\n      if (!node.length) do ++size; while (node = node.next)\n    });\n    return size;\n  }\n\n  function tree_visit(callback) {\n    var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n    if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n    while (q = quads.pop()) {\n      if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n        var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n        if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n        if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n        if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n        if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      }\n    }\n    return this;\n  }\n\n  function tree_visitAfter(callback) {\n    var quads = [], next = [], q;\n    if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n    while (q = quads.pop()) {\n      var node = q.node;\n      if (node.length) {\n        var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n        if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n        if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n        if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n        if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      }\n      next.push(q);\n    }\n    while (q = next.pop()) {\n      callback(q.node, q.x0, q.y0, q.x1, q.y1);\n    }\n    return this;\n  }\n\n  function defaultX(d) {\n    return d[0];\n  }\n\n  function tree_x(_) {\n    return arguments.length ? (this._x = _, this) : this._x;\n  }\n\n  function defaultY(d) {\n    return d[1];\n  }\n\n  function tree_y(_) {\n    return arguments.length ? (this._y = _, this) : this._y;\n  }\n\n  function quadtree(nodes, x, y) {\n    var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n    return nodes == null ? tree : tree.addAll(nodes);\n  }\n\n  function Quadtree(x, y, x0, y0, x1, y1) {\n    this._x = x;\n    this._y = y;\n    this._x0 = x0;\n    this._y0 = y0;\n    this._x1 = x1;\n    this._y1 = y1;\n    this._root = undefined;\n  }\n\n  function leaf_copy(leaf) {\n    var copy = {data: leaf.data}, next = copy;\n    while (leaf = leaf.next) next = next.next = {data: leaf.data};\n    return copy;\n  }\n\n  var treeProto = quadtree.prototype = Quadtree.prototype;\n\n  treeProto.copy = function() {\n    var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n        node = this._root,\n        nodes,\n        child;\n\n    if (!node) return copy;\n\n    if (!node.length) return copy._root = leaf_copy(node), copy;\n\n    nodes = [{source: node, target: copy._root = new Array(4)}];\n    while (node = nodes.pop()) {\n      for (var i = 0; i < 4; ++i) {\n        if (child = node.source[i]) {\n          if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n          else node.target[i] = leaf_copy(child);\n        }\n      }\n    }\n\n    return copy;\n  };\n\n  treeProto.add = tree_add;\n  treeProto.addAll = addAll;\n  treeProto.cover = tree_cover;\n  treeProto.data = tree_data;\n  treeProto.extent = tree_extent;\n  treeProto.find = tree_find;\n  treeProto.remove = tree_remove;\n  treeProto.removeAll = removeAll;\n  treeProto.root = tree_root;\n  treeProto.size = tree_size;\n  treeProto.visit = tree_visit;\n  treeProto.visitAfter = tree_visitAfter;\n  treeProto.x = tree_x;\n  treeProto.y = tree_y;\n\n  var slice$1 = [].slice;\n\n  var noabort = {};\n\n  function Queue(size) {\n    if (!(size >= 1)) throw new Error;\n    this._size = size;\n    this._call =\n    this._error = null;\n    this._tasks = [];\n    this._data = [];\n    this._waiting =\n    this._active =\n    this._ended =\n    this._start = 0; // inside a synchronous task callback?\n  }\n\n  Queue.prototype = queue.prototype = {\n    constructor: Queue,\n    defer: function(callback) {\n      if (typeof callback !== \"function\" || this._call) throw new Error;\n      if (this._error != null) return this;\n      var t = slice$1.call(arguments, 1);\n      t.push(callback);\n      ++this._waiting, this._tasks.push(t);\n      poke(this);\n      return this;\n    },\n    abort: function() {\n      if (this._error == null) abort(this, new Error(\"abort\"));\n      return this;\n    },\n    await: function(callback) {\n      if (typeof callback !== \"function\" || this._call) throw new Error;\n      this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n      maybeNotify(this);\n      return this;\n    },\n    awaitAll: function(callback) {\n      if (typeof callback !== \"function\" || this._call) throw new Error;\n      this._call = callback;\n      maybeNotify(this);\n      return this;\n    }\n  };\n\n  function poke(q) {\n    if (!q._start) try { start(q); } // let the current task complete\n    catch (e) { if (q._tasks[q._ended + q._active - 1]) abort(q, e); } // task errored synchronously\n  }\n\n  function start(q) {\n    while (q._start = q._waiting && q._active < q._size) {\n      var i = q._ended + q._active,\n          t = q._tasks[i],\n          j = t.length - 1,\n          c = t[j];\n      t[j] = end(q, i);\n      --q._waiting, ++q._active;\n      t = c.apply(null, t);\n      if (!q._tasks[i]) continue; // task finished synchronously\n      q._tasks[i] = t || noabort;\n    }\n  }\n\n  function end(q, i) {\n    return function(e, r) {\n      if (!q._tasks[i]) return; // ignore multiple callbacks\n      --q._active, ++q._ended;\n      q._tasks[i] = null;\n      if (q._error != null) return; // ignore secondary errors\n      if (e != null) {\n        abort(q, e);\n      } else {\n        q._data[i] = r;\n        if (q._waiting) poke(q);\n        else maybeNotify(q);\n      }\n    };\n  }\n\n  function abort(q, e) {\n    var i = q._tasks.length, t;\n    q._error = e; // ignore active callbacks\n    q._data = undefined; // allow gc\n    q._waiting = NaN; // prevent starting\n\n    while (--i >= 0) {\n      if (t = q._tasks[i]) {\n        q._tasks[i] = null;\n        if (t.abort) try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n\n    q._active = NaN; // allow notification\n    maybeNotify(q);\n  }\n\n  function maybeNotify(q) {\n    if (!q._active && q._call) q._call(q._error, q._data);\n  }\n\n  function queue(concurrency) {\n    return new Queue(arguments.length ? +concurrency : Infinity);\n  }\n\n  function constant$1(x) {\n    return function constant() {\n      return x;\n    };\n  }\n\n  var epsilon$1 = 1e-12;\n  var pi$2 = Math.PI;\n  var halfPi$1 = pi$2 / 2;\n  var tau$2 = 2 * pi$2;\n\n  function arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n\n  function arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n\n  function arcStartAngle(d) {\n    return d.startAngle;\n  }\n\n  function arcEndAngle(d) {\n    return d.endAngle;\n  }\n\n  function arcPadAngle(d) {\n    return d && d.padAngle; // Note: optional!\n  }\n\n  function asin(x) {\n    return x >= 1 ? halfPi$1 : x <= -1 ? -halfPi$1 : Math.asin(x);\n  }\n\n  function intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var x10 = x1 - x0, y10 = y1 - y0,\n        x32 = x3 - x2, y32 = y3 - y2,\n        t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n    return [x0 + t * x10, y0 + t * y10];\n  }\n\n  // Compute perpendicular offset line of length rc.\n  // http://mathworld.wolfram.com/Circle-LineIntersection.html\n  function cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n    var x01 = x0 - x1,\n        y01 = y0 - y1,\n        lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n        ox = lo * y01,\n        oy = -lo * x01,\n        x11 = x0 + ox,\n        y11 = y0 + oy,\n        x10 = x1 + ox,\n        y10 = y1 + oy,\n        x00 = (x11 + x10) / 2,\n        y00 = (y11 + y10) / 2,\n        dx = x10 - x11,\n        dy = y10 - y11,\n        d2 = dx * dx + dy * dy,\n        r = r1 - rc,\n        D = x11 * y10 - x10 * y11,\n        d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n        cx0 = (D * dy - dx * d) / d2,\n        cy0 = (-D * dx - dy * d) / d2,\n        cx1 = (D * dy + dx * d) / d2,\n        cy1 = (-D * dx + dy * d) / d2,\n        dx0 = cx0 - x00,\n        dy0 = cy0 - y00,\n        dx1 = cx1 - x00,\n        dy1 = cy1 - y00;\n\n    // Pick the closer of the two intersection points.\n    // TODO Is there a faster way to determine which intersection to use?\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n    return {\n      cx: cx0,\n      cy: cy0,\n      x01: -ox,\n      y01: -oy,\n      x11: cx0 * (r1 / r - 1),\n      y11: cy0 * (r1 / r - 1)\n    };\n  }\n\n  function arc() {\n    var innerRadius = arcInnerRadius,\n        outerRadius = arcOuterRadius,\n        cornerRadius = constant$1(0),\n        padRadius = null,\n        startAngle = arcStartAngle,\n        endAngle = arcEndAngle,\n        padAngle = arcPadAngle,\n        context = null;\n\n    function arc() {\n      var buffer,\n          r,\n          r0 = +innerRadius.apply(this, arguments),\n          r1 = +outerRadius.apply(this, arguments),\n          a0 = startAngle.apply(this, arguments) - halfPi$1,\n          a1 = endAngle.apply(this, arguments) - halfPi$1,\n          da = Math.abs(a1 - a0),\n          cw = a1 > a0;\n\n      if (!context) context = buffer = path();\n\n      // Ensure that the outer radius is always larger than the inner radius.\n      if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n      // Is it a point?\n      if (!(r1 > epsilon$1)) context.moveTo(0, 0);\n\n      // Or is it a circle or annulus?\n      else if (da > tau$2 - epsilon$1) {\n        context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));\n        context.arc(0, 0, r1, a0, a1, !cw);\n        if (r0 > epsilon$1) {\n          context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));\n          context.arc(0, 0, r0, a1, a0, cw);\n        }\n      }\n\n      // Or is it a circular or annular sector?\n      else {\n        var a01 = a0,\n            a11 = a1,\n            a00 = a0,\n            a10 = a1,\n            da0 = da,\n            da1 = da,\n            ap = padAngle.apply(this, arguments) / 2,\n            rp = (ap > epsilon$1) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),\n            rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n            rc0 = rc,\n            rc1 = rc,\n            t0,\n            t1;\n\n        // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n        if (rp > epsilon$1) {\n          var p0 = asin(rp / r0 * Math.sin(ap)),\n              p1 = asin(rp / r1 * Math.sin(ap));\n          if ((da0 -= p0 * 2) > epsilon$1) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n          else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n          if ((da1 -= p1 * 2) > epsilon$1) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n          else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n        }\n\n        var x01 = r1 * Math.cos(a01),\n            y01 = r1 * Math.sin(a01),\n            x10 = r0 * Math.cos(a10),\n            y10 = r0 * Math.sin(a10);\n\n        // Apply rounded corners?\n        if (rc > epsilon$1) {\n          var x11 = r1 * Math.cos(a11),\n              y11 = r1 * Math.sin(a11),\n              x00 = r0 * Math.cos(a00),\n              y00 = r0 * Math.sin(a00);\n\n          // Restrict the corner radius according to the sector angle.\n          if (da < pi$2) {\n            var oc = da0 > epsilon$1 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n                ax = x01 - oc[0],\n                ay = y01 - oc[1],\n                bx = x11 - oc[0],\n                by = y11 - oc[1],\n                kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n                lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n            rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n            rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n          }\n        }\n\n        // Is the sector collapsed to a line?\n        if (!(da1 > epsilon$1)) context.moveTo(x01, y01);\n\n        // Does the sector’s outer ring have rounded corners?\n        else if (rc1 > epsilon$1) {\n          t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n          t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n          context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n          // Have the corners merged?\n          if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n          // Otherwise, draw the two corners and the ring.\n          else {\n            context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n            context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n            context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n          }\n        }\n\n        // Or is the outer ring just a circular arc?\n        else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n        // Is there no inner ring, and it’s a circular sector?\n        // Or perhaps it’s an annular sector collapsed due to padding?\n        if (!(r0 > epsilon$1) || !(da0 > epsilon$1)) context.lineTo(x10, y10);\n\n        // Does the sector’s inner ring (or point) have rounded corners?\n        else if (rc0 > epsilon$1) {\n          t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n          t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n          context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n          // Have the corners merged?\n          if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n          // Otherwise, draw the two corners and the ring.\n          else {\n            context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n            context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n            context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n          }\n        }\n\n        // Or is the inner ring just a circular arc?\n        else context.arc(0, 0, r0, a10, a00, cw);\n      }\n\n      context.closePath();\n\n      if (buffer) return context = null, buffer + \"\" || null;\n    }\n\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n          a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$2 / 2;\n      return [Math.cos(a) * r, Math.sin(a) * r];\n    };\n\n    arc.innerRadius = function(_) {\n      return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$1(+_), arc) : innerRadius;\n    };\n\n    arc.outerRadius = function(_) {\n      return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$1(+_), arc) : outerRadius;\n    };\n\n    arc.cornerRadius = function(_) {\n      return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$1(+_), arc) : cornerRadius;\n    };\n\n    arc.padRadius = function(_) {\n      return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$1(+_), arc) : padRadius;\n    };\n\n    arc.startAngle = function(_) {\n      return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$1(+_), arc) : startAngle;\n    };\n\n    arc.endAngle = function(_) {\n      return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$1(+_), arc) : endAngle;\n    };\n\n    arc.padAngle = function(_) {\n      return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$1(+_), arc) : padAngle;\n    };\n\n    arc.context = function(_) {\n      return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n    };\n\n    return arc;\n  }\n\n  function Linear(context) {\n    this._context = context;\n  }\n\n  Linear.prototype = {\n    areaStart: function() {\n      this._line = 0;\n    },\n    areaEnd: function() {\n      this._line = NaN;\n    },\n    lineStart: function() {\n      this._point = 0;\n    },\n    lineEnd: function() {\n      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n      this._line = 1 - this._line;\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n      switch (this._point) {\n        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n        case 1: this._point = 2; // proceed\n        default: this._context.lineTo(x, y); break;\n      }\n    }\n  };\n\n  function curveLinear(context) {\n    return new Linear(context);\n  }\n\n  function x(p) {\n    return p[0];\n  }\n\n  function y(p) {\n    return p[1];\n  }\n\n  function line() {\n    var x$$ = x,\n        y$$ = y,\n        defined = constant$1(true),\n        context = null,\n        curve = curveLinear,\n        output = null;\n\n    function line(data) {\n      var i,\n          n = data.length,\n          d,\n          defined0 = false,\n          buffer;\n\n      if (context == null) output = curve(buffer = path());\n\n      for (i = 0; i <= n; ++i) {\n        if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n          if (defined0 = !defined0) output.lineStart();\n          else output.lineEnd();\n        }\n        if (defined0) output.point(+x$$(d, i, data), +y$$(d, i, data));\n      }\n\n      if (buffer) return output = null, buffer + \"\" || null;\n    }\n\n    line.x = function(_) {\n      return arguments.length ? (x$$ = typeof _ === \"function\" ? _ : constant$1(+_), line) : x$$;\n    };\n\n    line.y = function(_) {\n      return arguments.length ? (y$$ = typeof _ === \"function\" ? _ : constant$1(+_), line) : y$$;\n    };\n\n    line.defined = function(_) {\n      return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$1(!!_), line) : defined;\n    };\n\n    line.curve = function(_) {\n      return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n    };\n\n    line.context = function(_) {\n      return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n    };\n\n    return line;\n  }\n\n  function area$1() {\n    var x0 = x,\n        x1 = null,\n        y0 = constant$1(0),\n        y1 = y,\n        defined = constant$1(true),\n        context = null,\n        curve = curveLinear,\n        output = null;\n\n    function area(data) {\n      var i,\n          j,\n          k,\n          n = data.length,\n          d,\n          defined0 = false,\n          buffer,\n          x0z = new Array(n),\n          y0z = new Array(n);\n\n      if (context == null) output = curve(buffer = path());\n\n      for (i = 0; i <= n; ++i) {\n        if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n          if (defined0 = !defined0) {\n            j = i;\n            output.areaStart();\n            output.lineStart();\n          } else {\n            output.lineEnd();\n            output.lineStart();\n            for (k = i - 1; k >= j; --k) {\n              output.point(x0z[k], y0z[k]);\n            }\n            output.lineEnd();\n            output.areaEnd();\n          }\n        }\n        if (defined0) {\n          x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n          output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n        }\n      }\n\n      if (buffer) return output = null, buffer + \"\" || null;\n    }\n\n    function arealine() {\n      return line().defined(defined).curve(curve).context(context);\n    }\n\n    area.x = function(_) {\n      return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$1(+_), x1 = null, area) : x0;\n    };\n\n    area.x0 = function(_) {\n      return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$1(+_), area) : x0;\n    };\n\n    area.x1 = function(_) {\n      return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$1(+_), area) : x1;\n    };\n\n    area.y = function(_) {\n      return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$1(+_), y1 = null, area) : y0;\n    };\n\n    area.y0 = function(_) {\n      return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$1(+_), area) : y0;\n    };\n\n    area.y1 = function(_) {\n      return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$1(+_), area) : y1;\n    };\n\n    area.lineX0 =\n    area.lineY0 = function() {\n      return arealine().x(x0).y(y0);\n    };\n\n    area.lineY1 = function() {\n      return arealine().x(x0).y(y1);\n    };\n\n    area.lineX1 = function() {\n      return arealine().x(x1).y(y0);\n    };\n\n    area.defined = function(_) {\n      return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$1(!!_), area) : defined;\n    };\n\n    area.curve = function(_) {\n      return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n    };\n\n    area.context = function(_) {\n      return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n    };\n\n    return area;\n  }\n\n  function descending$1(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  }\n\n  function identity$1(d) {\n    return d;\n  }\n\n  function pie() {\n    var value = identity$1,\n        sortValues = descending$1,\n        sort = null,\n        startAngle = constant$1(0),\n        endAngle = constant$1(tau$2),\n        padAngle = constant$1(0);\n\n    function pie(data) {\n      var i,\n          n = data.length,\n          j,\n          k,\n          sum = 0,\n          index = new Array(n),\n          arcs = new Array(n),\n          a0 = +startAngle.apply(this, arguments),\n          da = Math.min(tau$2, Math.max(-tau$2, endAngle.apply(this, arguments) - a0)),\n          a1,\n          p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n          pa = p * (da < 0 ? -1 : 1),\n          v;\n\n      for (i = 0; i < n; ++i) {\n        if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n          sum += v;\n        }\n      }\n\n      // Optionally sort the arcs by previously-computed values or by data.\n      if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n      else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n      // Compute the arcs! They are stored in the original data's order.\n      for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n        j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n          data: data[j],\n          index: i,\n          value: v,\n          startAngle: a0,\n          endAngle: a1,\n          padAngle: p\n        };\n      }\n\n      return arcs;\n    }\n\n    pie.value = function(_) {\n      return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$1(+_), pie) : value;\n    };\n\n    pie.sortValues = function(_) {\n      return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n    };\n\n    pie.sort = function(_) {\n      return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n    };\n\n    pie.startAngle = function(_) {\n      return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$1(+_), pie) : startAngle;\n    };\n\n    pie.endAngle = function(_) {\n      return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$1(+_), pie) : endAngle;\n    };\n\n    pie.padAngle = function(_) {\n      return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$1(+_), pie) : padAngle;\n    };\n\n    return pie;\n  }\n\n  var curveRadialLinear = curveRadial(curveLinear);\n\n  function Radial(curve) {\n    this._curve = curve;\n  }\n\n  Radial.prototype = {\n    areaStart: function() {\n      this._curve.areaStart();\n    },\n    areaEnd: function() {\n      this._curve.areaEnd();\n    },\n    lineStart: function() {\n      this._curve.lineStart();\n    },\n    lineEnd: function() {\n      this._curve.lineEnd();\n    },\n    point: function(a, r) {\n      this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n    }\n  };\n\n  function curveRadial(curve) {\n\n    function radial(context) {\n      return new Radial(curve(context));\n    }\n\n    radial._curve = curve;\n\n    return radial;\n  }\n\n  function radialLine(l) {\n    var c = l.curve;\n\n    l.angle = l.x, delete l.x;\n    l.radius = l.y, delete l.y;\n\n    l.curve = function(_) {\n      return arguments.length ? c(curveRadial(_)) : c()._curve;\n    };\n\n    return l;\n  }\n\n  function radialLine$1() {\n    return radialLine(line().curve(curveRadialLinear));\n  }\n\n  function radialArea() {\n    var a = area$1().curve(curveRadialLinear),\n        c = a.curve,\n        x0 = a.lineX0,\n        x1 = a.lineX1,\n        y0 = a.lineY0,\n        y1 = a.lineY1;\n\n    a.angle = a.x, delete a.x;\n    a.startAngle = a.x0, delete a.x0;\n    a.endAngle = a.x1, delete a.x1;\n    a.radius = a.y, delete a.y;\n    a.innerRadius = a.y0, delete a.y0;\n    a.outerRadius = a.y1, delete a.y1;\n    a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n    a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n    a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n    a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n    a.curve = function(_) {\n      return arguments.length ? c(curveRadial(_)) : c()._curve;\n    };\n\n    return a;\n  }\n\n  var circle = {\n    draw: function(context, size) {\n      var r = Math.sqrt(size / pi$2);\n      context.moveTo(r, 0);\n      context.arc(0, 0, r, 0, tau$2);\n    }\n  };\n\n  var cross$1 = {\n    draw: function(context, size) {\n      var r = Math.sqrt(size / 5) / 2;\n      context.moveTo(-3 * r, -r);\n      context.lineTo(-r, -r);\n      context.lineTo(-r, -3 * r);\n      context.lineTo(r, -3 * r);\n      context.lineTo(r, -r);\n      context.lineTo(3 * r, -r);\n      context.lineTo(3 * r, r);\n      context.lineTo(r, r);\n      context.lineTo(r, 3 * r);\n      context.lineTo(-r, 3 * r);\n      context.lineTo(-r, r);\n      context.lineTo(-3 * r, r);\n      context.closePath();\n    }\n  };\n\n  var tan30 = Math.sqrt(1 / 3);\n  var tan30_2 = tan30 * 2;\n  var diamond = {\n    draw: function(context, size) {\n      var y = Math.sqrt(size / tan30_2),\n          x = y * tan30;\n      context.moveTo(0, -y);\n      context.lineTo(x, 0);\n      context.lineTo(0, y);\n      context.lineTo(-x, 0);\n      context.closePath();\n    }\n  };\n\n  var ka = 0.89081309152928522810;\n  var kr = Math.sin(pi$2 / 10) / Math.sin(7 * pi$2 / 10);\n  var kx = Math.sin(tau$2 / 10) * kr;\n  var ky = -Math.cos(tau$2 / 10) * kr;\n  var star = {\n    draw: function(context, size) {\n      var r = Math.sqrt(size * ka),\n          x = kx * r,\n          y = ky * r;\n      context.moveTo(0, -r);\n      context.lineTo(x, y);\n      for (var i = 1; i < 5; ++i) {\n        var a = tau$2 * i / 5,\n            c = Math.cos(a),\n            s = Math.sin(a);\n        context.lineTo(s * r, -c * r);\n        context.lineTo(c * x - s * y, s * x + c * y);\n      }\n      context.closePath();\n    }\n  };\n\n  var square = {\n    draw: function(context, size) {\n      var w = Math.sqrt(size),\n          x = -w / 2;\n      context.rect(x, x, w, w);\n    }\n  };\n\n  var sqrt3 = Math.sqrt(3);\n\n  var triangle = {\n    draw: function(context, size) {\n      var y = -Math.sqrt(size / (sqrt3 * 3));\n      context.moveTo(0, y * 2);\n      context.lineTo(-sqrt3 * y, -y);\n      context.lineTo(sqrt3 * y, -y);\n      context.closePath();\n    }\n  };\n\n  var c = -0.5;\n  var s = Math.sqrt(3) / 2;\n  var k = 1 / Math.sqrt(12);\n  var a = (k / 2 + 1) * 3;\n  var wye = {\n    draw: function(context, size) {\n      var r = Math.sqrt(size / a),\n          x0 = r / 2,\n          y0 = r * k,\n          x1 = x0,\n          y1 = r * k + r,\n          x2 = -x1,\n          y2 = y1;\n      context.moveTo(x0, y0);\n      context.lineTo(x1, y1);\n      context.lineTo(x2, y2);\n      context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n      context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n      context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n      context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n      context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n      context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n      context.closePath();\n    }\n  };\n\n  var symbols = [\n    circle,\n    cross$1,\n    diamond,\n    square,\n    star,\n    triangle,\n    wye\n  ];\n\n  function symbol() {\n    var type = constant$1(circle),\n        size = constant$1(64),\n        context = null;\n\n    function symbol() {\n      var buffer;\n      if (!context) context = buffer = path();\n      type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n      if (buffer) return context = null, buffer + \"\" || null;\n    }\n\n    symbol.type = function(_) {\n      return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$1(_), symbol) : type;\n    };\n\n    symbol.size = function(_) {\n      return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$1(+_), symbol) : size;\n    };\n\n    symbol.context = function(_) {\n      return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n    };\n\n    return symbol;\n  }\n\n  function noop() {}\n\n  function point(that, x, y) {\n    that._context.bezierCurveTo(\n      (2 * that._x0 + that._x1) / 3,\n      (2 * that._y0 + that._y1) / 3,\n      (that._x0 + 2 * that._x1) / 3,\n      (that._y0 + 2 * that._y1) / 3,\n      (that._x0 + 4 * that._x1 + x) / 6,\n      (that._y0 + 4 * that._y1 + y) / 6\n    );\n  }\n\n  function Basis(context) {\n    this._context = context;\n  }\n\n  Basis.prototype = {\n    areaStart: function() {\n      this._line = 0;\n    },\n    areaEnd: function() {\n      this._line = NaN;\n    },\n    lineStart: function() {\n      this._x0 = this._x1 =\n      this._y0 = this._y1 = NaN;\n      this._point = 0;\n    },\n    lineEnd: function() {\n      switch (this._point) {\n        case 3: point(this, this._x1, this._y1); // proceed\n        case 2: this._context.lineTo(this._x1, this._y1); break;\n      }\n      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n      this._line = 1 - this._line;\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n      switch (this._point) {\n        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n        case 1: this._point = 2; break;\n        case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n        default: point(this, x, y); break;\n      }\n      this._x0 = this._x1, this._x1 = x;\n      this._y0 = this._y1, this._y1 = y;\n    }\n  };\n\n  function basis(context) {\n    return new Basis(context);\n  }\n\n  function BasisClosed(context) {\n    this._context = context;\n  }\n\n  BasisClosed.prototype = {\n    areaStart: noop,\n    areaEnd: noop,\n    lineStart: function() {\n      this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n      this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n      this._point = 0;\n    },\n    lineEnd: function() {\n      switch (this._point) {\n        case 1: {\n          this._context.moveTo(this._x2, this._y2);\n          this._context.closePath();\n          break;\n        }\n        case 2: {\n          this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n          this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n          this._context.closePath();\n          break;\n        }\n        case 3: {\n          this.point(this._x2, this._y2);\n          this.point(this._x3, this._y3);\n          this.point(this._x4, this._y4);\n          break;\n        }\n      }\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n      switch (this._point) {\n        case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n        case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n        case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n        default: point(this, x, y); break;\n      }\n      this._x0 = this._x1, this._x1 = x;\n      this._y0 = this._y1, this._y1 = y;\n    }\n  };\n\n  function basisClosed(context) {\n    return new BasisClosed(context);\n  }\n\n  function BasisOpen(context) {\n    this._context = context;\n  }\n\n  BasisOpen.prototype = {\n    areaStart: function() {\n      this._line = 0;\n    },\n    areaEnd: function() {\n      this._line = NaN;\n    },\n    lineStart: function() {\n      this._x0 = this._x1 =\n      this._y0 = this._y1 = NaN;\n      this._point = 0;\n    },\n    lineEnd: function() {\n      if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n      this._line = 1 - this._line;\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n      switch (this._point) {\n        case 0: this._point = 1; break;\n        case 1: this._point = 2; break;\n        case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n        case 3: this._point = 4; // proceed\n        default: point(this, x, y); break;\n      }\n      this._x0 = this._x1, this._x1 = x;\n      this._y0 = this._y1, this._y1 = y;\n    }\n  };\n\n  function basisOpen(context) {\n    return new BasisOpen(context);\n  }\n\n  function Bundle(context, beta) {\n    this._basis = new Basis(context);\n    this._beta = beta;\n  }\n\n  Bundle.prototype = {\n    lineStart: function() {\n      this._x = [];\n      this._y = [];\n      this._basis.lineStart();\n    },\n    lineEnd: function() {\n      var x = this._x,\n          y = this._y,\n          j = x.length - 1;\n\n      if (j > 0) {\n        var x0 = x[0],\n            y0 = y[0],\n            dx = x[j] - x0,\n            dy = y[j] - y0,\n            i = -1,\n            t;\n\n        while (++i <= j) {\n          t = i / j;\n          this._basis.point(\n            this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n            this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n          );\n        }\n      }\n\n      this._x = this._y = null;\n      this._basis.lineEnd();\n    },\n    point: function(x, y) {\n      this._x.push(+x);\n      this._y.push(+y);\n    }\n  };\n\n  var bundle = (function custom(beta) {\n\n    function bundle(context) {\n      return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n    }\n\n    bundle.beta = function(beta) {\n      return custom(+beta);\n    };\n\n    return bundle;\n  })(0.85);\n\n  function point$1(that, x, y) {\n    that._context.bezierCurveTo(\n      that._x1 + that._k * (that._x2 - that._x0),\n      that._y1 + that._k * (that._y2 - that._y0),\n      that._x2 + that._k * (that._x1 - x),\n      that._y2 + that._k * (that._y1 - y),\n      that._x2,\n      that._y2\n    );\n  }\n\n  function Cardinal(context, tension) {\n    this._context = context;\n    this._k = (1 - tension) / 6;\n  }\n\n  Cardinal.prototype = {\n    areaStart: function() {\n      this._line = 0;\n    },\n    areaEnd: function() {\n      this._line = NaN;\n    },\n    lineStart: function() {\n      this._x0 = this._x1 = this._x2 =\n      this._y0 = this._y1 = this._y2 = NaN;\n      this._point = 0;\n    },\n    lineEnd: function() {\n      switch (this._point) {\n        case 2: this._context.lineTo(this._x2, this._y2); break;\n        case 3: point$1(this, this._x1, this._y1); break;\n      }\n      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n      this._line = 1 - this._line;\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n      switch (this._point) {\n        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n        case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n        case 2: this._point = 3; // proceed\n        default: point$1(this, x, y); break;\n      }\n      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n    }\n  };\n\n  var cardinal = (function custom(tension) {\n\n    function cardinal(context) {\n      return new Cardinal(context, tension);\n    }\n\n    cardinal.tension = function(tension) {\n      return custom(+tension);\n    };\n\n    return cardinal;\n  })(0);\n\n  function CardinalClosed(context, tension) {\n    this._context = context;\n    this._k = (1 - tension) / 6;\n  }\n\n  CardinalClosed.prototype = {\n    areaStart: noop,\n    areaEnd: noop,\n    lineStart: function() {\n      this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n      this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n      this._point = 0;\n    },\n    lineEnd: function() {\n      switch (this._point) {\n        case 1: {\n          this._context.moveTo(this._x3, this._y3);\n          this._context.closePath();\n          break;\n        }\n        case 2: {\n          this._context.lineTo(this._x3, this._y3);\n          this._context.closePath();\n          break;\n        }\n        case 3: {\n          this.point(this._x3, this._y3);\n          this.point(this._x4, this._y4);\n          this.point(this._x5, this._y5);\n          break;\n        }\n      }\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n      switch (this._point) {\n        case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n        case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n        case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n        default: point$1(this, x, y); break;\n      }\n      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n    }\n  };\n\n  var cardinalClosed = (function custom(tension) {\n\n    function cardinal(context) {\n      return new CardinalClosed(context, tension);\n    }\n\n    cardinal.tension = function(tension) {\n      return custom(+tension);\n    };\n\n    return cardinal;\n  })(0);\n\n  function CardinalOpen(context, tension) {\n    this._context = context;\n    this._k = (1 - tension) / 6;\n  }\n\n  CardinalOpen.prototype = {\n    areaStart: function() {\n      this._line = 0;\n    },\n    areaEnd: function() {\n      this._line = NaN;\n    },\n    lineStart: function() {\n      this._x0 = this._x1 = this._x2 =\n      this._y0 = this._y1 = this._y2 = NaN;\n      this._point = 0;\n    },\n    lineEnd: function() {\n      if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n      this._line = 1 - this._line;\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n      switch (this._point) {\n        case 0: this._point = 1; break;\n        case 1: this._point = 2; break;\n        case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n        case 3: this._point = 4; // proceed\n        default: point$1(this, x, y); break;\n      }\n      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n    }\n  };\n\n  var cardinalOpen = (function custom(tension) {\n\n    function cardinal(context) {\n      return new CardinalOpen(context, tension);\n    }\n\n    cardinal.tension = function(tension) {\n      return custom(+tension);\n    };\n\n    return cardinal;\n  })(0);\n\n  function point$2(that, x, y) {\n    var x1 = that._x1,\n        y1 = that._y1,\n        x2 = that._x2,\n        y2 = that._y2;\n\n    if (that._l01_a > epsilon$1) {\n      var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n          n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n      x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n      y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n    }\n\n    if (that._l23_a > epsilon$1) {\n      var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n          m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n      x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n      y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n    }\n\n    that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n  }\n\n  function CatmullRom(context, alpha) {\n    this._context = context;\n    this._alpha = alpha;\n  }\n\n  CatmullRom.prototype = {\n    areaStart: function() {\n      this._line = 0;\n    },\n    areaEnd: function() {\n      this._line = NaN;\n    },\n    lineStart: function() {\n      this._x0 = this._x1 = this._x2 =\n      this._y0 = this._y1 = this._y2 = NaN;\n      this._l01_a = this._l12_a = this._l23_a =\n      this._l01_2a = this._l12_2a = this._l23_2a =\n      this._point = 0;\n    },\n    lineEnd: function() {\n      switch (this._point) {\n        case 2: this._context.lineTo(this._x2, this._y2); break;\n        case 3: this.point(this, this._x2, this._y2); break;\n      }\n      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n      this._line = 1 - this._line;\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n\n      if (this._point) {\n        var x23 = this._x2 - x,\n            y23 = this._y2 - y;\n        this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n      }\n\n      switch (this._point) {\n        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n        case 1: this._point = 2; break;\n        case 2: this._point = 3; // proceed\n        default: point$2(this, x, y); break;\n      }\n\n      this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n      this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n    }\n  };\n\n  var catmullRom = (function custom(alpha) {\n\n    function catmullRom(context) {\n      return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n    }\n\n    catmullRom.alpha = function(alpha) {\n      return custom(+alpha);\n    };\n\n    return catmullRom;\n  })(0.5);\n\n  function CatmullRomClosed(context, alpha) {\n    this._context = context;\n    this._alpha = alpha;\n  }\n\n  CatmullRomClosed.prototype = {\n    areaStart: noop,\n    areaEnd: noop,\n    lineStart: function() {\n      this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n      this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n      this._l01_a = this._l12_a = this._l23_a =\n      this._l01_2a = this._l12_2a = this._l23_2a =\n      this._point = 0;\n    },\n    lineEnd: function() {\n      switch (this._point) {\n        case 1: {\n          this._context.moveTo(this._x3, this._y3);\n          this._context.closePath();\n          break;\n        }\n        case 2: {\n          this._context.lineTo(this._x3, this._y3);\n          this._context.closePath();\n          break;\n        }\n        case 3: {\n          this.point(this._x3, this._y3);\n          this.point(this._x4, this._y4);\n          this.point(this._x5, this._y5);\n          break;\n        }\n      }\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n\n      if (this._point) {\n        var x23 = this._x2 - x,\n            y23 = this._y2 - y;\n        this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n      }\n\n      switch (this._point) {\n        case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n        case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n        case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n        default: point$2(this, x, y); break;\n      }\n\n      this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n      this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n    }\n  };\n\n  var catmullRomClosed = (function custom(alpha) {\n\n    function catmullRom(context) {\n      return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n    }\n\n    catmullRom.alpha = function(alpha) {\n      return custom(+alpha);\n    };\n\n    return catmullRom;\n  })(0.5);\n\n  function CatmullRomOpen(context, alpha) {\n    this._context = context;\n    this._alpha = alpha;\n  }\n\n  CatmullRomOpen.prototype = {\n    areaStart: function() {\n      this._line = 0;\n    },\n    areaEnd: function() {\n      this._line = NaN;\n    },\n    lineStart: function() {\n      this._x0 = this._x1 = this._x2 =\n      this._y0 = this._y1 = this._y2 = NaN;\n      this._l01_a = this._l12_a = this._l23_a =\n      this._l01_2a = this._l12_2a = this._l23_2a =\n      this._point = 0;\n    },\n    lineEnd: function() {\n      if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n      this._line = 1 - this._line;\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n\n      if (this._point) {\n        var x23 = this._x2 - x,\n            y23 = this._y2 - y;\n        this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n      }\n\n      switch (this._point) {\n        case 0: this._point = 1; break;\n        case 1: this._point = 2; break;\n        case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n        case 3: this._point = 4; // proceed\n        default: point$2(this, x, y); break;\n      }\n\n      this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n      this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n    }\n  };\n\n  var catmullRomOpen = (function custom(alpha) {\n\n    function catmullRom(context) {\n      return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n    }\n\n    catmullRom.alpha = function(alpha) {\n      return custom(+alpha);\n    };\n\n    return catmullRom;\n  })(0.5);\n\n  function LinearClosed(context) {\n    this._context = context;\n  }\n\n  LinearClosed.prototype = {\n    areaStart: noop,\n    areaEnd: noop,\n    lineStart: function() {\n      this._point = 0;\n    },\n    lineEnd: function() {\n      if (this._point) this._context.closePath();\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n      if (this._point) this._context.lineTo(x, y);\n      else this._point = 1, this._context.moveTo(x, y);\n    }\n  };\n\n  function linearClosed(context) {\n    return new LinearClosed(context);\n  }\n\n  function sign(x) {\n    return x < 0 ? -1 : 1;\n  }\n\n  // Calculate the slopes of the tangents (Hermite-type interpolation) based on\n  // the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n  // Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n  // NOV(II), P. 443, 1990.\n  function slope3(that, x2, y2) {\n    var h0 = that._x1 - that._x0,\n        h1 = x2 - that._x1,\n        s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n        s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n        p = (s0 * h1 + s1 * h0) / (h0 + h1);\n    return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n  }\n\n  // Calculate a one-sided slope.\n  function slope2(that, t) {\n    var h = that._x1 - that._x0;\n    return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n  }\n\n  // According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n  // \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n  // with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\n  function point$3(that, t0, t1) {\n    var x0 = that._x0,\n        y0 = that._y0,\n        x1 = that._x1,\n        y1 = that._y1,\n        dx = (x1 - x0) / 3;\n    that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n  }\n\n  function MonotoneX(context) {\n    this._context = context;\n  }\n\n  MonotoneX.prototype = {\n    areaStart: function() {\n      this._line = 0;\n    },\n    areaEnd: function() {\n      this._line = NaN;\n    },\n    lineStart: function() {\n      this._x0 = this._x1 =\n      this._y0 = this._y1 =\n      this._t0 = NaN;\n      this._point = 0;\n    },\n    lineEnd: function() {\n      switch (this._point) {\n        case 2: this._context.lineTo(this._x1, this._y1); break;\n        case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n      }\n      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n      this._line = 1 - this._line;\n    },\n    point: function(x, y) {\n      var t1 = NaN;\n\n      x = +x, y = +y;\n      if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n      switch (this._point) {\n        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n        case 1: this._point = 2; break;\n        case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n        default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n      }\n\n      this._x0 = this._x1, this._x1 = x;\n      this._y0 = this._y1, this._y1 = y;\n      this._t0 = t1;\n    }\n  }\n\n  function MonotoneY(context) {\n    this._context = new ReflectContext(context);\n  }\n\n  (MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n    MonotoneX.prototype.point.call(this, y, x);\n  };\n\n  function ReflectContext(context) {\n    this._context = context;\n  }\n\n  ReflectContext.prototype = {\n    moveTo: function(x, y) { this._context.moveTo(y, x); },\n    closePath: function() { this._context.closePath(); },\n    lineTo: function(x, y) { this._context.lineTo(y, x); },\n    bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n  };\n\n  function monotoneX(context) {\n    return new MonotoneX(context);\n  }\n\n  function monotoneY(context) {\n    return new MonotoneY(context);\n  }\n\n  function Natural(context) {\n    this._context = context;\n  }\n\n  Natural.prototype = {\n    areaStart: function() {\n      this._line = 0;\n    },\n    areaEnd: function() {\n      this._line = NaN;\n    },\n    lineStart: function() {\n      this._x = [];\n      this._y = [];\n    },\n    lineEnd: function() {\n      var x = this._x,\n          y = this._y,\n          n = x.length;\n\n      if (n) {\n        this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n        if (n === 2) {\n          this._context.lineTo(x[1], y[1]);\n        } else {\n          var px = controlPoints(x),\n              py = controlPoints(y);\n          for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n            this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n          }\n        }\n      }\n\n      if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n      this._line = 1 - this._line;\n      this._x = this._y = null;\n    },\n    point: function(x, y) {\n      this._x.push(+x);\n      this._y.push(+y);\n    }\n  };\n\n  // See https://www.particleincell.com/2012/bezier-splines/ for derivation.\n  function controlPoints(x) {\n    var i,\n        n = x.length - 1,\n        m,\n        a = new Array(n),\n        b = new Array(n),\n        r = new Array(n);\n    a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n    for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n    a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n    for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n    a[n - 1] = r[n - 1] / b[n - 1];\n    for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n    b[n - 1] = (x[n] + a[n - 1]) / 2;\n    for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n    return [a, b];\n  }\n\n  function natural(context) {\n    return new Natural(context);\n  }\n\n  function Step(context, t) {\n    this._context = context;\n    this._t = t;\n  }\n\n  Step.prototype = {\n    areaStart: function() {\n      this._line = 0;\n    },\n    areaEnd: function() {\n      this._line = NaN;\n    },\n    lineStart: function() {\n      this._x = this._y = NaN;\n      this._point = 0;\n    },\n    lineEnd: function() {\n      if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n      if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n      switch (this._point) {\n        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n        case 1: this._point = 2; // proceed\n        default: {\n          if (this._t <= 0) {\n            this._context.lineTo(this._x, y);\n            this._context.lineTo(x, y);\n          } else {\n            var x1 = this._x * (1 - this._t) + x * this._t;\n            this._context.lineTo(x1, this._y);\n            this._context.lineTo(x1, y);\n          }\n          break;\n        }\n      }\n      this._x = x, this._y = y;\n    }\n  };\n\n  function step(context) {\n    return new Step(context, 0.5);\n  }\n\n  function stepBefore(context) {\n    return new Step(context, 0);\n  }\n\n  function stepAfter(context) {\n    return new Step(context, 1);\n  }\n\n  var slice$2 = Array.prototype.slice;\n\n  function none(series, order) {\n    if (!((n = series.length) > 1)) return;\n    for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n      s0 = s1, s1 = series[order[i]];\n      for (var j = 0; j < m; ++j) {\n        s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n      }\n    }\n  }\n\n  function none$1(series) {\n    var n = series.length, o = new Array(n);\n    while (--n >= 0) o[n] = n;\n    return o;\n  }\n\n  function stackValue(d, key) {\n    return d[key];\n  }\n\n  function stack() {\n    var keys = constant$1([]),\n        order = none$1,\n        offset = none,\n        value = stackValue;\n\n    function stack(data) {\n      var kz = keys.apply(this, arguments),\n          i,\n          m = data.length,\n          n = kz.length,\n          sz = new Array(n),\n          oz;\n\n      for (i = 0; i < n; ++i) {\n        for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n          si[j] = sij = [0, +value(data[j], ki, j, data)];\n          sij.data = data[j];\n        }\n        si.key = ki;\n      }\n\n      for (i = 0, oz = order(sz); i < n; ++i) {\n        sz[oz[i]].index = i;\n      }\n\n      offset(sz, oz);\n      return sz;\n    }\n\n    stack.keys = function(_) {\n      return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$1(slice$2.call(_)), stack) : keys;\n    };\n\n    stack.value = function(_) {\n      return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$1(+_), stack) : value;\n    };\n\n    stack.order = function(_) {\n      return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant$1(slice$2.call(_)), stack) : order;\n    };\n\n    stack.offset = function(_) {\n      return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n    };\n\n    return stack;\n  }\n\n  function expand(series, order) {\n    if (!((n = series.length) > 0)) return;\n    for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n      for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n      if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n    }\n    none(series, order);\n  }\n\n  function silhouette(series, order) {\n    if (!((n = series.length) > 0)) return;\n    for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n      for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n      s0[j][1] += s0[j][0] = -y / 2;\n    }\n    none(series, order);\n  }\n\n  function wiggle(series, order) {\n    if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n    for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n      for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n        var si = series[order[i]],\n            sij0 = si[j][1] || 0,\n            sij1 = si[j - 1][1] || 0,\n            s3 = (sij0 - sij1) / 2;\n        for (var k = 0; k < i; ++k) {\n          var sk = series[order[k]],\n              skj0 = sk[j][1] || 0,\n              skj1 = sk[j - 1][1] || 0;\n          s3 += skj0 - skj1;\n        }\n        s1 += sij0, s2 += s3 * sij0;\n      }\n      s0[j - 1][1] += s0[j - 1][0] = y;\n      if (s1) y -= s2 / s1;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    none(series, order);\n  }\n\n  function ascending$1(series) {\n    var sums = series.map(sum$1);\n    return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n  }\n\n  function sum$1(series) {\n    var s = 0, i = -1, n = series.length, v;\n    while (++i < n) if (v = +series[i][1]) s += v;\n    return s;\n  }\n\n  function descending$2(series) {\n    return ascending$1(series).reverse();\n  }\n\n  function insideOut(series) {\n    var n = series.length,\n        i,\n        j,\n        sums = series.map(sum$1),\n        order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n        top = 0,\n        bottom = 0,\n        tops = [],\n        bottoms = [];\n\n    for (i = 0; i < n; ++i) {\n      j = order[i];\n      if (top < bottom) {\n        top += sums[j];\n        tops.push(j);\n      } else {\n        bottom += sums[j];\n        bottoms.push(j);\n      }\n    }\n\n    return bottoms.reverse().concat(tops);\n  }\n\n  function reverse(series) {\n    return none$1(series).reverse();\n  }\n\n  function define(constructor, factory, prototype) {\n    constructor.prototype = factory.prototype = prototype;\n    prototype.constructor = constructor;\n  }\n\n  function extend(parent, definition) {\n    var prototype = Object.create(parent.prototype);\n    for (var key in definition) prototype[key] = definition[key];\n    return prototype;\n  }\n\n  function Color() {}\n\n  var darker = 0.7;\n  var brighter = 1 / darker;\n\n  var reHex3 = /^#([0-9a-f]{3})$/;\n  var reHex6 = /^#([0-9a-f]{6})$/;\n  var reRgbInteger = /^rgb\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*\\)$/;\n  var reRgbPercent = /^rgb\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n  var reRgbaInteger = /^rgba\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n  var reRgbaPercent = /^rgba\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n  var reHslPercent = /^hsl\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n  var reHslaPercent = /^hsla\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n  var named = {\n    aliceblue: 0xf0f8ff,\n    antiquewhite: 0xfaebd7,\n    aqua: 0x00ffff,\n    aquamarine: 0x7fffd4,\n    azure: 0xf0ffff,\n    beige: 0xf5f5dc,\n    bisque: 0xffe4c4,\n    black: 0x000000,\n    blanchedalmond: 0xffebcd,\n    blue: 0x0000ff,\n    blueviolet: 0x8a2be2,\n    brown: 0xa52a2a,\n    burlywood: 0xdeb887,\n    cadetblue: 0x5f9ea0,\n    chartreuse: 0x7fff00,\n    chocolate: 0xd2691e,\n    coral: 0xff7f50,\n    cornflowerblue: 0x6495ed,\n    cornsilk: 0xfff8dc,\n    crimson: 0xdc143c,\n    cyan: 0x00ffff,\n    darkblue: 0x00008b,\n    darkcyan: 0x008b8b,\n    darkgoldenrod: 0xb8860b,\n    darkgray: 0xa9a9a9,\n    darkgreen: 0x006400,\n    darkgrey: 0xa9a9a9,\n    darkkhaki: 0xbdb76b,\n    darkmagenta: 0x8b008b,\n    darkolivegreen: 0x556b2f,\n    darkorange: 0xff8c00,\n    darkorchid: 0x9932cc,\n    darkred: 0x8b0000,\n    darksalmon: 0xe9967a,\n    darkseagreen: 0x8fbc8f,\n    darkslateblue: 0x483d8b,\n    darkslategray: 0x2f4f4f,\n    darkslategrey: 0x2f4f4f,\n    darkturquoise: 0x00ced1,\n    darkviolet: 0x9400d3,\n    deeppink: 0xff1493,\n    deepskyblue: 0x00bfff,\n    dimgray: 0x696969,\n    dimgrey: 0x696969,\n    dodgerblue: 0x1e90ff,\n    firebrick: 0xb22222,\n    floralwhite: 0xfffaf0,\n    forestgreen: 0x228b22,\n    fuchsia: 0xff00ff,\n    gainsboro: 0xdcdcdc,\n    ghostwhite: 0xf8f8ff,\n    gold: 0xffd700,\n    goldenrod: 0xdaa520,\n    gray: 0x808080,\n    green: 0x008000,\n    greenyellow: 0xadff2f,\n    grey: 0x808080,\n    honeydew: 0xf0fff0,\n    hotpink: 0xff69b4,\n    indianred: 0xcd5c5c,\n    indigo: 0x4b0082,\n    ivory: 0xfffff0,\n    khaki: 0xf0e68c,\n    lavender: 0xe6e6fa,\n    lavenderblush: 0xfff0f5,\n    lawngreen: 0x7cfc00,\n    lemonchiffon: 0xfffacd,\n    lightblue: 0xadd8e6,\n    lightcoral: 0xf08080,\n    lightcyan: 0xe0ffff,\n    lightgoldenrodyellow: 0xfafad2,\n    lightgray: 0xd3d3d3,\n    lightgreen: 0x90ee90,\n    lightgrey: 0xd3d3d3,\n    lightpink: 0xffb6c1,\n    lightsalmon: 0xffa07a,\n    lightseagreen: 0x20b2aa,\n    lightskyblue: 0x87cefa,\n    lightslategray: 0x778899,\n    lightslategrey: 0x778899,\n    lightsteelblue: 0xb0c4de,\n    lightyellow: 0xffffe0,\n    lime: 0x00ff00,\n    limegreen: 0x32cd32,\n    linen: 0xfaf0e6,\n    magenta: 0xff00ff,\n    maroon: 0x800000,\n    mediumaquamarine: 0x66cdaa,\n    mediumblue: 0x0000cd,\n    mediumorchid: 0xba55d3,\n    mediumpurple: 0x9370db,\n    mediumseagreen: 0x3cb371,\n    mediumslateblue: 0x7b68ee,\n    mediumspringgreen: 0x00fa9a,\n    mediumturquoise: 0x48d1cc,\n    mediumvioletred: 0xc71585,\n    midnightblue: 0x191970,\n    mintcream: 0xf5fffa,\n    mistyrose: 0xffe4e1,\n    moccasin: 0xffe4b5,\n    navajowhite: 0xffdead,\n    navy: 0x000080,\n    oldlace: 0xfdf5e6,\n    olive: 0x808000,\n    olivedrab: 0x6b8e23,\n    orange: 0xffa500,\n    orangered: 0xff4500,\n    orchid: 0xda70d6,\n    palegoldenrod: 0xeee8aa,\n    palegreen: 0x98fb98,\n    paleturquoise: 0xafeeee,\n    palevioletred: 0xdb7093,\n    papayawhip: 0xffefd5,\n    peachpuff: 0xffdab9,\n    peru: 0xcd853f,\n    pink: 0xffc0cb,\n    plum: 0xdda0dd,\n    powderblue: 0xb0e0e6,\n    purple: 0x800080,\n    rebeccapurple: 0x663399,\n    red: 0xff0000,\n    rosybrown: 0xbc8f8f,\n    royalblue: 0x4169e1,\n    saddlebrown: 0x8b4513,\n    salmon: 0xfa8072,\n    sandybrown: 0xf4a460,\n    seagreen: 0x2e8b57,\n    seashell: 0xfff5ee,\n    sienna: 0xa0522d,\n    silver: 0xc0c0c0,\n    skyblue: 0x87ceeb,\n    slateblue: 0x6a5acd,\n    slategray: 0x708090,\n    slategrey: 0x708090,\n    snow: 0xfffafa,\n    springgreen: 0x00ff7f,\n    steelblue: 0x4682b4,\n    tan: 0xd2b48c,\n    teal: 0x008080,\n    thistle: 0xd8bfd8,\n    tomato: 0xff6347,\n    turquoise: 0x40e0d0,\n    violet: 0xee82ee,\n    wheat: 0xf5deb3,\n    white: 0xffffff,\n    whitesmoke: 0xf5f5f5,\n    yellow: 0xffff00,\n    yellowgreen: 0x9acd32\n  };\n\n  define(Color, color, {\n    displayable: function() {\n      return this.rgb().displayable();\n    },\n    toString: function() {\n      return this.rgb() + \"\";\n    }\n  });\n\n  function color(format) {\n    var m;\n    format = (format + \"\").trim().toLowerCase();\n    return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n        : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n        : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n        : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n        : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n        : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n        : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n        : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n        : named.hasOwnProperty(format) ? rgbn(named[format])\n        : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n        : null;\n  }\n\n  function rgbn(n) {\n    return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n  }\n\n  function rgba(r, g, b, a) {\n    if (a <= 0) r = g = b = NaN;\n    return new Rgb(r, g, b, a);\n  }\n\n  function rgbConvert(o) {\n    if (!(o instanceof Color)) o = color(o);\n    if (!o) return new Rgb;\n    o = o.rgb();\n    return new Rgb(o.r, o.g, o.b, o.opacity);\n  }\n\n  function colorRgb(r, g, b, opacity) {\n    return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n  }\n\n  function Rgb(r, g, b, opacity) {\n    this.r = +r;\n    this.g = +g;\n    this.b = +b;\n    this.opacity = +opacity;\n  }\n\n  define(Rgb, colorRgb, extend(Color, {\n    brighter: function(k) {\n      k = k == null ? brighter : Math.pow(brighter, k);\n      return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n    },\n    darker: function(k) {\n      k = k == null ? darker : Math.pow(darker, k);\n      return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n    },\n    rgb: function() {\n      return this;\n    },\n    displayable: function() {\n      return (0 <= this.r && this.r <= 255)\n          && (0 <= this.g && this.g <= 255)\n          && (0 <= this.b && this.b <= 255)\n          && (0 <= this.opacity && this.opacity <= 1);\n    },\n    toString: function() {\n      var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n      return (a === 1 ? \"rgb(\" : \"rgba(\")\n          + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n          + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n          + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n          + (a === 1 ? \")\" : \", \" + a + \")\");\n    }\n  }));\n\n  function hsla(h, s, l, a) {\n    if (a <= 0) h = s = l = NaN;\n    else if (l <= 0 || l >= 1) h = s = NaN;\n    else if (s <= 0) h = NaN;\n    return new Hsl(h, s, l, a);\n  }\n\n  function hslConvert(o) {\n    if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n    if (!(o instanceof Color)) o = color(o);\n    if (!o) return new Hsl;\n    if (o instanceof Hsl) return o;\n    o = o.rgb();\n    var r = o.r / 255,\n        g = o.g / 255,\n        b = o.b / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        h = NaN,\n        s = max - min,\n        l = (max + min) / 2;\n    if (s) {\n      if (r === max) h = (g - b) / s + (g < b) * 6;\n      else if (g === max) h = (b - r) / s + 2;\n      else h = (r - g) / s + 4;\n      s /= l < 0.5 ? max + min : 2 - max - min;\n      h *= 60;\n    } else {\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new Hsl(h, s, l, o.opacity);\n  }\n\n  function colorHsl(h, s, l, opacity) {\n    return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n  }\n\n  function Hsl(h, s, l, opacity) {\n    this.h = +h;\n    this.s = +s;\n    this.l = +l;\n    this.opacity = +opacity;\n  }\n\n  define(Hsl, colorHsl, extend(Color, {\n    brighter: function(k) {\n      k = k == null ? brighter : Math.pow(brighter, k);\n      return new Hsl(this.h, this.s, this.l * k, this.opacity);\n    },\n    darker: function(k) {\n      k = k == null ? darker : Math.pow(darker, k);\n      return new Hsl(this.h, this.s, this.l * k, this.opacity);\n    },\n    rgb: function() {\n      var h = this.h % 360 + (this.h < 0) * 360,\n          s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n          l = this.l,\n          m2 = l + (l < 0.5 ? l : 1 - l) * s,\n          m1 = 2 * l - m2;\n      return new Rgb(\n        hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n        hsl2rgb(h, m1, m2),\n        hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n        this.opacity\n      );\n    },\n    displayable: function() {\n      return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n          && (0 <= this.l && this.l <= 1)\n          && (0 <= this.opacity && this.opacity <= 1);\n    }\n  }));\n\n  /* From FvD 13.37, CSS Color Module Level 3 */\n  function hsl2rgb(h, m1, m2) {\n    return (h < 60 ? m1 + (m2 - m1) * h / 60\n        : h < 180 ? m2\n        : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n        : m1) * 255;\n  }\n\n  var deg2rad = Math.PI / 180;\n  var rad2deg = 180 / Math.PI;\n\n  var Kn = 18;\n  var Xn = 0.950470;\n  var Yn = 1;\n  var Zn = 1.088830;\n  var t0 = 4 / 29;\n  var t1 = 6 / 29;\n  var t2 = 3 * t1 * t1;\n  var t3 = t1 * t1 * t1;\n  function labConvert(o) {\n    if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n    if (o instanceof Hcl) {\n      var h = o.h * deg2rad;\n      return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n    }\n    if (!(o instanceof Rgb)) o = rgbConvert(o);\n    var b = rgb2xyz(o.r),\n        a = rgb2xyz(o.g),\n        l = rgb2xyz(o.b),\n        x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n        y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n        z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n    return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n  }\n\n  function lab(l, a, b, opacity) {\n    return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n  }\n\n  function Lab(l, a, b, opacity) {\n    this.l = +l;\n    this.a = +a;\n    this.b = +b;\n    this.opacity = +opacity;\n  }\n\n  define(Lab, lab, extend(Color, {\n    brighter: function(k) {\n      return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n    },\n    darker: function(k) {\n      return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n    },\n    rgb: function() {\n      var y = (this.l + 16) / 116,\n          x = isNaN(this.a) ? y : y + this.a / 500,\n          z = isNaN(this.b) ? y : y - this.b / 200;\n      y = Yn * lab2xyz(y);\n      x = Xn * lab2xyz(x);\n      z = Zn * lab2xyz(z);\n      return new Rgb(\n        xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n        xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n        xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n        this.opacity\n      );\n    }\n  }));\n\n  function xyz2lab(t) {\n    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n  }\n\n  function lab2xyz(t) {\n    return t > t1 ? t * t * t : t2 * (t - t0);\n  }\n\n  function xyz2rgb(x) {\n    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n  }\n\n  function rgb2xyz(x) {\n    return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n  }\n\n  function hclConvert(o) {\n    if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n    if (!(o instanceof Lab)) o = labConvert(o);\n    var h = Math.atan2(o.b, o.a) * rad2deg;\n    return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n  }\n\n  function colorHcl(h, c, l, opacity) {\n    return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n  }\n\n  function Hcl(h, c, l, opacity) {\n    this.h = +h;\n    this.c = +c;\n    this.l = +l;\n    this.opacity = +opacity;\n  }\n\n  define(Hcl, colorHcl, extend(Color, {\n    brighter: function(k) {\n      return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n    },\n    darker: function(k) {\n      return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n    },\n    rgb: function() {\n      return labConvert(this).rgb();\n    }\n  }));\n\n  var A = -0.14861;\n  var B = +1.78277;\n  var C = -0.29227;\n  var D = -0.90649;\n  var E = +1.97294;\n  var ED = E * D;\n  var EB = E * B;\n  var BC_DA = B * C - D * A;\n  function cubehelixConvert(o) {\n    if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n    if (!(o instanceof Rgb)) o = rgbConvert(o);\n    var r = o.r / 255,\n        g = o.g / 255,\n        b = o.b / 255,\n        l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n        bl = b - l,\n        k = (E * (g - l) - C * bl) / D,\n        s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n        h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n    return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n  }\n\n  function cubehelix(h, s, l, opacity) {\n    return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n  }\n\n  function Cubehelix(h, s, l, opacity) {\n    this.h = +h;\n    this.s = +s;\n    this.l = +l;\n    this.opacity = +opacity;\n  }\n\n  define(Cubehelix, cubehelix, extend(Color, {\n    brighter: function(k) {\n      k = k == null ? brighter : Math.pow(brighter, k);\n      return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n    },\n    darker: function(k) {\n      k = k == null ? darker : Math.pow(darker, k);\n      return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n    },\n    rgb: function() {\n      var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n          l = +this.l,\n          a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n          cosh = Math.cos(h),\n          sinh = Math.sin(h);\n      return new Rgb(\n        255 * (l + a * (A * cosh + B * sinh)),\n        255 * (l + a * (C * cosh + D * sinh)),\n        255 * (l + a * (E * cosh)),\n        this.opacity\n      );\n    }\n  }));\n\n  function basis$1(t1, v0, v1, v2, v3) {\n    var t2 = t1 * t1, t3 = t2 * t1;\n    return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n        + (4 - 6 * t2 + 3 * t3) * v1\n        + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n        + t3 * v3) / 6;\n  }\n\n  function basis$2(values) {\n    var n = values.length - 1;\n    return function(t) {\n      var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n          v1 = values[i],\n          v2 = values[i + 1],\n          v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n          v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n      return basis$1((t - i / n) * n, v0, v1, v2, v3);\n    };\n  }\n\n  function basisClosed$1(values) {\n    var n = values.length;\n    return function(t) {\n      var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n          v0 = values[(i + n - 1) % n],\n          v1 = values[i % n],\n          v2 = values[(i + 1) % n],\n          v3 = values[(i + 2) % n];\n      return basis$1((t - i / n) * n, v0, v1, v2, v3);\n    };\n  }\n\n  function constant$2(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function linear$1(a, d) {\n    return function(t) {\n      return a + t * d;\n    };\n  }\n\n  function exponential$1(a, b, y) {\n    return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n      return Math.pow(a + t * b, y);\n    };\n  }\n\n  function hue(a, b) {\n    var d = b - a;\n    return d ? linear$1(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$2(isNaN(a) ? b : a);\n  }\n\n  function gamma(y) {\n    return (y = +y) === 1 ? nogamma : function(a, b) {\n      return b - a ? exponential$1(a, b, y) : constant$2(isNaN(a) ? b : a);\n    };\n  }\n\n  function nogamma(a, b) {\n    var d = b - a;\n    return d ? linear$1(a, d) : constant$2(isNaN(a) ? b : a);\n  }\n\n  var interpolateRgb = (function rgbGamma(y) {\n    var color = gamma(y);\n\n    function rgb(start, end) {\n      var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n          g = color(start.g, end.g),\n          b = color(start.b, end.b),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.r = r(t);\n        start.g = g(t);\n        start.b = b(t);\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    rgb.gamma = rgbGamma;\n\n    return rgb;\n  })(1);\n\n  function rgbSpline(spline) {\n    return function(colors) {\n      var n = colors.length,\n          r = new Array(n),\n          g = new Array(n),\n          b = new Array(n),\n          i, color;\n      for (i = 0; i < n; ++i) {\n        color = colorRgb(colors[i]);\n        r[i] = color.r || 0;\n        g[i] = color.g || 0;\n        b[i] = color.b || 0;\n      }\n      r = spline(r);\n      g = spline(g);\n      b = spline(b);\n      color.opacity = 1;\n      return function(t) {\n        color.r = r(t);\n        color.g = g(t);\n        color.b = b(t);\n        return color + \"\";\n      };\n    };\n  }\n\n  var rgbBasis = rgbSpline(basis$2);\n  var rgbBasisClosed = rgbSpline(basisClosed$1);\n\n  function array$1(a, b) {\n    var nb = b ? b.length : 0,\n        na = a ? Math.min(nb, a.length) : 0,\n        x = new Array(nb),\n        c = new Array(nb),\n        i;\n\n    for (i = 0; i < na; ++i) x[i] = interpolate(a[i], b[i]);\n    for (; i < nb; ++i) c[i] = b[i];\n\n    return function(t) {\n      for (i = 0; i < na; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n\n  function date(a, b) {\n    var d = new Date;\n    return a = +a, b -= a, function(t) {\n      return d.setTime(a + b * t), d;\n    };\n  }\n\n  function interpolateNumber(a, b) {\n    return a = +a, b -= a, function(t) {\n      return a + b * t;\n    };\n  }\n\n  function object(a, b) {\n    var i = {},\n        c = {},\n        k;\n\n    if (a === null || typeof a !== \"object\") a = {};\n    if (b === null || typeof b !== \"object\") b = {};\n\n    for (k in b) {\n      if (k in a) {\n        i[k] = interpolate(a[k], b[k]);\n      } else {\n        c[k] = b[k];\n      }\n    }\n\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n\n  var reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n  var reB = new RegExp(reA.source, \"g\");\n  function zero(b) {\n    return function() {\n      return b;\n    };\n  }\n\n  function one(b) {\n    return function(t) {\n      return b(t) + \"\";\n    };\n  }\n\n  function interpolateString(a, b) {\n    var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n        am, // current match in a\n        bm, // current match in b\n        bs, // string preceding current number in b, if any\n        i = -1, // index in s\n        s = [], // string constants and placeholders\n        q = []; // number interpolators\n\n    // Coerce inputs to strings.\n    a = a + \"\", b = b + \"\";\n\n    // Interpolate pairs of numbers in a & b.\n    while ((am = reA.exec(a))\n        && (bm = reB.exec(b))) {\n      if ((bs = bm.index) > bi) { // a string precedes the next number in b\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; // coalesce with previous string\n        else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n        if (s[i]) s[i] += bm; // coalesce with previous string\n        else s[++i] = bm;\n      } else { // interpolate non-matching numbers\n        s[++i] = null;\n        q.push({i: i, x: interpolateNumber(am, bm)});\n      }\n      bi = reB.lastIndex;\n    }\n\n    // Add remains of b.\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n\n    // Special optimization for only a single match.\n    // Otherwise, interpolate each of the numbers and rejoin the string.\n    return s.length < 2 ? (q[0]\n        ? one(q[0].x)\n        : zero(b))\n        : (b = q.length, function(t) {\n            for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n            return s.join(\"\");\n          });\n  }\n\n  function interpolate(a, b) {\n    var t = typeof b, c;\n    return b == null || t === \"boolean\" ? constant$2(b)\n        : (t === \"number\" ? interpolateNumber\n        : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n        : b instanceof color ? interpolateRgb\n        : b instanceof Date ? date\n        : Array.isArray(b) ? array$1\n        : isNaN(b) ? object\n        : interpolateNumber)(a, b);\n  }\n\n  function interpolateRound(a, b) {\n    return a = +a, b -= a, function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n\n  var degrees = 180 / Math.PI;\n\n  var identity$2 = {\n    translateX: 0,\n    translateY: 0,\n    rotate: 0,\n    skewX: 0,\n    scaleX: 1,\n    scaleY: 1\n  };\n\n  function decompose(a, b, c, d, e, f) {\n    var scaleX, scaleY, skewX;\n    if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n    if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n    if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n    if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n    return {\n      translateX: e,\n      translateY: f,\n      rotate: Math.atan2(b, a) * degrees,\n      skewX: Math.atan(skewX) * degrees,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n\n  var cssNode;\n  var cssRoot;\n  var cssView;\n  var svgNode;\n  function parseCss(value) {\n    if (value === \"none\") return identity$2;\n    if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n    cssNode.style.transform = value;\n    value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n    cssRoot.removeChild(cssNode);\n    value = value.slice(7, -1).split(\",\");\n    return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n  }\n\n  function parseSvg(value) {\n    if (value == null) return identity$2;\n    if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n    svgNode.setAttribute(\"transform\", value);\n    if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n    value = value.matrix;\n    return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n  }\n\n  function interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n    function pop(s) {\n      return s.length ? s.pop() + \" \" : \"\";\n    }\n\n    function translate(xa, ya, xb, yb, s, q) {\n      if (xa !== xb || ya !== yb) {\n        var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n        q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n      } else if (xb || yb) {\n        s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n      }\n    }\n\n    function rotate(a, b, s, q) {\n      if (a !== b) {\n        if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n        q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n      } else if (b) {\n        s.push(pop(s) + \"rotate(\" + b + degParen);\n      }\n    }\n\n    function skewX(a, b, s, q) {\n      if (a !== b) {\n        q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n      } else if (b) {\n        s.push(pop(s) + \"skewX(\" + b + degParen);\n      }\n    }\n\n    function scale(xa, ya, xb, yb, s, q) {\n      if (xa !== xb || ya !== yb) {\n        var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n        q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n      } else if (xb !== 1 || yb !== 1) {\n        s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n      }\n    }\n\n    return function(a, b) {\n      var s = [], // string constants and placeholders\n          q = []; // number interpolators\n      a = parse(a), b = parse(b);\n      translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n      rotate(a.rotate, b.rotate, s, q);\n      skewX(a.skewX, b.skewX, s, q);\n      scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n      a = b = null; // gc\n      return function(t) {\n        var i = -1, n = q.length, o;\n        while (++i < n) s[(o = q[i]).i] = o.x(t);\n        return s.join(\"\");\n      };\n    };\n  }\n\n  var interpolateTransform$1 = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\n  var interpolateTransform$2 = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\n  var rho = Math.SQRT2;\n  var rho2 = 2;\n  var rho4 = 4;\n  var epsilon2 = 1e-12;\n  function cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n\n  function sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n\n  function tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n\n  // p0 = [ux0, uy0, w0]\n  // p1 = [ux1, uy1, w1]\n  function interpolateZoom(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n        ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n        dx = ux1 - ux0,\n        dy = uy1 - uy0,\n        d2 = dx * dx + dy * dy,\n        i,\n        S;\n\n    // Special case for u0 ≅ u1.\n    if (d2 < epsilon2) {\n      S = Math.log(w1 / w0) / rho;\n      i = function(t) {\n        return [\n          ux0 + t * dx,\n          uy0 + t * dy,\n          w0 * Math.exp(rho * t * S)\n        ];\n      }\n    }\n\n    // General case.\n    else {\n      var d1 = Math.sqrt(d2),\n          b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n          b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / rho;\n      i = function(t) {\n        var s = t * S,\n            coshr0 = cosh(r0),\n            u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n        return [\n          ux0 + u * dx,\n          uy0 + u * dy,\n          w0 * coshr0 / cosh(rho * s + r0)\n        ];\n      }\n    }\n\n    i.duration = S * 1000;\n\n    return i;\n  }\n\n  function hsl(hue) {\n    return function(start, end) {\n      var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(t);\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n  }\n\n  var hsl$1 = hsl(hue);\n  var hslLong = hsl(nogamma);\n\n  function lab$1(start, end) {\n    var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n        a = nogamma(start.a, end.a),\n        b = nogamma(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.l = l(t);\n      start.a = a(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  function hcl(hue) {\n    return function(start, end) {\n      var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n          c = nogamma(start.c, end.c),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.c = c(t);\n        start.l = l(t);\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n  }\n\n  var hcl$1 = hcl(hue);\n  var hclLong = hcl(nogamma);\n\n  function cubehelix$1(hue) {\n    return (function cubehelixGamma(y) {\n      y = +y;\n\n      function cubehelix$$(start, end) {\n        var h = hue((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n            s = nogamma(start.s, end.s),\n            l = nogamma(start.l, end.l),\n            opacity = nogamma(start.opacity, end.opacity);\n        return function(t) {\n          start.h = h(t);\n          start.s = s(t);\n          start.l = l(Math.pow(t, y));\n          start.opacity = opacity(t);\n          return start + \"\";\n        };\n      }\n\n      cubehelix$$.gamma = cubehelixGamma;\n\n      return cubehelix$$;\n    })(1);\n  }\n\n  var cubehelix$2 = cubehelix$1(hue);\n  var interpolateCubehelixLong = cubehelix$1(nogamma);\n\n  function quantize(interpolator, n) {\n    var samples = new Array(n);\n    for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n    return samples;\n  }\n\n  var noop$1 = {value: function() {}};\n\n  function dispatch() {\n    for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n      if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n      _[t] = [];\n    }\n    return new Dispatch(_);\n  }\n\n  function Dispatch(_) {\n    this._ = _;\n  }\n\n  function parseTypenames(typenames, types) {\n    return typenames.trim().split(/^|\\s+/).map(function(t) {\n      var name = \"\", i = t.indexOf(\".\");\n      if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n      if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n      return {type: t, name: name};\n    });\n  }\n\n  Dispatch.prototype = dispatch.prototype = {\n    constructor: Dispatch,\n    on: function(typename, callback) {\n      var _ = this._,\n          T = parseTypenames(typename + \"\", _),\n          t,\n          i = -1,\n          n = T.length;\n\n      // If no callback was specified, return the callback of the given type and name.\n      if (arguments.length < 2) {\n        while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n        return;\n      }\n\n      // If a type was specified, set the callback for the given type and name.\n      // Otherwise, if a null callback was specified, remove callbacks of the given name.\n      if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      while (++i < n) {\n        if (t = (typename = T[i]).type) _[t] = set$1(_[t], typename.name, callback);\n        else if (callback == null) for (t in _) _[t] = set$1(_[t], typename.name, null);\n      }\n\n      return this;\n    },\n    copy: function() {\n      var copy = {}, _ = this._;\n      for (var t in _) copy[t] = _[t].slice();\n      return new Dispatch(copy);\n    },\n    call: function(type, that) {\n      if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n      if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n      for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n    },\n    apply: function(type, that, args) {\n      if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n      for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n    }\n  };\n\n  function get(type, name) {\n    for (var i = 0, n = type.length, c; i < n; ++i) {\n      if ((c = type[i]).name === name) {\n        return c.value;\n      }\n    }\n  }\n\n  function set$1(type, name, callback) {\n    for (var i = 0, n = type.length; i < n; ++i) {\n      if (type[i].name === name) {\n        type[i] = noop$1, type = type.slice(0, i).concat(type.slice(i + 1));\n        break;\n      }\n    }\n    if (callback != null) type.push({name: name, value: callback});\n    return type;\n  }\n\n  function objectConverter(columns) {\n    return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n      return JSON.stringify(name) + \": d[\" + i + \"]\";\n    }).join(\",\") + \"}\");\n  }\n\n  function customConverter(columns, f) {\n    var object = objectConverter(columns);\n    return function(row, i) {\n      return f(object(row), i, columns);\n    };\n  }\n\n  // Compute unique columns in order of discovery.\n  function inferColumns(rows) {\n    var columnSet = Object.create(null),\n        columns = [];\n\n    rows.forEach(function(row) {\n      for (var column in row) {\n        if (!(column in columnSet)) {\n          columns.push(columnSet[column] = column);\n        }\n      }\n    });\n\n    return columns;\n  }\n\n  function dsv(delimiter) {\n    var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n        delimiterCode = delimiter.charCodeAt(0);\n\n    function parse(text, f) {\n      var convert, columns, rows = parseRows(text, function(row, i) {\n        if (convert) return convert(row, i - 1);\n        columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n      });\n      rows.columns = columns;\n      return rows;\n    }\n\n    function parseRows(text, f) {\n      var EOL = {}, // sentinel value for end-of-line\n          EOF = {}, // sentinel value for end-of-file\n          rows = [], // output rows\n          N = text.length,\n          I = 0, // current character index\n          n = 0, // the current line number\n          t, // the current token\n          eol; // is the current token followed by EOL?\n\n      function token() {\n        if (I >= N) return EOF; // special case: end of file\n        if (eol) return eol = false, EOL; // special case: end of line\n\n        // special case: quotes\n        var j = I, c;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n        }\n\n        // common case: find next delimiter or newline\n        while (I < N) {\n          var k = 1;\n          c = text.charCodeAt(I++);\n          if (c === 10) eol = true; // \\n\n          else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n          else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n\n        // special case: last token before EOF\n        return text.slice(j);\n      }\n\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n\n      return rows;\n    }\n\n    function format(rows, columns) {\n      if (columns == null) columns = inferColumns(rows);\n      return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n        return columns.map(function(column) {\n          return formatValue(row[column]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    }\n\n    function formatRows(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    }\n\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n\n    function formatValue(text) {\n      return text == null ? \"\"\n          : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n          : text;\n    }\n\n    return {\n      parse: parse,\n      parseRows: parseRows,\n      format: format,\n      formatRows: formatRows\n    };\n  }\n\n  var csv = dsv(\",\");\n\n  var csvParse = csv.parse;\n  var csvParseRows = csv.parseRows;\n  var csvFormat = csv.format;\n  var csvFormatRows = csv.formatRows;\n\n  var tsv = dsv(\"\\t\");\n\n  var tsvParse = tsv.parse;\n  var tsvParseRows = tsv.parseRows;\n  var tsvFormat = tsv.format;\n  var tsvFormatRows = tsv.formatRows;\n\n  function request(url, callback) {\n    var request,\n        event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n        mimeType,\n        headers = map$1(),\n        xhr = new XMLHttpRequest,\n        user = null,\n        password = null,\n        response,\n        responseType,\n        timeout = 0;\n\n    // If IE does not support CORS, use XDomainRequest.\n    if (typeof XDomainRequest !== \"undefined\"\n        && !(\"withCredentials\" in xhr)\n        && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n    \"onload\" in xhr\n        ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n        : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n    function respond(o) {\n      var status = xhr.status, result;\n      if (!status && hasResponse(xhr)\n          || status >= 200 && status < 300\n          || status === 304) {\n        if (response) {\n          try {\n            result = response.call(request, xhr);\n          } catch (e) {\n            event.call(\"error\", request, e);\n            return;\n          }\n        } else {\n          result = xhr;\n        }\n        event.call(\"load\", request, result);\n      } else {\n        event.call(\"error\", request, o);\n      }\n    }\n\n    xhr.onprogress = function(e) {\n      event.call(\"progress\", request, e);\n    };\n\n    request = {\n      header: function(name, value) {\n        name = (name + \"\").toLowerCase();\n        if (arguments.length < 2) return headers.get(name);\n        if (value == null) headers.remove(name);\n        else headers.set(name, value + \"\");\n        return request;\n      },\n\n      // If mimeType is non-null and no Accept header is set, a default is used.\n      mimeType: function(value) {\n        if (!arguments.length) return mimeType;\n        mimeType = value == null ? null : value + \"\";\n        return request;\n      },\n\n      // Specifies what type the response value should take;\n      // for instance, arraybuffer, blob, document, or text.\n      responseType: function(value) {\n        if (!arguments.length) return responseType;\n        responseType = value;\n        return request;\n      },\n\n      timeout: function(value) {\n        if (!arguments.length) return timeout;\n        timeout = +value;\n        return request;\n      },\n\n      user: function(value) {\n        return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n      },\n\n      password: function(value) {\n        return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n      },\n\n      // Specify how to convert the response content to a specific type;\n      // changes the callback value on \"load\" events.\n      response: function(value) {\n        response = value;\n        return request;\n      },\n\n      // Alias for send(\"GET\", …).\n      get: function(data, callback) {\n        return request.send(\"GET\", data, callback);\n      },\n\n      // Alias for send(\"POST\", …).\n      post: function(data, callback) {\n        return request.send(\"POST\", data, callback);\n      },\n\n      // If callback is non-null, it will be used for error and load events.\n      send: function(method, data, callback) {\n        xhr.open(method, url, true, user, password);\n        if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n        if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n        if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n        if (responseType != null) xhr.responseType = responseType;\n        if (timeout > 0) xhr.timeout = timeout;\n        if (callback == null && typeof data === \"function\") callback = data, data = null;\n        if (callback != null && callback.length === 1) callback = fixCallback(callback);\n        if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n        event.call(\"beforesend\", request, xhr);\n        xhr.send(data == null ? null : data);\n        return request;\n      },\n\n      abort: function() {\n        xhr.abort();\n        return request;\n      },\n\n      on: function() {\n        var value = event.on.apply(event, arguments);\n        return value === event ? request : value;\n      }\n    };\n\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return request.get(callback);\n    }\n\n    return request;\n  }\n\n  function fixCallback(callback) {\n    return function(error, xhr) {\n      callback(error == null ? xhr : null);\n    };\n  }\n\n  function hasResponse(xhr) {\n    var type = xhr.responseType;\n    return type && type !== \"text\"\n        ? xhr.response // null on error\n        : xhr.responseText; // \"\" on error\n  }\n\n  function type(defaultMimeType, response) {\n    return function(url, callback) {\n      var r = request(url).mimeType(defaultMimeType).response(response);\n      if (callback != null) {\n        if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n        return r.get(callback);\n      }\n      return r;\n    };\n  }\n\n  var html = type(\"text/html\", function(xhr) {\n    return document.createRange().createContextualFragment(xhr.responseText);\n  });\n\n  var json = type(\"application/json\", function(xhr) {\n    return JSON.parse(xhr.responseText);\n  });\n\n  var text = type(\"text/plain\", function(xhr) {\n    return xhr.responseText;\n  });\n\n  var xml = type(\"application/xml\", function(xhr) {\n    var xml = xhr.responseXML;\n    if (!xml) throw new Error(\"parse error\");\n    return xml;\n  });\n\n  function dsv$1(defaultMimeType, parse) {\n    return function(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var r = request(url).mimeType(defaultMimeType);\n      r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n      r.row(row);\n      return callback ? r.get(callback) : r;\n    };\n  }\n\n  function responseOf(parse, row) {\n    return function(request) {\n      return parse(request.responseText, row);\n    };\n  }\n\n  var csv$1 = dsv$1(\"text/csv\", csvParse);\n\n  var tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\n  var frame = 0;\n  var timeout = 0;\n  var interval = 0;\n  var pokeDelay = 1000;\n  var taskHead;\n  var taskTail;\n  var clockLast = 0;\n  var clockNow = 0;\n  var clockSkew = 0;\n  var clock = typeof performance === \"object\" && performance.now ? performance : Date;\n  var setFrame = typeof requestAnimationFrame === \"function\"\n          ? (clock === Date ? function(f) { requestAnimationFrame(function() { f(clock.now()); }); } : requestAnimationFrame)\n          : function(f) { setTimeout(f, 17); };\n  function now() {\n    return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n  }\n\n  function clearNow() {\n    clockNow = 0;\n  }\n\n  function Timer() {\n    this._call =\n    this._time =\n    this._next = null;\n  }\n\n  Timer.prototype = timer.prototype = {\n    constructor: Timer,\n    restart: function(callback, delay, time) {\n      if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n      time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n      if (!this._next && taskTail !== this) {\n        if (taskTail) taskTail._next = this;\n        else taskHead = this;\n        taskTail = this;\n      }\n      this._call = callback;\n      this._time = time;\n      sleep();\n    },\n    stop: function() {\n      if (this._call) {\n        this._call = null;\n        this._time = Infinity;\n        sleep();\n      }\n    }\n  };\n\n  function timer(callback, delay, time) {\n    var t = new Timer;\n    t.restart(callback, delay, time);\n    return t;\n  }\n\n  function timerFlush() {\n    now(); // Get the current time, if not already set.\n    ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n    var t = taskHead, e;\n    while (t) {\n      if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n      t = t._next;\n    }\n    --frame;\n  }\n\n  function wake(time) {\n    clockNow = (clockLast = time || clock.now()) + clockSkew;\n    frame = timeout = 0;\n    try {\n      timerFlush();\n    } finally {\n      frame = 0;\n      nap();\n      clockNow = 0;\n    }\n  }\n\n  function poke$1() {\n    var now = clock.now(), delay = now - clockLast;\n    if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n  }\n\n  function nap() {\n    var t0, t1 = taskHead, t2, time = Infinity;\n    while (t1) {\n      if (t1._call) {\n        if (time > t1._time) time = t1._time;\n        t0 = t1, t1 = t1._next;\n      } else {\n        t2 = t1._next, t1._next = null;\n        t1 = t0 ? t0._next = t2 : taskHead = t2;\n      }\n    }\n    taskTail = t0;\n    sleep(time);\n  }\n\n  function sleep(time) {\n    if (frame) return; // Soonest alarm already set, or will be.\n    if (timeout) timeout = clearTimeout(timeout);\n    var delay = time - clockNow;\n    if (delay > 24) {\n      if (time < Infinity) timeout = setTimeout(wake, delay);\n      if (interval) interval = clearInterval(interval);\n    } else {\n      if (!interval) interval = setInterval(poke$1, pokeDelay);\n      frame = 1, setFrame(wake);\n    }\n  }\n\n  function timeout$1(callback, delay, time) {\n    var t = new Timer;\n    delay = delay == null ? 0 : +delay;\n    t.restart(function(elapsed) {\n      t.stop();\n      callback(elapsed + delay);\n    }, delay, time);\n    return t;\n  }\n\n  function interval$1(callback, delay, time) {\n    var t = new Timer, total = delay;\n    if (delay == null) return t.restart(callback, delay, time), t;\n    delay = +delay, time = time == null ? now() : +time;\n    t.restart(function tick(elapsed) {\n      elapsed += total;\n      t.restart(tick, total += delay, time);\n      callback(elapsed);\n    }, delay, time);\n    return t;\n  }\n\nvar   t0$1 = new Date;\nvar   t1$1 = new Date;\n  function newInterval(floori, offseti, count, field) {\n\n    function interval(date) {\n      return floori(date = new Date(+date)), date;\n    }\n\n    interval.floor = interval;\n\n    interval.ceil = function(date) {\n      return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n    };\n\n    interval.round = function(date) {\n      var d0 = interval(date),\n          d1 = interval.ceil(date);\n      return date - d0 < d1 - date ? d0 : d1;\n    };\n\n    interval.offset = function(date, step) {\n      return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n    };\n\n    interval.range = function(start, stop, step) {\n      var range = [];\n      start = interval.ceil(start);\n      step = step == null ? 1 : Math.floor(step);\n      if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n      do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n      return range;\n    };\n\n    interval.filter = function(test) {\n      return newInterval(function(date) {\n        while (floori(date), !test(date)) date.setTime(date - 1);\n      }, function(date, step) {\n        while (--step >= 0) while (offseti(date, 1), !test(date));\n      });\n    };\n\n    if (count) {\n      interval.count = function(start, end) {\n        t0$1.setTime(+start), t1$1.setTime(+end);\n        floori(t0$1), floori(t1$1);\n        return Math.floor(count(t0$1, t1$1));\n      };\n\n      interval.every = function(step) {\n        step = Math.floor(step);\n        return !isFinite(step) || !(step > 0) ? null\n            : !(step > 1) ? interval\n            : interval.filter(field\n                ? function(d) { return field(d) % step === 0; }\n                : function(d) { return interval.count(0, d) % step === 0; });\n      };\n    }\n\n    return interval;\n  }\n\n  var millisecond = newInterval(function() {\n    // noop\n  }, function(date, step) {\n    date.setTime(+date + step);\n  }, function(start, end) {\n    return end - start;\n  });\n\n  // An optimized implementation for this simple case.\n  millisecond.every = function(k) {\n    k = Math.floor(k);\n    if (!isFinite(k) || !(k > 0)) return null;\n    if (!(k > 1)) return millisecond;\n    return newInterval(function(date) {\n      date.setTime(Math.floor(date / k) * k);\n    }, function(date, step) {\n      date.setTime(+date + step * k);\n    }, function(start, end) {\n      return (end - start) / k;\n    });\n  };\n\n  var milliseconds = millisecond.range;\n\n  var durationSecond = 1e3;\n  var durationMinute = 6e4;\n  var durationHour = 36e5;\n  var durationDay = 864e5;\n  var durationWeek = 6048e5;\n\n  var second = newInterval(function(date) {\n    date.setTime(Math.floor(date / durationSecond) * durationSecond);\n  }, function(date, step) {\n    date.setTime(+date + step * durationSecond);\n  }, function(start, end) {\n    return (end - start) / durationSecond;\n  }, function(date) {\n    return date.getUTCSeconds();\n  });\n\n  var seconds = second.range;\n\n  var minute = newInterval(function(date) {\n    date.setTime(Math.floor(date / durationMinute) * durationMinute);\n  }, function(date, step) {\n    date.setTime(+date + step * durationMinute);\n  }, function(start, end) {\n    return (end - start) / durationMinute;\n  }, function(date) {\n    return date.getMinutes();\n  });\n\n  var minutes = minute.range;\n\n  var hour = newInterval(function(date) {\n    var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n    if (offset < 0) offset += durationHour;\n    date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n  }, function(date, step) {\n    date.setTime(+date + step * durationHour);\n  }, function(start, end) {\n    return (end - start) / durationHour;\n  }, function(date) {\n    return date.getHours();\n  });\n\n  var hours = hour.range;\n\n  var day = newInterval(function(date) {\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n\n  var days = day.range;\n\n  function weekday(i) {\n    return newInterval(function(date) {\n      date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n      date.setHours(0, 0, 0, 0);\n    }, function(date, step) {\n      date.setDate(date.getDate() + step * 7);\n    }, function(start, end) {\n      return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n    });\n  }\n\n  var timeWeek = weekday(0);\n  var timeMonday = weekday(1);\n  var tuesday = weekday(2);\n  var wednesday = weekday(3);\n  var thursday = weekday(4);\n  var friday = weekday(5);\n  var saturday = weekday(6);\n\n  var sundays = timeWeek.range;\n  var mondays = timeMonday.range;\n  var tuesdays = tuesday.range;\n  var wednesdays = wednesday.range;\n  var thursdays = thursday.range;\n  var fridays = friday.range;\n  var saturdays = saturday.range;\n\n  var month = newInterval(function(date) {\n    date.setDate(1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setMonth(date.getMonth() + step);\n  }, function(start, end) {\n    return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n  }, function(date) {\n    return date.getMonth();\n  });\n\n  var months = month.range;\n\n  var year = newInterval(function(date) {\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step);\n  }, function(start, end) {\n    return end.getFullYear() - start.getFullYear();\n  }, function(date) {\n    return date.getFullYear();\n  });\n\n  // An optimized implementation for this simple case.\n  year.every = function(k) {\n    return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n      date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n      date.setMonth(0, 1);\n      date.setHours(0, 0, 0, 0);\n    }, function(date, step) {\n      date.setFullYear(date.getFullYear() + step * k);\n    });\n  };\n\n  var years = year.range;\n\n  var utcMinute = newInterval(function(date) {\n    date.setUTCSeconds(0, 0);\n  }, function(date, step) {\n    date.setTime(+date + step * durationMinute);\n  }, function(start, end) {\n    return (end - start) / durationMinute;\n  }, function(date) {\n    return date.getUTCMinutes();\n  });\n\n  var utcMinutes = utcMinute.range;\n\n  var utcHour = newInterval(function(date) {\n    date.setUTCMinutes(0, 0, 0);\n  }, function(date, step) {\n    date.setTime(+date + step * durationHour);\n  }, function(start, end) {\n    return (end - start) / durationHour;\n  }, function(date) {\n    return date.getUTCHours();\n  });\n\n  var utcHours = utcHour.range;\n\n  var utcDay = newInterval(function(date) {\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step);\n  }, function(start, end) {\n    return (end - start) / durationDay;\n  }, function(date) {\n    return date.getUTCDate() - 1;\n  });\n\n  var utcDays = utcDay.range;\n\n  function utcWeekday(i) {\n    return newInterval(function(date) {\n      date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n      date.setUTCHours(0, 0, 0, 0);\n    }, function(date, step) {\n      date.setUTCDate(date.getUTCDate() + step * 7);\n    }, function(start, end) {\n      return (end - start) / durationWeek;\n    });\n  }\n\n  var utcWeek = utcWeekday(0);\n  var utcMonday = utcWeekday(1);\n  var utcTuesday = utcWeekday(2);\n  var utcWednesday = utcWeekday(3);\n  var utcThursday = utcWeekday(4);\n  var utcFriday = utcWeekday(5);\n  var utcSaturday = utcWeekday(6);\n\n  var utcSundays = utcWeek.range;\n  var utcMondays = utcMonday.range;\n  var utcTuesdays = utcTuesday.range;\n  var utcWednesdays = utcWednesday.range;\n  var utcThursdays = utcThursday.range;\n  var utcFridays = utcFriday.range;\n  var utcSaturdays = utcSaturday.range;\n\n  var utcMonth = newInterval(function(date) {\n    date.setUTCDate(1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCMonth(date.getUTCMonth() + step);\n  }, function(start, end) {\n    return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n  }, function(date) {\n    return date.getUTCMonth();\n  });\n\n  var utcMonths = utcMonth.range;\n\n  var utcYear = newInterval(function(date) {\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step);\n  }, function(start, end) {\n    return end.getUTCFullYear() - start.getUTCFullYear();\n  }, function(date) {\n    return date.getUTCFullYear();\n  });\n\n  // An optimized implementation for this simple case.\n  utcYear.every = function(k) {\n    return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n      date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n      date.setUTCMonth(0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n    }, function(date, step) {\n      date.setUTCFullYear(date.getUTCFullYear() + step * k);\n    });\n  };\n\n  var utcYears = utcYear.range;\n\n  // Computes the decimal coefficient and exponent of the specified number x with\n  // significant digits p, where x is positive and p is in [1, 21] or undefined.\n  // For example, formatDecimal(1.23) returns [\"123\", 0].\n  function formatDecimal(x, p) {\n    if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n    var i, coefficient = x.slice(0, i);\n\n    // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n    // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n    return [\n      coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n      +x.slice(i + 1)\n    ];\n  }\n\n  function exponent$1(x) {\n    return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n  }\n\n  function formatGroup(grouping, thousands) {\n    return function(value, width) {\n      var i = value.length,\n          t = [],\n          j = 0,\n          g = grouping[0],\n          length = 0;\n\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = grouping[j = (j + 1) % grouping.length];\n      }\n\n      return t.reverse().join(thousands);\n    };\n  }\n\n  function formatDefault(x, p) {\n    x = x.toPrecision(p);\n\n    out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n      switch (x[i]) {\n        case \".\": i0 = i1 = i; break;\n        case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n        case \"e\": break out;\n        default: if (i0 > 0) i0 = 0; break;\n      }\n    }\n\n    return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n  }\n\n  var prefixExponent;\n\n  function formatPrefixAuto(x, p) {\n    var d = formatDecimal(x, p);\n    if (!d) return x + \"\";\n    var coefficient = d[0],\n        exponent = d[1],\n        i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n        n = coefficient.length;\n    return i === n ? coefficient\n        : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n        : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n        : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n  }\n\n  function formatRounded(x, p) {\n    var d = formatDecimal(x, p);\n    if (!d) return x + \"\";\n    var coefficient = d[0],\n        exponent = d[1];\n    return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n        : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n        : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n  }\n\n  var formatTypes = {\n    \"\": formatDefault,\n    \"%\": function(x, p) { return (x * 100).toFixed(p); },\n    \"b\": function(x) { return Math.round(x).toString(2); },\n    \"c\": function(x) { return x + \"\"; },\n    \"d\": function(x) { return Math.round(x).toString(10); },\n    \"e\": function(x, p) { return x.toExponential(p); },\n    \"f\": function(x, p) { return x.toFixed(p); },\n    \"g\": function(x, p) { return x.toPrecision(p); },\n    \"o\": function(x) { return Math.round(x).toString(8); },\n    \"p\": function(x, p) { return formatRounded(x * 100, p); },\n    \"r\": formatRounded,\n    \"s\": formatPrefixAuto,\n    \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n    \"x\": function(x) { return Math.round(x).toString(16); }\n  };\n\n  // [[fill]align][sign][symbol][0][width][,][.precision][type]\n  var re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\n  function formatSpecifier(specifier) {\n    return new FormatSpecifier(specifier);\n  }\n\n  function FormatSpecifier(specifier) {\n    if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n    var match,\n        fill = match[1] || \" \",\n        align = match[2] || \">\",\n        sign = match[3] || \"-\",\n        symbol = match[4] || \"\",\n        zero = !!match[5],\n        width = match[6] && +match[6],\n        comma = !!match[7],\n        precision = match[8] && +match[8].slice(1),\n        type = match[9] || \"\";\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // Map invalid types to the default format.\n    else if (!formatTypes[type]) type = \"\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    this.fill = fill;\n    this.align = align;\n    this.sign = sign;\n    this.symbol = symbol;\n    this.zero = zero;\n    this.width = width;\n    this.comma = comma;\n    this.precision = precision;\n    this.type = type;\n  }\n\n  FormatSpecifier.prototype.toString = function() {\n    return this.fill\n        + this.align\n        + this.sign\n        + this.symbol\n        + (this.zero ? \"0\" : \"\")\n        + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n        + (this.comma ? \",\" : \"\")\n        + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n        + this.type;\n  };\n\n  var prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\n  function identity$3(x) {\n    return x;\n  }\n\n  function formatLocale(locale) {\n    var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n        currency = locale.currency,\n        decimal = locale.decimal;\n\n    function newFormat(specifier) {\n      specifier = formatSpecifier(specifier);\n\n      var fill = specifier.fill,\n          align = specifier.align,\n          sign = specifier.sign,\n          symbol = specifier.symbol,\n          zero = specifier.zero,\n          width = specifier.width,\n          comma = specifier.comma,\n          precision = specifier.precision,\n          type = specifier.type;\n\n      // Compute the prefix and suffix.\n      // For SI-prefix, the suffix is lazily computed.\n      var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n          suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n      // What format function should we use?\n      // Is this an integer type?\n      // Can this type generate exponential notation?\n      var formatType = formatTypes[type],\n          maybeSuffix = !type || /[defgprs%]/.test(type);\n\n      // Set the default precision if not specified,\n      // or clamp the specified precision to the supported range.\n      // For significant precision, it must be in [1, 21].\n      // For fixed precision, it must be in [0, 20].\n      precision = precision == null ? (type ? 6 : 12)\n          : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n          : Math.max(0, Math.min(20, precision));\n\n      function format(value) {\n        var valuePrefix = prefix,\n            valueSuffix = suffix,\n            i, n, c;\n\n        if (type === \"c\") {\n          valueSuffix = formatType(value) + valueSuffix;\n          value = \"\";\n        } else {\n          value = +value;\n\n          // Convert negative to positive, and compute the prefix.\n          // Note that -0 is not less than 0, but 1 / -0 is!\n          var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\n          // Perform the initial formatting.\n          value = formatType(value, precision);\n\n          // If the original value was negative, it may be rounded to zero during\n          // formatting; treat this as (positive) zero.\n          if (valueNegative) {\n            i = -1, n = value.length;\n            valueNegative = false;\n            while (++i < n) {\n              if (c = value.charCodeAt(i), (48 < c && c < 58)\n                  || (type === \"x\" && 96 < c && c < 103)\n                  || (type === \"X\" && 64 < c && c < 71)) {\n                valueNegative = true;\n                break;\n              }\n            }\n          }\n\n          // Compute the prefix and suffix.\n          valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n          valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n          // Break the formatted value into the integer “value” part that can be\n          // grouped, and fractional or exponential “suffix” part that is not.\n          if (maybeSuffix) {\n            i = -1, n = value.length;\n            while (++i < n) {\n              if (c = value.charCodeAt(i), 48 > c || c > 57) {\n                valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n                value = value.slice(0, i);\n                break;\n              }\n            }\n          }\n        }\n\n        // If the fill character is not \"0\", grouping is applied before padding.\n        if (comma && !zero) value = group(value, Infinity);\n\n        // Compute the padding.\n        var length = valuePrefix.length + value.length + valueSuffix.length,\n            padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n        // If the fill character is \"0\", grouping is applied after padding.\n        if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n        // Reconstruct the final output based on the desired alignment.\n        switch (align) {\n          case \"<\": return valuePrefix + value + valueSuffix + padding;\n          case \"=\": return valuePrefix + padding + value + valueSuffix;\n          case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n        }\n        return padding + valuePrefix + value + valueSuffix;\n      }\n\n      format.toString = function() {\n        return specifier + \"\";\n      };\n\n      return format;\n    }\n\n    function formatPrefix(specifier, value) {\n      var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n          e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n          k = Math.pow(10, -e),\n          prefix = prefixes[8 + e / 3];\n      return function(value) {\n        return f(k * value) + prefix;\n      };\n    }\n\n    return {\n      format: newFormat,\n      formatPrefix: formatPrefix\n    };\n  }\n\n  var locale;\n  exports.format;\n  exports.formatPrefix;\n\n  defaultLocale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"$\", \"\"]\n  });\n\n  function defaultLocale(definition) {\n    locale = formatLocale(definition);\n    exports.format = locale.format;\n    exports.formatPrefix = locale.formatPrefix;\n    return locale;\n  }\n\n  function precisionFixed(step) {\n    return Math.max(0, -exponent$1(Math.abs(step)));\n  }\n\n  function precisionPrefix(step, value) {\n    return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n  }\n\n  function precisionRound(step, max) {\n    step = Math.abs(step), max = Math.abs(max) - step;\n    return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n  }\n\n  function localDate(d) {\n    if (0 <= d.y && d.y < 100) {\n      var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n      date.setFullYear(d.y);\n      return date;\n    }\n    return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n  }\n\n  function utcDate(d) {\n    if (0 <= d.y && d.y < 100) {\n      var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n      date.setUTCFullYear(d.y);\n      return date;\n    }\n    return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n  }\n\n  function newYear(y) {\n    return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n  }\n\n  function formatLocale$1(locale) {\n    var locale_dateTime = locale.dateTime,\n        locale_date = locale.date,\n        locale_time = locale.time,\n        locale_periods = locale.periods,\n        locale_weekdays = locale.days,\n        locale_shortWeekdays = locale.shortDays,\n        locale_months = locale.months,\n        locale_shortMonths = locale.shortMonths;\n\n    var periodRe = formatRe(locale_periods),\n        periodLookup = formatLookup(locale_periods),\n        weekdayRe = formatRe(locale_weekdays),\n        weekdayLookup = formatLookup(locale_weekdays),\n        shortWeekdayRe = formatRe(locale_shortWeekdays),\n        shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n        monthRe = formatRe(locale_months),\n        monthLookup = formatLookup(locale_months),\n        shortMonthRe = formatRe(locale_shortMonths),\n        shortMonthLookup = formatLookup(locale_shortMonths);\n\n    var formats = {\n      \"a\": formatShortWeekday,\n      \"A\": formatWeekday,\n      \"b\": formatShortMonth,\n      \"B\": formatMonth,\n      \"c\": null,\n      \"d\": formatDayOfMonth,\n      \"e\": formatDayOfMonth,\n      \"H\": formatHour24,\n      \"I\": formatHour12,\n      \"j\": formatDayOfYear,\n      \"L\": formatMilliseconds,\n      \"m\": formatMonthNumber,\n      \"M\": formatMinutes,\n      \"p\": formatPeriod,\n      \"S\": formatSeconds,\n      \"U\": formatWeekNumberSunday,\n      \"w\": formatWeekdayNumber,\n      \"W\": formatWeekNumberMonday,\n      \"x\": null,\n      \"X\": null,\n      \"y\": formatYear,\n      \"Y\": formatFullYear,\n      \"Z\": formatZone,\n      \"%\": formatLiteralPercent\n    };\n\n    var utcFormats = {\n      \"a\": formatUTCShortWeekday,\n      \"A\": formatUTCWeekday,\n      \"b\": formatUTCShortMonth,\n      \"B\": formatUTCMonth,\n      \"c\": null,\n      \"d\": formatUTCDayOfMonth,\n      \"e\": formatUTCDayOfMonth,\n      \"H\": formatUTCHour24,\n      \"I\": formatUTCHour12,\n      \"j\": formatUTCDayOfYear,\n      \"L\": formatUTCMilliseconds,\n      \"m\": formatUTCMonthNumber,\n      \"M\": formatUTCMinutes,\n      \"p\": formatUTCPeriod,\n      \"S\": formatUTCSeconds,\n      \"U\": formatUTCWeekNumberSunday,\n      \"w\": formatUTCWeekdayNumber,\n      \"W\": formatUTCWeekNumberMonday,\n      \"x\": null,\n      \"X\": null,\n      \"y\": formatUTCYear,\n      \"Y\": formatUTCFullYear,\n      \"Z\": formatUTCZone,\n      \"%\": formatLiteralPercent\n    };\n\n    var parses = {\n      \"a\": parseShortWeekday,\n      \"A\": parseWeekday,\n      \"b\": parseShortMonth,\n      \"B\": parseMonth,\n      \"c\": parseLocaleDateTime,\n      \"d\": parseDayOfMonth,\n      \"e\": parseDayOfMonth,\n      \"H\": parseHour24,\n      \"I\": parseHour24,\n      \"j\": parseDayOfYear,\n      \"L\": parseMilliseconds,\n      \"m\": parseMonthNumber,\n      \"M\": parseMinutes,\n      \"p\": parsePeriod,\n      \"S\": parseSeconds,\n      \"U\": parseWeekNumberSunday,\n      \"w\": parseWeekdayNumber,\n      \"W\": parseWeekNumberMonday,\n      \"x\": parseLocaleDate,\n      \"X\": parseLocaleTime,\n      \"y\": parseYear,\n      \"Y\": parseFullYear,\n      \"Z\": parseZone,\n      \"%\": parseLiteralPercent\n    };\n\n    // These recursive directive definitions must be deferred.\n    formats.x = newFormat(locale_date, formats);\n    formats.X = newFormat(locale_time, formats);\n    formats.c = newFormat(locale_dateTime, formats);\n    utcFormats.x = newFormat(locale_date, utcFormats);\n    utcFormats.X = newFormat(locale_time, utcFormats);\n    utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n    function newFormat(specifier, formats) {\n      return function(date) {\n        var string = [],\n            i = -1,\n            j = 0,\n            n = specifier.length,\n            c,\n            pad,\n            format;\n\n        if (!(date instanceof Date)) date = new Date(+date);\n\n        while (++i < n) {\n          if (specifier.charCodeAt(i) === 37) {\n            string.push(specifier.slice(j, i));\n            if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n            else pad = c === \"e\" ? \" \" : \"0\";\n            if (format = formats[c]) c = format(date, pad);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n\n        string.push(specifier.slice(j, i));\n        return string.join(\"\");\n      };\n    }\n\n    function newParse(specifier, newDate) {\n      return function(string) {\n        var d = newYear(1900),\n            i = parseSpecifier(d, specifier, string += \"\", 0);\n        if (i != string.length) return null;\n\n        // The am-pm flag is 0 for AM, and 1 for PM.\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n        // Convert day-of-week and week-of-year to day-of-year.\n        if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          var day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n          d.m = 0;\n          d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n        }\n\n        // If a time zone is specified, all fields are interpreted as UTC and then\n        // offset according to the specified time zone.\n        if (\"Z\" in d) {\n          d.H += d.Z / 100 | 0;\n          d.M += d.Z % 100;\n          return utcDate(d);\n        }\n\n        // Otherwise, all fields are in local time.\n        return newDate(d);\n      };\n    }\n\n    function parseSpecifier(d, specifier, string, j) {\n      var i = 0,\n          n = specifier.length,\n          m = string.length,\n          c,\n          parse;\n\n      while (i < n) {\n        if (j >= m) return -1;\n        c = specifier.charCodeAt(i++);\n        if (c === 37) {\n          c = specifier.charAt(i++);\n          parse = parses[c in pads ? specifier.charAt(i++) : c];\n          if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n\n      return j;\n    }\n\n    function parsePeriod(d, string, i) {\n      var n = periodRe.exec(string.slice(i));\n      return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseShortWeekday(d, string, i) {\n      var n = shortWeekdayRe.exec(string.slice(i));\n      return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseWeekday(d, string, i) {\n      var n = weekdayRe.exec(string.slice(i));\n      return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseShortMonth(d, string, i) {\n      var n = shortMonthRe.exec(string.slice(i));\n      return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseMonth(d, string, i) {\n      var n = monthRe.exec(string.slice(i));\n      return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseLocaleDateTime(d, string, i) {\n      return parseSpecifier(d, locale_dateTime, string, i);\n    }\n\n    function parseLocaleDate(d, string, i) {\n      return parseSpecifier(d, locale_date, string, i);\n    }\n\n    function parseLocaleTime(d, string, i) {\n      return parseSpecifier(d, locale_time, string, i);\n    }\n\n    function formatShortWeekday(d) {\n      return locale_shortWeekdays[d.getDay()];\n    }\n\n    function formatWeekday(d) {\n      return locale_weekdays[d.getDay()];\n    }\n\n    function formatShortMonth(d) {\n      return locale_shortMonths[d.getMonth()];\n    }\n\n    function formatMonth(d) {\n      return locale_months[d.getMonth()];\n    }\n\n    function formatPeriod(d) {\n      return locale_periods[+(d.getHours() >= 12)];\n    }\n\n    function formatUTCShortWeekday(d) {\n      return locale_shortWeekdays[d.getUTCDay()];\n    }\n\n    function formatUTCWeekday(d) {\n      return locale_weekdays[d.getUTCDay()];\n    }\n\n    function formatUTCShortMonth(d) {\n      return locale_shortMonths[d.getUTCMonth()];\n    }\n\n    function formatUTCMonth(d) {\n      return locale_months[d.getUTCMonth()];\n    }\n\n    function formatUTCPeriod(d) {\n      return locale_periods[+(d.getUTCHours() >= 12)];\n    }\n\n    return {\n      format: function(specifier) {\n        var f = newFormat(specifier += \"\", formats);\n        f.toString = function() { return specifier; };\n        return f;\n      },\n      parse: function(specifier) {\n        var p = newParse(specifier += \"\", localDate);\n        p.toString = function() { return specifier; };\n        return p;\n      },\n      utcFormat: function(specifier) {\n        var f = newFormat(specifier += \"\", utcFormats);\n        f.toString = function() { return specifier; };\n        return f;\n      },\n      utcParse: function(specifier) {\n        var p = newParse(specifier, utcDate);\n        p.toString = function() { return specifier; };\n        return p;\n      }\n    };\n  }\n\n  var pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n  var numberRe = /^\\s*\\d+/;\n  var percentRe = /^%/;\n  var requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  function pad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\",\n        string = (sign ? -value : value) + \"\",\n        length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n\n  function requote(s) {\n    return s.replace(requoteRe, \"\\\\$&\");\n  }\n\n  function formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n  }\n\n  function formatLookup(names) {\n    var map = {}, i = -1, n = names.length;\n    while (++i < n) map[names[i].toLowerCase()] = i;\n    return map;\n  }\n\n  function parseWeekdayNumber(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 1));\n    return n ? (d.w = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekNumberSunday(d, string, i) {\n    var n = numberRe.exec(string.slice(i));\n    return n ? (d.U = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekNumberMonday(d, string, i) {\n    var n = numberRe.exec(string.slice(i));\n    return n ? (d.W = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseFullYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 4));\n    return n ? (d.y = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n  }\n\n  function parseZone(d, string, i) {\n    var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n    return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n  }\n\n  function parseMonthNumber(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n  }\n\n  function parseDayOfMonth(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseDayOfYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 3));\n    return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseHour24(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.H = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseMinutes(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.M = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseSeconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.S = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseMilliseconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 3));\n    return n ? (d.L = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseLiteralPercent(d, string, i) {\n    var n = percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n\n  function formatDayOfMonth(d, p) {\n    return pad(d.getDate(), p, 2);\n  }\n\n  function formatHour24(d, p) {\n    return pad(d.getHours(), p, 2);\n  }\n\n  function formatHour12(d, p) {\n    return pad(d.getHours() % 12 || 12, p, 2);\n  }\n\n  function formatDayOfYear(d, p) {\n    return pad(1 + day.count(year(d), d), p, 3);\n  }\n\n  function formatMilliseconds(d, p) {\n    return pad(d.getMilliseconds(), p, 3);\n  }\n\n  function formatMonthNumber(d, p) {\n    return pad(d.getMonth() + 1, p, 2);\n  }\n\n  function formatMinutes(d, p) {\n    return pad(d.getMinutes(), p, 2);\n  }\n\n  function formatSeconds(d, p) {\n    return pad(d.getSeconds(), p, 2);\n  }\n\n  function formatWeekNumberSunday(d, p) {\n    return pad(timeWeek.count(year(d), d), p, 2);\n  }\n\n  function formatWeekdayNumber(d) {\n    return d.getDay();\n  }\n\n  function formatWeekNumberMonday(d, p) {\n    return pad(timeMonday.count(year(d), d), p, 2);\n  }\n\n  function formatYear(d, p) {\n    return pad(d.getFullYear() % 100, p, 2);\n  }\n\n  function formatFullYear(d, p) {\n    return pad(d.getFullYear() % 10000, p, 4);\n  }\n\n  function formatZone(d) {\n    var z = d.getTimezoneOffset();\n    return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n        + pad(z / 60 | 0, \"0\", 2)\n        + pad(z % 60, \"0\", 2);\n  }\n\n  function formatUTCDayOfMonth(d, p) {\n    return pad(d.getUTCDate(), p, 2);\n  }\n\n  function formatUTCHour24(d, p) {\n    return pad(d.getUTCHours(), p, 2);\n  }\n\n  function formatUTCHour12(d, p) {\n    return pad(d.getUTCHours() % 12 || 12, p, 2);\n  }\n\n  function formatUTCDayOfYear(d, p) {\n    return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n  }\n\n  function formatUTCMilliseconds(d, p) {\n    return pad(d.getUTCMilliseconds(), p, 3);\n  }\n\n  function formatUTCMonthNumber(d, p) {\n    return pad(d.getUTCMonth() + 1, p, 2);\n  }\n\n  function formatUTCMinutes(d, p) {\n    return pad(d.getUTCMinutes(), p, 2);\n  }\n\n  function formatUTCSeconds(d, p) {\n    return pad(d.getUTCSeconds(), p, 2);\n  }\n\n  function formatUTCWeekNumberSunday(d, p) {\n    return pad(utcWeek.count(utcYear(d), d), p, 2);\n  }\n\n  function formatUTCWeekdayNumber(d) {\n    return d.getUTCDay();\n  }\n\n  function formatUTCWeekNumberMonday(d, p) {\n    return pad(utcMonday.count(utcYear(d), d), p, 2);\n  }\n\n  function formatUTCYear(d, p) {\n    return pad(d.getUTCFullYear() % 100, p, 2);\n  }\n\n  function formatUTCFullYear(d, p) {\n    return pad(d.getUTCFullYear() % 10000, p, 4);\n  }\n\n  function formatUTCZone() {\n    return \"+0000\";\n  }\n\n  function formatLiteralPercent() {\n    return \"%\";\n  }\n\n  var locale$1;\n  exports.timeFormat;\n  exports.timeParse;\n  exports.utcFormat;\n  exports.utcParse;\n\n  defaultLocale$1({\n    dateTime: \"%x, %X\",\n    date: \"%-m/%-d/%Y\",\n    time: \"%-I:%M:%S %p\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  });\n\n  function defaultLocale$1(definition) {\n    locale$1 = formatLocale$1(definition);\n    exports.timeFormat = locale$1.format;\n    exports.timeParse = locale$1.parse;\n    exports.utcFormat = locale$1.utcFormat;\n    exports.utcParse = locale$1.utcParse;\n    return locale$1;\n  }\n\n  var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\n  function formatIsoNative(date) {\n    return date.toISOString();\n  }\n\n  var formatIso = Date.prototype.toISOString\n      ? formatIsoNative\n      : exports.utcFormat(isoSpecifier);\n\n  function parseIsoNative(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  }\n\n  var parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n      ? parseIsoNative\n      : exports.utcParse(isoSpecifier);\n\n  var array$2 = Array.prototype;\n\n  var map$2 = array$2.map;\n  var slice$3 = array$2.slice;\n\n  var implicit = {name: \"implicit\"};\n\n  function ordinal(range) {\n    var index = map$1(),\n        domain = [],\n        unknown = implicit;\n\n    range = range == null ? [] : slice$3.call(range);\n\n    function scale(d) {\n      var key = d + \"\", i = index.get(key);\n      if (!i) {\n        if (unknown !== implicit) return unknown;\n        index.set(key, i = domain.push(d));\n      }\n      return range[(i - 1) % range.length];\n    }\n\n    scale.domain = function(_) {\n      if (!arguments.length) return domain.slice();\n      domain = [], index = map$1();\n      var i = -1, n = _.length, d, key;\n      while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n      return scale;\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice$3.call(_), scale) : range.slice();\n    };\n\n    scale.unknown = function(_) {\n      return arguments.length ? (unknown = _, scale) : unknown;\n    };\n\n    scale.copy = function() {\n      return ordinal()\n          .domain(domain)\n          .range(range)\n          .unknown(unknown);\n    };\n\n    return scale;\n  }\n\n  function band() {\n    var scale = ordinal().unknown(undefined),\n        domain = scale.domain,\n        ordinalRange = scale.range,\n        range$$ = [0, 1],\n        step,\n        bandwidth,\n        round = false,\n        paddingInner = 0,\n        paddingOuter = 0,\n        align = 0.5;\n\n    delete scale.unknown;\n\n    function rescale() {\n      var n = domain().length,\n          reverse = range$$[1] < range$$[0],\n          start = range$$[reverse - 0],\n          stop = range$$[1 - reverse];\n      step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n      if (round) step = Math.floor(step);\n      start += (stop - start - step * (n - paddingInner)) * align;\n      bandwidth = step * (1 - paddingInner);\n      if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n      var values = range(n).map(function(i) { return start + step * i; });\n      return ordinalRange(reverse ? values.reverse() : values);\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain(_), rescale()) : domain();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range$$ = [+_[0], +_[1]], rescale()) : range$$.slice();\n    };\n\n    scale.rangeRound = function(_) {\n      return range$$ = [+_[0], +_[1]], round = true, rescale();\n    };\n\n    scale.bandwidth = function() {\n      return bandwidth;\n    };\n\n    scale.step = function() {\n      return step;\n    };\n\n    scale.round = function(_) {\n      return arguments.length ? (round = !!_, rescale()) : round;\n    };\n\n    scale.padding = function(_) {\n      return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n    };\n\n    scale.paddingInner = function(_) {\n      return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n    };\n\n    scale.paddingOuter = function(_) {\n      return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n    };\n\n    scale.align = function(_) {\n      return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n    };\n\n    scale.copy = function() {\n      return band()\n          .domain(domain())\n          .range(range$$)\n          .round(round)\n          .paddingInner(paddingInner)\n          .paddingOuter(paddingOuter)\n          .align(align);\n    };\n\n    return rescale();\n  }\n\n  function pointish(scale) {\n    var copy = scale.copy;\n\n    scale.padding = scale.paddingOuter;\n    delete scale.paddingInner;\n    delete scale.paddingOuter;\n\n    scale.copy = function() {\n      return pointish(copy());\n    };\n\n    return scale;\n  }\n\n  function point$4() {\n    return pointish(band().paddingInner(1));\n  }\n\n  function constant$3(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function number$1(x) {\n    return +x;\n  }\n\n  var unit = [0, 1];\n\n  function deinterpolate(a, b) {\n    return (b -= (a = +a))\n        ? function(x) { return (x - a) / b; }\n        : constant$3(b);\n  }\n\n  function deinterpolateClamp(deinterpolate) {\n    return function(a, b) {\n      var d = deinterpolate(a = +a, b = +b);\n      return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n    };\n  }\n\n  function reinterpolateClamp(reinterpolate) {\n    return function(a, b) {\n      var r = reinterpolate(a = +a, b = +b);\n      return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n    };\n  }\n\n  function bimap(domain, range, deinterpolate, reinterpolate) {\n    var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n    if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n    else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n    return function(x) { return r0(d0(x)); };\n  }\n\n  function polymap(domain, range, deinterpolate, reinterpolate) {\n    var j = Math.min(domain.length, range.length) - 1,\n        d = new Array(j),\n        r = new Array(j),\n        i = -1;\n\n    // Reverse descending domains.\n    if (domain[j] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n\n    while (++i < j) {\n      d[i] = deinterpolate(domain[i], domain[i + 1]);\n      r[i] = reinterpolate(range[i], range[i + 1]);\n    }\n\n    return function(x) {\n      var i = bisectRight(domain, x, 1, j) - 1;\n      return r[i](d[i](x));\n    };\n  }\n\n  function copy(source, target) {\n    return target\n        .domain(source.domain())\n        .range(source.range())\n        .interpolate(source.interpolate())\n        .clamp(source.clamp());\n  }\n\n  // deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n  // reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n  function continuous(deinterpolate$$, reinterpolate) {\n    var domain = unit,\n        range = unit,\n        interpolate$$ = interpolate,\n        clamp = false,\n        piecewise,\n        output,\n        input;\n\n    function rescale() {\n      piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n      output = input = null;\n      return scale;\n    }\n\n    function scale(x) {\n      return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate$$) : deinterpolate$$, interpolate$$)))(+x);\n    }\n\n    scale.invert = function(y) {\n      return (input || (input = piecewise(range, domain, deinterpolate, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n    };\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain = map$2.call(_, number$1), rescale()) : domain.slice();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice$3.call(_), rescale()) : range.slice();\n    };\n\n    scale.rangeRound = function(_) {\n      return range = slice$3.call(_), interpolate$$ = interpolateRound, rescale();\n    };\n\n    scale.clamp = function(_) {\n      return arguments.length ? (clamp = !!_, rescale()) : clamp;\n    };\n\n    scale.interpolate = function(_) {\n      return arguments.length ? (interpolate$$ = _, rescale()) : interpolate$$;\n    };\n\n    return rescale();\n  }\n\n  function tickFormat(domain, count, specifier) {\n    var start = domain[0],\n        stop = domain[domain.length - 1],\n        step = tickStep(start, stop, count == null ? 10 : count),\n        precision;\n    specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n    switch (specifier.type) {\n      case \"s\": {\n        var value = Math.max(Math.abs(start), Math.abs(stop));\n        if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n        return exports.formatPrefix(specifier, value);\n      }\n      case \"\":\n      case \"e\":\n      case \"g\":\n      case \"p\":\n      case \"r\": {\n        if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n        break;\n      }\n      case \"f\":\n      case \"%\": {\n        if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n        break;\n      }\n    }\n    return exports.format(specifier);\n  }\n\n  function linearish(scale) {\n    var domain = scale.domain;\n\n    scale.ticks = function(count) {\n      var d = domain();\n      return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n    };\n\n    scale.tickFormat = function(count, specifier) {\n      return tickFormat(domain(), count, specifier);\n    };\n\n    scale.nice = function(count) {\n      var d = domain(),\n          i = d.length - 1,\n          n = count == null ? 10 : count,\n          start = d[0],\n          stop = d[i],\n          step = tickStep(start, stop, n);\n\n      if (step) {\n        step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n        d[0] = Math.floor(start / step) * step;\n        d[i] = Math.ceil(stop / step) * step;\n        domain(d);\n      }\n\n      return scale;\n    };\n\n    return scale;\n  }\n\n  function linear$2() {\n    var scale = continuous(deinterpolate, interpolateNumber);\n\n    scale.copy = function() {\n      return copy(scale, linear$2());\n    };\n\n    return linearish(scale);\n  }\n\n  function identity$4() {\n    var domain = [0, 1];\n\n    function scale(x) {\n      return +x;\n    }\n\n    scale.invert = scale;\n\n    scale.domain = scale.range = function(_) {\n      return arguments.length ? (domain = map$2.call(_, number$1), scale) : domain.slice();\n    };\n\n    scale.copy = function() {\n      return identity$4().domain(domain);\n    };\n\n    return linearish(scale);\n  }\n\n  function nice(domain, interval) {\n    domain = domain.slice();\n\n    var i0 = 0,\n        i1 = domain.length - 1,\n        x0 = domain[i0],\n        x1 = domain[i1],\n        t;\n\n    if (x1 < x0) {\n      t = i0, i0 = i1, i1 = t;\n      t = x0, x0 = x1, x1 = t;\n    }\n\n    domain[i0] = interval.floor(x0);\n    domain[i1] = interval.ceil(x1);\n    return domain;\n  }\n\n  function deinterpolate$1(a, b) {\n    return (b = Math.log(b / a))\n        ? function(x) { return Math.log(x / a) / b; }\n        : constant$3(b);\n  }\n\n  function reinterpolate(a, b) {\n    return a < 0\n        ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n        : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n  }\n\n  function pow10(x) {\n    return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n  }\n\n  function powp(base) {\n    return base === 10 ? pow10\n        : base === Math.E ? Math.exp\n        : function(x) { return Math.pow(base, x); };\n  }\n\n  function logp(base) {\n    return base === Math.E ? Math.log\n        : base === 10 && Math.log10\n        || base === 2 && Math.log2\n        || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n  }\n\n  function reflect(f) {\n    return function(x) {\n      return -f(-x);\n    };\n  }\n\n  function log() {\n    var scale = continuous(deinterpolate$1, reinterpolate).domain([1, 10]),\n        domain = scale.domain,\n        base = 10,\n        logs = logp(10),\n        pows = powp(10);\n\n    function rescale() {\n      logs = logp(base), pows = powp(base);\n      if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n      return scale;\n    }\n\n    scale.base = function(_) {\n      return arguments.length ? (base = +_, rescale()) : base;\n    };\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain(_), rescale()) : domain();\n    };\n\n    scale.ticks = function(count) {\n      var d = domain(),\n          u = d[0],\n          v = d[d.length - 1],\n          r;\n\n      if (r = v < u) i = u, u = v, v = i;\n\n      var i = logs(u),\n          j = logs(v),\n          p,\n          k,\n          t,\n          n = count == null ? 10 : +count,\n          z = [];\n\n      if (!(base % 1) && j - i < n) {\n        i = Math.round(i) - 1, j = Math.round(j) + 1;\n        if (u > 0) for (; i < j; ++i) {\n          for (k = 1, p = pows(i); k < base; ++k) {\n            t = p * k;\n            if (t < u) continue;\n            if (t > v) break;\n            z.push(t);\n          }\n        } else for (; i < j; ++i) {\n          for (k = base - 1, p = pows(i); k >= 1; --k) {\n            t = p * k;\n            if (t < u) continue;\n            if (t > v) break;\n            z.push(t);\n          }\n        }\n      } else {\n        z = ticks(i, j, Math.min(j - i, n)).map(pows);\n      }\n\n      return r ? z.reverse() : z;\n    };\n\n    scale.tickFormat = function(count, specifier) {\n      if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n      if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n      if (count === Infinity) return specifier;\n      if (count == null) count = 10;\n      var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n      return function(d) {\n        var i = d / pows(Math.round(logs(d)));\n        if (i * base < base - 0.5) i *= base;\n        return i <= k ? specifier(d) : \"\";\n      };\n    };\n\n    scale.nice = function() {\n      return domain(nice(domain(), {\n        floor: function(x) { return pows(Math.floor(logs(x))); },\n        ceil: function(x) { return pows(Math.ceil(logs(x))); }\n      }));\n    };\n\n    scale.copy = function() {\n      return copy(scale, log().base(base));\n    };\n\n    return scale;\n  }\n\n  function raise(x, exponent) {\n    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n  }\n\n  function pow() {\n    var exponent = 1,\n        scale = continuous(deinterpolate, reinterpolate),\n        domain = scale.domain;\n\n    function deinterpolate(a, b) {\n      return (b = raise(b, exponent) - (a = raise(a, exponent)))\n          ? function(x) { return (raise(x, exponent) - a) / b; }\n          : constant$3(b);\n    }\n\n    function reinterpolate(a, b) {\n      b = raise(b, exponent) - (a = raise(a, exponent));\n      return function(t) { return raise(a + b * t, 1 / exponent); };\n    }\n\n    scale.exponent = function(_) {\n      return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n    };\n\n    scale.copy = function() {\n      return copy(scale, pow().exponent(exponent));\n    };\n\n    return linearish(scale);\n  }\n\n  function sqrt() {\n    return pow().exponent(0.5);\n  }\n\n  function quantile() {\n    var domain = [],\n        range = [],\n        thresholds = [];\n\n    function rescale() {\n      var i = 0, n = Math.max(1, range.length);\n      thresholds = new Array(n - 1);\n      while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n      return scale;\n    }\n\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[bisectRight(thresholds, x)];\n    }\n\n    scale.invertExtent = function(y) {\n      var i = range.indexOf(y);\n      return i < 0 ? [NaN, NaN] : [\n        i > 0 ? thresholds[i - 1] : domain[0],\n        i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n      ];\n    };\n\n    scale.domain = function(_) {\n      if (!arguments.length) return domain.slice();\n      domain = [];\n      for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n      domain.sort(ascending);\n      return rescale();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice$3.call(_), rescale()) : range.slice();\n    };\n\n    scale.quantiles = function() {\n      return thresholds.slice();\n    };\n\n    scale.copy = function() {\n      return quantile()\n          .domain(domain)\n          .range(range);\n    };\n\n    return scale;\n  }\n\n  function quantize$1() {\n    var x0 = 0,\n        x1 = 1,\n        n = 1,\n        domain = [0.5],\n        range = [0, 1];\n\n    function scale(x) {\n      if (x <= x) return range[bisectRight(domain, x, 0, n)];\n    }\n\n    function rescale() {\n      var i = -1;\n      domain = new Array(n);\n      while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n      return scale;\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (n = (range = slice$3.call(_)).length - 1, rescale()) : range.slice();\n    };\n\n    scale.invertExtent = function(y) {\n      var i = range.indexOf(y);\n      return i < 0 ? [NaN, NaN]\n          : i < 1 ? [x0, domain[0]]\n          : i >= n ? [domain[n - 1], x1]\n          : [domain[i - 1], domain[i]];\n    };\n\n    scale.copy = function() {\n      return quantize$1()\n          .domain([x0, x1])\n          .range(range);\n    };\n\n    return linearish(scale);\n  }\n\n  function threshold$1() {\n    var domain = [0.5],\n        range = [0, 1],\n        n = 1;\n\n    function scale(x) {\n      if (x <= x) return range[bisectRight(domain, x, 0, n)];\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain = slice$3.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice$3.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n    };\n\n    scale.invertExtent = function(y) {\n      var i = range.indexOf(y);\n      return [domain[i - 1], domain[i]];\n    };\n\n    scale.copy = function() {\n      return threshold$1()\n          .domain(domain)\n          .range(range);\n    };\n\n    return scale;\n  }\n\nvar   durationSecond$1 = 1000;\nvar   durationMinute$1 = durationSecond$1 * 60;\nvar   durationHour$1 = durationMinute$1 * 60;\nvar   durationDay$1 = durationHour$1 * 24;\nvar   durationWeek$1 = durationDay$1 * 7;\n  var durationMonth = durationDay$1 * 30;\n  var durationYear = durationDay$1 * 365;\n  function date$1(t) {\n    return new Date(t);\n  }\n\n  function number$2(t) {\n    return t instanceof Date ? +t : +new Date(+t);\n  }\n\n  function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n    var scale = continuous(deinterpolate, interpolateNumber),\n        invert = scale.invert,\n        domain = scale.domain;\n\n    var formatMillisecond = format(\".%L\"),\n        formatSecond = format(\":%S\"),\n        formatMinute = format(\"%I:%M\"),\n        formatHour = format(\"%I %p\"),\n        formatDay = format(\"%a %d\"),\n        formatWeek = format(\"%b %d\"),\n        formatMonth = format(\"%B\"),\n        formatYear = format(\"%Y\");\n\n    var tickIntervals = [\n      [second,  1,      durationSecond$1],\n      [second,  5,  5 * durationSecond$1],\n      [second, 15, 15 * durationSecond$1],\n      [second, 30, 30 * durationSecond$1],\n      [minute,  1,      durationMinute$1],\n      [minute,  5,  5 * durationMinute$1],\n      [minute, 15, 15 * durationMinute$1],\n      [minute, 30, 30 * durationMinute$1],\n      [  hour,  1,      durationHour$1  ],\n      [  hour,  3,  3 * durationHour$1  ],\n      [  hour,  6,  6 * durationHour$1  ],\n      [  hour, 12, 12 * durationHour$1  ],\n      [   day,  1,      durationDay$1   ],\n      [   day,  2,  2 * durationDay$1   ],\n      [  week,  1,      durationWeek$1  ],\n      [ month,  1,      durationMonth ],\n      [ month,  3,  3 * durationMonth ],\n      [  year,  1,      durationYear  ]\n    ];\n\n    function tickFormat(date) {\n      return (second(date) < date ? formatMillisecond\n          : minute(date) < date ? formatSecond\n          : hour(date) < date ? formatMinute\n          : day(date) < date ? formatHour\n          : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n          : year(date) < date ? formatMonth\n          : formatYear)(date);\n    }\n\n    function tickInterval(interval, start, stop, step) {\n      if (interval == null) interval = 10;\n\n      // If a desired tick count is specified, pick a reasonable tick interval\n      // based on the extent of the domain and a rough estimate of tick size.\n      // Otherwise, assume interval is already a time interval and use it.\n      if (typeof interval === \"number\") {\n        var target = Math.abs(stop - start) / interval,\n            i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n        if (i === tickIntervals.length) {\n          step = tickStep(start / durationYear, stop / durationYear, interval);\n          interval = year;\n        } else if (i) {\n          i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n          step = i[1];\n          interval = i[0];\n        } else {\n          step = tickStep(start, stop, interval);\n          interval = millisecond;\n        }\n      }\n\n      return step == null ? interval : interval.every(step);\n    }\n\n    scale.invert = function(y) {\n      return new Date(invert(y));\n    };\n\n    scale.domain = function(_) {\n      return arguments.length ? domain(map$2.call(_, number$2)) : domain().map(date$1);\n    };\n\n    scale.ticks = function(interval, step) {\n      var d = domain(),\n          t0 = d[0],\n          t1 = d[d.length - 1],\n          r = t1 < t0,\n          t;\n      if (r) t = t0, t0 = t1, t1 = t;\n      t = tickInterval(interval, t0, t1, step);\n      t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n      return r ? t.reverse() : t;\n    };\n\n    scale.tickFormat = function(count, specifier) {\n      return specifier == null ? tickFormat : format(specifier);\n    };\n\n    scale.nice = function(interval, step) {\n      var d = domain();\n      return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n          ? domain(nice(d, interval))\n          : scale;\n    };\n\n    scale.copy = function() {\n      return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n    };\n\n    return scale;\n  }\n\n  function time() {\n    return calendar(year, month, timeWeek, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n  }\n\n  function utcTime() {\n    return calendar(utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n  }\n\n  function colors(s) {\n    return s.match(/.{6}/g).map(function(x) {\n      return \"#\" + x;\n    });\n  }\n\n  var category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\n  var category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\n  var category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\n  var category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\n  var cubehelix$3 = interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\n  var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\n  var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\n  var rainbow = cubehelix();\n\n  function rainbow$1(t) {\n    if (t < 0 || t > 1) t -= Math.floor(t);\n    var ts = Math.abs(t - 0.5);\n    rainbow.h = 360 * t - 100;\n    rainbow.s = 1.5 - 1.5 * ts;\n    rainbow.l = 0.8 - 0.9 * ts;\n    return rainbow + \"\";\n  }\n\n  function ramp(range) {\n    var n = range.length;\n    return function(t) {\n      return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n    };\n  }\n\n  var viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\n  var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\n  var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\n  var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\n  function sequential(interpolator) {\n    var x0 = 0,\n        x1 = 1,\n        clamp = false;\n\n    function scale(x) {\n      var t = (x - x0) / (x1 - x0);\n      return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n    };\n\n    scale.clamp = function(_) {\n      return arguments.length ? (clamp = !!_, scale) : clamp;\n    };\n\n    scale.interpolator = function(_) {\n      return arguments.length ? (interpolator = _, scale) : interpolator;\n    };\n\n    scale.copy = function() {\n      return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n    };\n\n    return linearish(scale);\n  }\n\n  var xhtml = \"http://www.w3.org/1999/xhtml\";\n\n  var namespaces = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: xhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n\n  function namespace(name) {\n    var prefix = name += \"\", i = prefix.indexOf(\":\");\n    if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n    return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n  }\n\n  function creatorInherit(name) {\n    return function() {\n      var document = this.ownerDocument,\n          uri = this.namespaceURI;\n      return uri === xhtml && document.documentElement.namespaceURI === xhtml\n          ? document.createElement(name)\n          : document.createElementNS(uri, name);\n    };\n  }\n\n  function creatorFixed(fullname) {\n    return function() {\n      return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n    };\n  }\n\n  function creator(name) {\n    var fullname = namespace(name);\n    return (fullname.local\n        ? creatorFixed\n        : creatorInherit)(fullname);\n  }\n\n  var nextId = 0;\n\n  function local() {\n    return new Local;\n  }\n\n  function Local() {\n    this._ = \"@\" + (++nextId).toString(36);\n  }\n\n  Local.prototype = local.prototype = {\n    constructor: Local,\n    get: function(node) {\n      var id = this._;\n      while (!(id in node)) if (!(node = node.parentNode)) return;\n      return node[id];\n    },\n    set: function(node, value) {\n      return node[this._] = value;\n    },\n    remove: function(node) {\n      return this._ in node && delete node[this._];\n    },\n    toString: function() {\n      return this._;\n    }\n  };\n\n  var matcher = function(selector) {\n    return function() {\n      return this.matches(selector);\n    };\n  };\n\n  if (typeof document !== \"undefined\") {\n    var element = document.documentElement;\n    if (!element.matches) {\n      var vendorMatches = element.webkitMatchesSelector\n          || element.msMatchesSelector\n          || element.mozMatchesSelector\n          || element.oMatchesSelector;\n      matcher = function(selector) {\n        return function() {\n          return vendorMatches.call(this, selector);\n        };\n      };\n    }\n  }\n\n  var matcher$1 = matcher;\n\n  var filterEvents = {};\n\n  exports.event = null;\n\n  if (typeof document !== \"undefined\") {\n    var element$1 = document.documentElement;\n    if (!(\"onmouseenter\" in element$1)) {\n      filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n    }\n  }\n\n  function filterContextListener(listener, index, group) {\n    listener = contextListener(listener, index, group);\n    return function(event) {\n      var related = event.relatedTarget;\n      if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n        listener.call(this, event);\n      }\n    };\n  }\n\n  function contextListener(listener, index, group) {\n    return function(event1) {\n      var event0 = exports.event; // Events can be reentrant (e.g., focus).\n      exports.event = event1;\n      try {\n        listener.call(this, this.__data__, index, group);\n      } finally {\n        exports.event = event0;\n      }\n    };\n  }\n\n  function parseTypenames$1(typenames) {\n    return typenames.trim().split(/^|\\s+/).map(function(t) {\n      var name = \"\", i = t.indexOf(\".\");\n      if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n      return {type: t, name: name};\n    });\n  }\n\n  function onRemove(typename) {\n    return function() {\n      var on = this.__on;\n      if (!on) return;\n      for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n        if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n          this.removeEventListener(o.type, o.listener, o.capture);\n        } else {\n          on[++i] = o;\n        }\n      }\n      if (++i) on.length = i;\n      else delete this.__on;\n    };\n  }\n\n  function onAdd(typename, value, capture) {\n    var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n    return function(d, i, group) {\n      var on = this.__on, o, listener = wrap(value, i, group);\n      if (on) for (var j = 0, m = on.length; j < m; ++j) {\n        if ((o = on[j]).type === typename.type && o.name === typename.name) {\n          this.removeEventListener(o.type, o.listener, o.capture);\n          this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n          o.value = value;\n          return;\n        }\n      }\n      this.addEventListener(typename.type, listener, capture);\n      o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n      if (!on) this.__on = [o];\n      else on.push(o);\n    };\n  }\n\n  function selection_on(typename, value, capture) {\n    var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n    if (arguments.length < 2) {\n      var on = this.node().__on;\n      if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n        for (i = 0, o = on[j]; i < n; ++i) {\n          if ((t = typenames[i]).type === o.type && t.name === o.name) {\n            return o.value;\n          }\n        }\n      }\n      return;\n    }\n\n    on = value ? onAdd : onRemove;\n    if (capture == null) capture = false;\n    for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n    return this;\n  }\n\n  function customEvent(event1, listener, that, args) {\n    var event0 = exports.event;\n    event1.sourceEvent = exports.event;\n    exports.event = event1;\n    try {\n      return listener.apply(that, args);\n    } finally {\n      exports.event = event0;\n    }\n  }\n\n  function sourceEvent() {\n    var current = exports.event, source;\n    while (source = current.sourceEvent) current = source;\n    return current;\n  }\n\n  function point$5(node, event) {\n    var svg = node.ownerSVGElement || node;\n\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      point.x = event.clientX, point.y = event.clientY;\n      point = point.matrixTransform(node.getScreenCTM().inverse());\n      return [point.x, point.y];\n    }\n\n    var rect = node.getBoundingClientRect();\n    return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n  }\n\n  function mouse(node) {\n    var event = sourceEvent();\n    if (event.changedTouches) event = event.changedTouches[0];\n    return point$5(node, event);\n  }\n\n  function none$2() {}\n\n  function selector(selector) {\n    return selector == null ? none$2 : function() {\n      return this.querySelector(selector);\n    };\n  }\n\n  function selection_select(select) {\n    if (typeof select !== \"function\") select = selector(select);\n\n    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n        if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          subgroup[i] = subnode;\n        }\n      }\n    }\n\n    return new Selection(subgroups, this._parents);\n  }\n\n  function empty() {\n    return [];\n  }\n\n  function selectorAll(selector) {\n    return selector == null ? empty : function() {\n      return this.querySelectorAll(selector);\n    };\n  }\n\n  function selection_selectAll(select) {\n    if (typeof select !== \"function\") select = selectorAll(select);\n\n    for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          subgroups.push(select.call(node, node.__data__, i, group));\n          parents.push(node);\n        }\n      }\n    }\n\n    return new Selection(subgroups, parents);\n  }\n\n  function selection_filter(match) {\n    if (typeof match !== \"function\") match = matcher$1(match);\n\n    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n        if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n          subgroup.push(node);\n        }\n      }\n    }\n\n    return new Selection(subgroups, this._parents);\n  }\n\n  function sparse(update) {\n    return new Array(update.length);\n  }\n\n  function selection_enter() {\n    return new Selection(this._enter || this._groups.map(sparse), this._parents);\n  }\n\n  function EnterNode(parent, datum) {\n    this.ownerDocument = parent.ownerDocument;\n    this.namespaceURI = parent.namespaceURI;\n    this._next = null;\n    this._parent = parent;\n    this.__data__ = datum;\n  }\n\n  EnterNode.prototype = {\n    constructor: EnterNode,\n    appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n    insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n    querySelector: function(selector) { return this._parent.querySelector(selector); },\n    querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n  };\n\n  function constant$4(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  var keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\n  function bindIndex(parent, group, enter, update, exit, data) {\n    var i = 0,\n        node,\n        groupLength = group.length,\n        dataLength = data.length;\n\n    // Put any non-null nodes that fit into update.\n    // Put any null nodes into enter.\n    // Put any remaining data into enter.\n    for (; i < dataLength; ++i) {\n      if (node = group[i]) {\n        node.__data__ = data[i];\n        update[i] = node;\n      } else {\n        enter[i] = new EnterNode(parent, data[i]);\n      }\n    }\n\n    // Put any non-null nodes that don’t fit into exit.\n    for (; i < groupLength; ++i) {\n      if (node = group[i]) {\n        exit[i] = node;\n      }\n    }\n  }\n\n  function bindKey(parent, group, enter, update, exit, data, key) {\n    var i,\n        node,\n        nodeByKeyValue = {},\n        groupLength = group.length,\n        dataLength = data.length,\n        keyValues = new Array(groupLength),\n        keyValue;\n\n    // Compute the key for each node.\n    // If multiple nodes have the same key, the duplicates are added to exit.\n    for (i = 0; i < groupLength; ++i) {\n      if (node = group[i]) {\n        keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n        if (keyValue in nodeByKeyValue) {\n          exit[i] = node;\n        } else {\n          nodeByKeyValue[keyValue] = node;\n        }\n      }\n    }\n\n    // Compute the key for each datum.\n    // If there a node associated with this key, join and add it to update.\n    // If there is not (or the key is a duplicate), add it to enter.\n    for (i = 0; i < dataLength; ++i) {\n      keyValue = keyPrefix + key.call(parent, data[i], i, data);\n      if (node = nodeByKeyValue[keyValue]) {\n        update[i] = node;\n        node.__data__ = data[i];\n        nodeByKeyValue[keyValue] = null;\n      } else {\n        enter[i] = new EnterNode(parent, data[i]);\n      }\n    }\n\n    // Add any remaining nodes that were not bound to data to exit.\n    for (i = 0; i < groupLength; ++i) {\n      if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n        exit[i] = node;\n      }\n    }\n  }\n\n  function selection_data(value, key) {\n    if (!value) {\n      data = new Array(this.size()), j = -1;\n      this.each(function(d) { data[++j] = d; });\n      return data;\n    }\n\n    var bind = key ? bindKey : bindIndex,\n        parents = this._parents,\n        groups = this._groups;\n\n    if (typeof value !== \"function\") value = constant$4(value);\n\n    for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n      var parent = parents[j],\n          group = groups[j],\n          groupLength = group.length,\n          data = value.call(parent, parent && parent.__data__, j, parents),\n          dataLength = data.length,\n          enterGroup = enter[j] = new Array(dataLength),\n          updateGroup = update[j] = new Array(dataLength),\n          exitGroup = exit[j] = new Array(groupLength);\n\n      bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n      // Now connect the enter nodes to their following update node, such that\n      // appendChild can insert the materialized enter node before this node,\n      // rather than at the end of the parent node.\n      for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n        if (previous = enterGroup[i0]) {\n          if (i0 >= i1) i1 = i0 + 1;\n          while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n          previous._next = next || null;\n        }\n      }\n    }\n\n    update = new Selection(update, parents);\n    update._enter = enter;\n    update._exit = exit;\n    return update;\n  }\n\n  function selection_exit() {\n    return new Selection(this._exit || this._groups.map(sparse), this._parents);\n  }\n\n  function selection_merge(selection) {\n\n    for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n      for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n        if (node = group0[i] || group1[i]) {\n          merge[i] = node;\n        }\n      }\n    }\n\n    for (; j < m0; ++j) {\n      merges[j] = groups0[j];\n    }\n\n    return new Selection(merges, this._parents);\n  }\n\n  function selection_order() {\n\n    for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n      for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function selection_sort(compare) {\n    if (!compare) compare = ascending$2;\n\n    function compareNode(a, b) {\n      return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n    }\n\n    for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          sortgroup[i] = node;\n        }\n      }\n      sortgroup.sort(compareNode);\n    }\n\n    return new Selection(sortgroups, this._parents).order();\n  }\n\n  function ascending$2(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  function selection_call() {\n    var callback = arguments[0];\n    arguments[0] = this;\n    callback.apply(null, arguments);\n    return this;\n  }\n\n  function selection_nodes() {\n    var nodes = new Array(this.size()), i = -1;\n    this.each(function() { nodes[++i] = this; });\n    return nodes;\n  }\n\n  function selection_node() {\n\n    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n      for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n\n    return null;\n  }\n\n  function selection_size() {\n    var size = 0;\n    this.each(function() { ++size; });\n    return size;\n  }\n\n  function selection_empty() {\n    return !this.node();\n  }\n\n  function selection_each(callback) {\n\n    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n        if (node = group[i]) callback.call(node, node.__data__, i, group);\n      }\n    }\n\n    return this;\n  }\n\n  function attrRemove(name) {\n    return function() {\n      this.removeAttribute(name);\n    };\n  }\n\n  function attrRemoveNS(fullname) {\n    return function() {\n      this.removeAttributeNS(fullname.space, fullname.local);\n    };\n  }\n\n  function attrConstant(name, value) {\n    return function() {\n      this.setAttribute(name, value);\n    };\n  }\n\n  function attrConstantNS(fullname, value) {\n    return function() {\n      this.setAttributeNS(fullname.space, fullname.local, value);\n    };\n  }\n\n  function attrFunction(name, value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) this.removeAttribute(name);\n      else this.setAttribute(name, v);\n    };\n  }\n\n  function attrFunctionNS(fullname, value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n      else this.setAttributeNS(fullname.space, fullname.local, v);\n    };\n  }\n\n  function selection_attr(name, value) {\n    var fullname = namespace(name);\n\n    if (arguments.length < 2) {\n      var node = this.node();\n      return fullname.local\n          ? node.getAttributeNS(fullname.space, fullname.local)\n          : node.getAttribute(fullname);\n    }\n\n    return this.each((value == null\n        ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n        ? (fullname.local ? attrFunctionNS : attrFunction)\n        : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n  }\n\n  function window(node) {\n    return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n        || (node.document && node) // node is a Window\n        || node.defaultView; // node is a Document\n  }\n\n  function styleRemove(name) {\n    return function() {\n      this.style.removeProperty(name);\n    };\n  }\n\n  function styleConstant(name, value, priority) {\n    return function() {\n      this.style.setProperty(name, value, priority);\n    };\n  }\n\n  function styleFunction(name, value, priority) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) this.style.removeProperty(name);\n      else this.style.setProperty(name, v, priority);\n    };\n  }\n\n  function selection_style(name, value, priority) {\n    var node;\n    return arguments.length > 1\n        ? this.each((value == null\n              ? styleRemove : typeof value === \"function\"\n              ? styleFunction\n              : styleConstant)(name, value, priority == null ? \"\" : priority))\n        : window(node = this.node())\n            .getComputedStyle(node, null)\n            .getPropertyValue(name);\n  }\n\n  function propertyRemove(name) {\n    return function() {\n      delete this[name];\n    };\n  }\n\n  function propertyConstant(name, value) {\n    return function() {\n      this[name] = value;\n    };\n  }\n\n  function propertyFunction(name, value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) delete this[name];\n      else this[name] = v;\n    };\n  }\n\n  function selection_property(name, value) {\n    return arguments.length > 1\n        ? this.each((value == null\n            ? propertyRemove : typeof value === \"function\"\n            ? propertyFunction\n            : propertyConstant)(name, value))\n        : this.node()[name];\n  }\n\n  function classArray(string) {\n    return string.trim().split(/^|\\s+/);\n  }\n\n  function classList(node) {\n    return node.classList || new ClassList(node);\n  }\n\n  function ClassList(node) {\n    this._node = node;\n    this._names = classArray(node.getAttribute(\"class\") || \"\");\n  }\n\n  ClassList.prototype = {\n    add: function(name) {\n      var i = this._names.indexOf(name);\n      if (i < 0) {\n        this._names.push(name);\n        this._node.setAttribute(\"class\", this._names.join(\" \"));\n      }\n    },\n    remove: function(name) {\n      var i = this._names.indexOf(name);\n      if (i >= 0) {\n        this._names.splice(i, 1);\n        this._node.setAttribute(\"class\", this._names.join(\" \"));\n      }\n    },\n    contains: function(name) {\n      return this._names.indexOf(name) >= 0;\n    }\n  };\n\n  function classedAdd(node, names) {\n    var list = classList(node), i = -1, n = names.length;\n    while (++i < n) list.add(names[i]);\n  }\n\n  function classedRemove(node, names) {\n    var list = classList(node), i = -1, n = names.length;\n    while (++i < n) list.remove(names[i]);\n  }\n\n  function classedTrue(names) {\n    return function() {\n      classedAdd(this, names);\n    };\n  }\n\n  function classedFalse(names) {\n    return function() {\n      classedRemove(this, names);\n    };\n  }\n\n  function classedFunction(names, value) {\n    return function() {\n      (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n    };\n  }\n\n  function selection_classed(name, value) {\n    var names = classArray(name + \"\");\n\n    if (arguments.length < 2) {\n      var list = classList(this.node()), i = -1, n = names.length;\n      while (++i < n) if (!list.contains(names[i])) return false;\n      return true;\n    }\n\n    return this.each((typeof value === \"function\"\n        ? classedFunction : value\n        ? classedTrue\n        : classedFalse)(names, value));\n  }\n\n  function textRemove() {\n    this.textContent = \"\";\n  }\n\n  function textConstant(value) {\n    return function() {\n      this.textContent = value;\n    };\n  }\n\n  function textFunction(value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    };\n  }\n\n  function selection_text(value) {\n    return arguments.length\n        ? this.each(value == null\n            ? textRemove : (typeof value === \"function\"\n            ? textFunction\n            : textConstant)(value))\n        : this.node().textContent;\n  }\n\n  function htmlRemove() {\n    this.innerHTML = \"\";\n  }\n\n  function htmlConstant(value) {\n    return function() {\n      this.innerHTML = value;\n    };\n  }\n\n  function htmlFunction(value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    };\n  }\n\n  function selection_html(value) {\n    return arguments.length\n        ? this.each(value == null\n            ? htmlRemove : (typeof value === \"function\"\n            ? htmlFunction\n            : htmlConstant)(value))\n        : this.node().innerHTML;\n  }\n\n  function raise$1() {\n    if (this.nextSibling) this.parentNode.appendChild(this);\n  }\n\n  function selection_raise() {\n    return this.each(raise$1);\n  }\n\n  function lower() {\n    if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n  }\n\n  function selection_lower() {\n    return this.each(lower);\n  }\n\n  function selection_append(name) {\n    var create = typeof name === \"function\" ? name : creator(name);\n    return this.select(function() {\n      return this.appendChild(create.apply(this, arguments));\n    });\n  }\n\n  function constantNull() {\n    return null;\n  }\n\n  function selection_insert(name, before) {\n    var create = typeof name === \"function\" ? name : creator(name),\n        select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n    return this.select(function() {\n      return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n    });\n  }\n\n  function remove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n\n  function selection_remove() {\n    return this.each(remove);\n  }\n\n  function selection_datum(value) {\n    return arguments.length\n        ? this.property(\"__data__\", value)\n        : this.node().__data__;\n  }\n\n  function dispatchEvent(node, type, params) {\n    var window$$ = window(node),\n        event = window$$.CustomEvent;\n\n    if (event) {\n      event = new event(type, params);\n    } else {\n      event = window$$.document.createEvent(\"Event\");\n      if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n      else event.initEvent(type, false, false);\n    }\n\n    node.dispatchEvent(event);\n  }\n\n  function dispatchConstant(type, params) {\n    return function() {\n      return dispatchEvent(this, type, params);\n    };\n  }\n\n  function dispatchFunction(type, params) {\n    return function() {\n      return dispatchEvent(this, type, params.apply(this, arguments));\n    };\n  }\n\n  function selection_dispatch(type, params) {\n    return this.each((typeof params === \"function\"\n        ? dispatchFunction\n        : dispatchConstant)(type, params));\n  }\n\n  var root = [null];\n\n  function Selection(groups, parents) {\n    this._groups = groups;\n    this._parents = parents;\n  }\n\n  function selection() {\n    return new Selection([[document.documentElement]], root);\n  }\n\n  Selection.prototype = selection.prototype = {\n    constructor: Selection,\n    select: selection_select,\n    selectAll: selection_selectAll,\n    filter: selection_filter,\n    data: selection_data,\n    enter: selection_enter,\n    exit: selection_exit,\n    merge: selection_merge,\n    order: selection_order,\n    sort: selection_sort,\n    call: selection_call,\n    nodes: selection_nodes,\n    node: selection_node,\n    size: selection_size,\n    empty: selection_empty,\n    each: selection_each,\n    attr: selection_attr,\n    style: selection_style,\n    property: selection_property,\n    classed: selection_classed,\n    text: selection_text,\n    html: selection_html,\n    raise: selection_raise,\n    lower: selection_lower,\n    append: selection_append,\n    insert: selection_insert,\n    remove: selection_remove,\n    datum: selection_datum,\n    on: selection_on,\n    dispatch: selection_dispatch\n  };\n\n  function select(selector) {\n    return typeof selector === \"string\"\n        ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n        : new Selection([[selector]], root);\n  }\n\n  function selectAll(selector) {\n    return typeof selector === \"string\"\n        ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n        : new Selection([selector == null ? [] : selector], root);\n  }\n\n  function touch(node, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n    for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return point$5(node, touch);\n      }\n    }\n\n    return null;\n  }\n\n  function touches(node, touches) {\n    if (touches == null) touches = sourceEvent().touches;\n\n    for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n      points[i] = point$5(node, touches[i]);\n    }\n\n    return points;\n  }\n\n  var emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\n  var emptyTween = [];\n\n  var CREATED = 0;\n  var SCHEDULED = 1;\n  var STARTING = 2;\n  var STARTED = 3;\n  var ENDING = 4;\n  var ENDED = 5;\n\n  function schedule(node, name, id, index, group, timing) {\n    var schedules = node.__transition;\n    if (!schedules) node.__transition = {};\n    else if (id in schedules) return;\n    create(node, id, {\n      name: name,\n      index: index, // For context during callback.\n      group: group, // For context during callback.\n      on: emptyOn,\n      tween: emptyTween,\n      time: timing.time,\n      delay: timing.delay,\n      duration: timing.duration,\n      ease: timing.ease,\n      timer: null,\n      state: CREATED\n    });\n  }\n\n  function init(node, id) {\n    var schedule = node.__transition;\n    if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n    return schedule;\n  }\n\n  function set$2(node, id) {\n    var schedule = node.__transition;\n    if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n    return schedule;\n  }\n\n  function get$1(node, id) {\n    var schedule = node.__transition;\n    if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n    return schedule;\n  }\n\n  function create(node, id, self) {\n    var schedules = node.__transition,\n        tween;\n\n    // Initialize the self timer when the transition is created.\n    // Note the actual delay is not known until the first callback!\n    schedules[id] = self;\n    self.timer = timer(schedule, 0, self.time);\n\n    // If the delay is greater than this first sleep, sleep some more;\n    // otherwise, start immediately.\n    function schedule(elapsed) {\n      self.state = SCHEDULED;\n      if (self.delay <= elapsed) start(elapsed - self.delay);\n      else self.timer.restart(start, self.delay, self.time);\n    }\n\n    function start(elapsed) {\n      var i, j, n, o;\n\n      for (i in schedules) {\n        o = schedules[i];\n        if (o.name !== self.name) continue;\n\n        // Interrupt the active transition, if any.\n        // Dispatch the interrupt event.\n        if (o.state === STARTED) {\n          o.state = ENDED;\n          o.timer.stop();\n          o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n          delete schedules[i];\n        }\n\n        // Cancel any pre-empted transitions. No interrupt event is dispatched\n        // because the cancelled transitions never started. Note that this also\n        // removes this transition from the pending list!\n        else if (+i < id) {\n          o.state = ENDED;\n          o.timer.stop();\n          delete schedules[i];\n        }\n      }\n\n      // Defer the first tick to end of the current frame; see mbostock/d3#1576.\n      // Note the transition may be canceled after start and before the first tick!\n      // Note this must be scheduled before the start event; see d3/d3-transition#16!\n      // Assuming this is successful, subsequent callbacks go straight to tick.\n      timeout$1(function() {\n        if (self.state === STARTED) {\n          self.timer.restart(tick, self.delay, self.time);\n          tick(elapsed);\n        }\n      });\n\n      // Dispatch the start event.\n      // Note this must be done before the tween are initialized.\n      self.state = STARTING;\n      self.on.call(\"start\", node, node.__data__, self.index, self.group);\n      if (self.state !== STARTING) return; // interrupted\n      self.state = STARTED;\n\n      // Initialize the tween, deleting null tween.\n      tween = new Array(n = self.tween.length);\n      for (i = 0, j = -1; i < n; ++i) {\n        if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n          tween[++j] = o;\n        }\n      }\n      tween.length = j + 1;\n    }\n\n    function tick(elapsed) {\n      var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.state = ENDING, 1),\n          i = -1,\n          n = tween.length;\n\n      while (++i < n) {\n        tween[i].call(null, t);\n      }\n\n      // Dispatch the end event.\n      if (self.state === ENDING) {\n        self.state = ENDED;\n        self.timer.stop();\n        self.on.call(\"end\", node, node.__data__, self.index, self.group);\n        for (i in schedules) if (+i !== id) return void delete schedules[id];\n        delete node.__transition;\n      }\n    }\n  }\n\n  function interrupt(node, name) {\n    var schedules = node.__transition,\n        schedule,\n        active,\n        empty = true,\n        i;\n\n    if (!schedules) return;\n\n    name = name == null ? null : name + \"\";\n\n    for (i in schedules) {\n      if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n      active = schedule.state === STARTED;\n      schedule.state = ENDED;\n      schedule.timer.stop();\n      if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n      delete schedules[i];\n    }\n\n    if (empty) delete node.__transition;\n  }\n\n  function selection_interrupt(name) {\n    return this.each(function() {\n      interrupt(this, name);\n    });\n  }\n\n  function tweenRemove(id, name) {\n    var tween0, tween1;\n    return function() {\n      var schedule = set$2(this, id),\n          tween = schedule.tween;\n\n      // If this node shared tween with the previous node,\n      // just assign the updated shared tween and we’re done!\n      // Otherwise, copy-on-write.\n      if (tween !== tween0) {\n        tween1 = tween0 = tween;\n        for (var i = 0, n = tween1.length; i < n; ++i) {\n          if (tween1[i].name === name) {\n            tween1 = tween1.slice();\n            tween1.splice(i, 1);\n            break;\n          }\n        }\n      }\n\n      schedule.tween = tween1;\n    };\n  }\n\n  function tweenFunction(id, name, value) {\n    var tween0, tween1;\n    if (typeof value !== \"function\") throw new Error;\n    return function() {\n      var schedule = set$2(this, id),\n          tween = schedule.tween;\n\n      // If this node shared tween with the previous node,\n      // just assign the updated shared tween and we’re done!\n      // Otherwise, copy-on-write.\n      if (tween !== tween0) {\n        tween1 = (tween0 = tween).slice();\n        for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n          if (tween1[i].name === name) {\n            tween1[i] = t;\n            break;\n          }\n        }\n        if (i === n) tween1.push(t);\n      }\n\n      schedule.tween = tween1;\n    };\n  }\n\n  function transition_tween(name, value) {\n    var id = this._id;\n\n    name += \"\";\n\n    if (arguments.length < 2) {\n      var tween = get$1(this.node(), id).tween;\n      for (var i = 0, n = tween.length, t; i < n; ++i) {\n        if ((t = tween[i]).name === name) {\n          return t.value;\n        }\n      }\n      return null;\n    }\n\n    return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n  }\n\n  function tweenValue(transition, name, value) {\n    var id = transition._id;\n\n    transition.each(function() {\n      var schedule = set$2(this, id);\n      (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n    });\n\n    return function(node) {\n      return get$1(node, id).value[name];\n    };\n  }\n\n  function interpolate$1(a, b) {\n    var c;\n    return (typeof b === \"number\" ? interpolateNumber\n        : b instanceof color ? interpolateRgb\n        : (c = color(b)) ? (b = c, interpolateRgb)\n        : interpolateString)(a, b);\n  }\n\n  function attrRemove$1(name) {\n    return function() {\n      this.removeAttribute(name);\n    };\n  }\n\n  function attrRemoveNS$1(fullname) {\n    return function() {\n      this.removeAttributeNS(fullname.space, fullname.local);\n    };\n  }\n\n  function attrConstant$1(name, interpolate, value1) {\n    var value00,\n        interpolate0;\n    return function() {\n      var value0 = this.getAttribute(name);\n      return value0 === value1 ? null\n          : value0 === value00 ? interpolate0\n          : interpolate0 = interpolate(value00 = value0, value1);\n    };\n  }\n\n  function attrConstantNS$1(fullname, interpolate, value1) {\n    var value00,\n        interpolate0;\n    return function() {\n      var value0 = this.getAttributeNS(fullname.space, fullname.local);\n      return value0 === value1 ? null\n          : value0 === value00 ? interpolate0\n          : interpolate0 = interpolate(value00 = value0, value1);\n    };\n  }\n\n  function attrFunction$1(name, interpolate, value) {\n    var value00,\n        value10,\n        interpolate0;\n    return function() {\n      var value0, value1 = value(this);\n      if (value1 == null) return void this.removeAttribute(name);\n      value0 = this.getAttribute(name);\n      return value0 === value1 ? null\n          : value0 === value00 && value1 === value10 ? interpolate0\n          : interpolate0 = interpolate(value00 = value0, value10 = value1);\n    };\n  }\n\n  function attrFunctionNS$1(fullname, interpolate, value) {\n    var value00,\n        value10,\n        interpolate0;\n    return function() {\n      var value0, value1 = value(this);\n      if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n      value0 = this.getAttributeNS(fullname.space, fullname.local);\n      return value0 === value1 ? null\n          : value0 === value00 && value1 === value10 ? interpolate0\n          : interpolate0 = interpolate(value00 = value0, value10 = value1);\n    };\n  }\n\n  function transition_attr(name, value) {\n    var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform$2 : interpolate$1;\n    return this.attrTween(name, typeof value === \"function\"\n        ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n        : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n        : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value));\n  }\n\n  function attrTweenNS(fullname, value) {\n    function tween() {\n      var node = this, i = value.apply(node, arguments);\n      return i && function(t) {\n        node.setAttributeNS(fullname.space, fullname.local, i(t));\n      };\n    }\n    tween._value = value;\n    return tween;\n  }\n\n  function attrTween(name, value) {\n    function tween() {\n      var node = this, i = value.apply(node, arguments);\n      return i && function(t) {\n        node.setAttribute(name, i(t));\n      };\n    }\n    tween._value = value;\n    return tween;\n  }\n\n  function transition_attrTween(name, value) {\n    var key = \"attr.\" + name;\n    if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n    if (value == null) return this.tween(key, null);\n    if (typeof value !== \"function\") throw new Error;\n    var fullname = namespace(name);\n    return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n  }\n\n  function delayFunction(id, value) {\n    return function() {\n      init(this, id).delay = +value.apply(this, arguments);\n    };\n  }\n\n  function delayConstant(id, value) {\n    return value = +value, function() {\n      init(this, id).delay = value;\n    };\n  }\n\n  function transition_delay(value) {\n    var id = this._id;\n\n    return arguments.length\n        ? this.each((typeof value === \"function\"\n            ? delayFunction\n            : delayConstant)(id, value))\n        : get$1(this.node(), id).delay;\n  }\n\n  function durationFunction(id, value) {\n    return function() {\n      set$2(this, id).duration = +value.apply(this, arguments);\n    };\n  }\n\n  function durationConstant(id, value) {\n    return value = +value, function() {\n      set$2(this, id).duration = value;\n    };\n  }\n\n  function transition_duration(value) {\n    var id = this._id;\n\n    return arguments.length\n        ? this.each((typeof value === \"function\"\n            ? durationFunction\n            : durationConstant)(id, value))\n        : get$1(this.node(), id).duration;\n  }\n\n  function easeConstant(id, value) {\n    if (typeof value !== \"function\") throw new Error;\n    return function() {\n      set$2(this, id).ease = value;\n    };\n  }\n\n  function transition_ease(value) {\n    var id = this._id;\n\n    return arguments.length\n        ? this.each(easeConstant(id, value))\n        : get$1(this.node(), id).ease;\n  }\n\n  function transition_filter(match) {\n    if (typeof match !== \"function\") match = matcher$1(match);\n\n    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n        if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n          subgroup.push(node);\n        }\n      }\n    }\n\n    return new Transition(subgroups, this._parents, this._name, this._id);\n  }\n\n  function transition_merge(transition) {\n    if (transition._id !== this._id) throw new Error;\n\n    for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n      for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n        if (node = group0[i] || group1[i]) {\n          merge[i] = node;\n        }\n      }\n    }\n\n    for (; j < m0; ++j) {\n      merges[j] = groups0[j];\n    }\n\n    return new Transition(merges, this._parents, this._name, this._id);\n  }\n\n  function start$1(name) {\n    return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n      var i = t.indexOf(\".\");\n      if (i >= 0) t = t.slice(0, i);\n      return !t || t === \"start\";\n    });\n  }\n\n  function onFunction(id, name, listener) {\n    var on0, on1, sit = start$1(name) ? init : set$2;\n    return function() {\n      var schedule = sit(this, id),\n          on = schedule.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n      schedule.on = on1;\n    };\n  }\n\n  function transition_on(name, listener) {\n    var id = this._id;\n\n    return arguments.length < 2\n        ? get$1(this.node(), id).on.on(name)\n        : this.each(onFunction(id, name, listener));\n  }\n\n  function removeFunction(id) {\n    return function() {\n      var parent = this.parentNode;\n      for (var i in this.__transition) if (+i !== id) return;\n      if (parent) parent.removeChild(this);\n    };\n  }\n\n  function transition_remove() {\n    return this.on(\"end.remove\", removeFunction(this._id));\n  }\n\n  function transition_select(select) {\n    var name = this._name,\n        id = this._id;\n\n    if (typeof select !== \"function\") select = selector(select);\n\n    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n        if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          subgroup[i] = subnode;\n          schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n        }\n      }\n    }\n\n    return new Transition(subgroups, this._parents, name, id);\n  }\n\n  function transition_selectAll(select) {\n    var name = this._name,\n        id = this._id;\n\n    if (typeof select !== \"function\") select = selectorAll(select);\n\n    for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          for (var children = select.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n            if (child = children[k]) {\n              schedule(child, name, id, k, children, inherit);\n            }\n          }\n          subgroups.push(children);\n          parents.push(node);\n        }\n      }\n    }\n\n    return new Transition(subgroups, parents, name, id);\n  }\n\n  var Selection$1 = selection.prototype.constructor;\n\n  function transition_selection() {\n    return new Selection$1(this._groups, this._parents);\n  }\n\n  function styleRemove$1(name, interpolate) {\n    var value00,\n        value10,\n        interpolate0;\n    return function() {\n      var style = window(this).getComputedStyle(this, null),\n          value0 = style.getPropertyValue(name),\n          value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n      return value0 === value1 ? null\n          : value0 === value00 && value1 === value10 ? interpolate0\n          : interpolate0 = interpolate(value00 = value0, value10 = value1);\n    };\n  }\n\n  function styleRemoveEnd(name) {\n    return function() {\n      this.style.removeProperty(name);\n    };\n  }\n\n  function styleConstant$1(name, interpolate, value1) {\n    var value00,\n        interpolate0;\n    return function() {\n      var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n      return value0 === value1 ? null\n          : value0 === value00 ? interpolate0\n          : interpolate0 = interpolate(value00 = value0, value1);\n    };\n  }\n\n  function styleFunction$1(name, interpolate, value) {\n    var value00,\n        value10,\n        interpolate0;\n    return function() {\n      var style = window(this).getComputedStyle(this, null),\n          value0 = style.getPropertyValue(name),\n          value1 = value(this);\n      if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n      return value0 === value1 ? null\n          : value0 === value00 && value1 === value10 ? interpolate0\n          : interpolate0 = interpolate(value00 = value0, value10 = value1);\n    };\n  }\n\n  function transition_style(name, value, priority) {\n    var i = (name += \"\") === \"transform\" ? interpolateTransform$1 : interpolate$1;\n    return value == null ? this\n            .styleTween(name, styleRemove$1(name, i))\n            .on(\"end.style.\" + name, styleRemoveEnd(name))\n        : this.styleTween(name, typeof value === \"function\"\n            ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n            : styleConstant$1(name, i, value), priority);\n  }\n\n  function styleTween(name, value, priority) {\n    function tween() {\n      var node = this, i = value.apply(node, arguments);\n      return i && function(t) {\n        node.style.setProperty(name, i(t), priority);\n      };\n    }\n    tween._value = value;\n    return tween;\n  }\n\n  function transition_styleTween(name, value, priority) {\n    var key = \"style.\" + (name += \"\");\n    if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n    if (value == null) return this.tween(key, null);\n    if (typeof value !== \"function\") throw new Error;\n    return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n  }\n\n  function textConstant$1(value) {\n    return function() {\n      this.textContent = value;\n    };\n  }\n\n  function textFunction$1(value) {\n    return function() {\n      var value1 = value(this);\n      this.textContent = value1 == null ? \"\" : value1;\n    };\n  }\n\n  function transition_text(value) {\n    return this.tween(\"text\", typeof value === \"function\"\n        ? textFunction$1(tweenValue(this, \"text\", value))\n        : textConstant$1(value == null ? \"\" : value + \"\"));\n  }\n\n  function transition_transition() {\n    var name = this._name,\n        id0 = this._id,\n        id1 = newId();\n\n    for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          var inherit = get$1(node, id0);\n          schedule(node, name, id1, i, group, {\n            time: inherit.time + inherit.delay + inherit.duration,\n            delay: 0,\n            duration: inherit.duration,\n            ease: inherit.ease\n          });\n        }\n      }\n    }\n\n    return new Transition(groups, this._parents, name, id1);\n  }\n\n  var id = 0;\n\n  function Transition(groups, parents, name, id) {\n    this._groups = groups;\n    this._parents = parents;\n    this._name = name;\n    this._id = id;\n  }\n\n  function transition(name) {\n    return selection().transition(name);\n  }\n\n  function newId() {\n    return ++id;\n  }\n\n  var selection_prototype = selection.prototype;\n\n  Transition.prototype = transition.prototype = {\n    constructor: Transition,\n    select: transition_select,\n    selectAll: transition_selectAll,\n    filter: transition_filter,\n    merge: transition_merge,\n    selection: transition_selection,\n    transition: transition_transition,\n    call: selection_prototype.call,\n    nodes: selection_prototype.nodes,\n    node: selection_prototype.node,\n    size: selection_prototype.size,\n    empty: selection_prototype.empty,\n    each: selection_prototype.each,\n    on: transition_on,\n    attr: transition_attr,\n    attrTween: transition_attrTween,\n    style: transition_style,\n    styleTween: transition_styleTween,\n    text: transition_text,\n    remove: transition_remove,\n    tween: transition_tween,\n    delay: transition_delay,\n    duration: transition_duration,\n    ease: transition_ease\n  };\n\n  var defaultTiming = {\n    time: null, // Set on use.\n    delay: 0,\n    duration: 250,\n    ease: easeCubicInOut\n  };\n\n  function inherit(node, id) {\n    var timing;\n    while (!(timing = node.__transition) || !(timing = timing[id])) {\n      if (!(node = node.parentNode)) {\n        return defaultTiming.time = now(), defaultTiming;\n      }\n    }\n    return timing;\n  }\n\n  function selection_transition(name) {\n    var id,\n        timing;\n\n    if (name instanceof Transition) {\n      id = name._id, name = name._name;\n    } else {\n      id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n    }\n\n    for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          schedule(node, name, id, i, group, timing || inherit(node, id));\n        }\n      }\n    }\n\n    return new Transition(groups, this._parents, name, id);\n  }\n\n  selection.prototype.interrupt = selection_interrupt;\n  selection.prototype.transition = selection_transition;\n\n  var root$1 = [null];\n\n  function active(node, name) {\n    var schedules = node.__transition,\n        schedule,\n        i;\n\n    if (schedules) {\n      name = name == null ? null : name + \"\";\n      for (i in schedules) {\n        if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n          return new Transition([[node]], root$1, name, +i);\n        }\n      }\n    }\n\n    return null;\n  }\n\n  var slice$4 = Array.prototype.slice;\n\n  function identity$5(x) {\n    return x;\n  }\n\n  var top = 1;\n  var right = 2;\n  var bottom = 3;\n  var left = 4;\nvar   epsilon$2 = 1e-6;\n  function translateX(scale0, scale1, d) {\n    var x = scale0(d);\n    return \"translate(\" + (isFinite(x) ? x : scale1(d)) + \",0)\";\n  }\n\n  function translateY(scale0, scale1, d) {\n    var y = scale0(d);\n    return \"translate(0,\" + (isFinite(y) ? y : scale1(d)) + \")\";\n  }\n\n  function center(scale) {\n    var width = scale.bandwidth() / 2;\n    return function(d) {\n      return scale(d) + width;\n    };\n  }\n\n  function entering() {\n    return !this.__axis;\n  }\n\n  function axis(orient, scale) {\n    var tickArguments = [],\n        tickValues = null,\n        tickFormat = null,\n        tickSizeInner = 6,\n        tickSizeOuter = 6,\n        tickPadding = 3;\n\n    function axis(context) {\n      var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n          format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$5) : tickFormat,\n          spacing = Math.max(tickSizeInner, 0) + tickPadding,\n          transform = orient === top || orient === bottom ? translateX : translateY,\n          range = scale.range(),\n          range0 = range[0] + 0.5,\n          range1 = range[range.length - 1] + 0.5,\n          position = (scale.bandwidth ? center : identity$5)(scale.copy()),\n          selection = context.selection ? context.selection() : context,\n          path = selection.selectAll(\".domain\").data([null]),\n          tick = selection.selectAll(\".tick\").data(values, scale).order(),\n          tickExit = tick.exit(),\n          tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n          line = tick.select(\"line\"),\n          text = tick.select(\"text\"),\n          k = orient === top || orient === left ? -1 : 1,\n          x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\");\n\n      path = path.merge(path.enter().insert(\"path\", \".tick\")\n          .attr(\"class\", \"domain\")\n          .attr(\"stroke\", \"#000\"));\n\n      tick = tick.merge(tickEnter);\n\n      line = line.merge(tickEnter.append(\"line\")\n          .attr(\"stroke\", \"#000\")\n          .attr(x + \"2\", k * tickSizeInner)\n          .attr(y + \"1\", 0.5)\n          .attr(y + \"2\", 0.5));\n\n      text = text.merge(tickEnter.append(\"text\")\n          .attr(\"fill\", \"#000\")\n          .attr(x, k * spacing)\n          .attr(y, 0.5)\n          .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \".71em\" : \".32em\"));\n\n      if (context !== selection) {\n        path = path.transition(context);\n        tick = tick.transition(context);\n        line = line.transition(context);\n        text = text.transition(context);\n\n        tickExit = tickExit.transition(context)\n            .attr(\"opacity\", epsilon$2)\n            .attr(\"transform\", function(d) { return transform(position, this.parentNode.__axis || position, d); });\n\n        tickEnter\n            .attr(\"opacity\", epsilon$2)\n            .attr(\"transform\", function(d) { return transform(this.parentNode.__axis || position, position, d); });\n      }\n\n      tickExit.remove();\n\n      path\n          .attr(\"d\", orient === left || orient == right\n              ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n              : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n      tick\n          .attr(\"opacity\", 1)\n          .attr(\"transform\", function(d) { return transform(position, position, d); });\n\n      line\n          .attr(x + \"2\", k * tickSizeInner);\n\n      text\n          .attr(x, k * spacing)\n          .text(format);\n\n      selection.filter(entering)\n          .attr(\"fill\", \"none\")\n          .attr(\"font-size\", 10)\n          .attr(\"font-family\", \"sans-serif\")\n          .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n      selection\n          .each(function() { this.__axis = position; });\n    }\n\n    axis.scale = function(_) {\n      return arguments.length ? (scale = _, axis) : scale;\n    };\n\n    axis.ticks = function() {\n      return tickArguments = slice$4.call(arguments), axis;\n    };\n\n    axis.tickArguments = function(_) {\n      return arguments.length ? (tickArguments = _ == null ? [] : slice$4.call(_), axis) : tickArguments.slice();\n    };\n\n    axis.tickValues = function(_) {\n      return arguments.length ? (tickValues = _ == null ? null : slice$4.call(_), axis) : tickValues && tickValues.slice();\n    };\n\n    axis.tickFormat = function(_) {\n      return arguments.length ? (tickFormat = _, axis) : tickFormat;\n    };\n\n    axis.tickSize = function(_) {\n      return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n    };\n\n    axis.tickSizeInner = function(_) {\n      return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n    };\n\n    axis.tickSizeOuter = function(_) {\n      return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n    };\n\n    axis.tickPadding = function(_) {\n      return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n    };\n\n    return axis;\n  }\n\n  function axisTop(scale) {\n    return axis(top, scale);\n  }\n\n  function axisRight(scale) {\n    return axis(right, scale);\n  }\n\n  function axisBottom(scale) {\n    return axis(bottom, scale);\n  }\n\n  function axisLeft(scale) {\n    return axis(left, scale);\n  }\n\n  function defaultSeparation(a, b) {\n    return a.parent === b.parent ? 1 : 2;\n  }\n\n  function meanX(children) {\n    return children.reduce(meanXReduce, 0) / children.length;\n  }\n\n  function meanXReduce(x, c) {\n    return x + c.x;\n  }\n\n  function maxY(children) {\n    return 1 + children.reduce(maxYReduce, 0);\n  }\n\n  function maxYReduce(y, c) {\n    return Math.max(y, c.y);\n  }\n\n  function leafLeft(node) {\n    var children;\n    while (children = node.children) node = children[0];\n    return node;\n  }\n\n  function leafRight(node) {\n    var children;\n    while (children = node.children) node = children[children.length - 1];\n    return node;\n  }\n\n  function cluster() {\n    var separation = defaultSeparation,\n        dx = 1,\n        dy = 1,\n        nodeSize = false;\n\n    function cluster(root) {\n      var previousNode,\n          x = 0;\n\n      // First walk, computing the initial x & y values.\n      root.eachAfter(function(node) {\n        var children = node.children;\n        if (children) {\n          node.x = meanX(children);\n          node.y = maxY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n\n      var left = leafLeft(root),\n          right = leafRight(root),\n          x0 = left.x - separation(left, right) / 2,\n          x1 = right.x + separation(right, left) / 2;\n\n      // Second walk, normalizing x & y to the desired size.\n      return root.eachAfter(nodeSize ? function(node) {\n        node.x = (node.x - root.x) * dx;\n        node.y = (root.y - node.y) * dy;\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * dx;\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n      });\n    }\n\n    cluster.separation = function(x) {\n      return arguments.length ? (separation = x, cluster) : separation;\n    };\n\n    cluster.size = function(x) {\n      return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n    };\n\n    cluster.nodeSize = function(x) {\n      return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n    };\n\n    return cluster;\n  }\n\n  function node_each(callback) {\n    var node = this, current, next = [node], children, i, n;\n    do {\n      current = next.reverse(), next = [];\n      while (node = current.pop()) {\n        callback(node), children = node.children;\n        if (children) for (i = 0, n = children.length; i < n; ++i) {\n          next.push(children[i]);\n        }\n      }\n    } while (next.length);\n    return this;\n  }\n\n  function node_eachBefore(callback) {\n    var node = this, nodes = [node], children, i;\n    while (node = nodes.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = children.length - 1; i >= 0; --i) {\n        nodes.push(children[i]);\n      }\n    }\n    return this;\n  }\n\n  function node_eachAfter(callback) {\n    var node = this, nodes = [node], next = [], children, i, n;\n    while (node = nodes.pop()) {\n      next.push(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        nodes.push(children[i]);\n      }\n    }\n    while (node = next.pop()) {\n      callback(node);\n    }\n    return this;\n  }\n\n  function node_sum(value) {\n    return this.eachAfter(function(node) {\n      var sum = +value(node.data) || 0,\n          children = node.children,\n          i = children && children.length;\n      while (--i >= 0) sum += children[i].value;\n      node.value = sum;\n    });\n  }\n\n  function node_sort(compare) {\n    return this.eachBefore(function(node) {\n      if (node.children) {\n        node.children.sort(compare);\n      }\n    });\n  }\n\n  function node_path(end) {\n    var start = this,\n        ancestor = leastCommonAncestor(start, end),\n        nodes = [start];\n    while (start !== ancestor) {\n      start = start.parent;\n      nodes.push(start);\n    }\n    var k = nodes.length;\n    while (end !== ancestor) {\n      nodes.splice(k, 0, end);\n      end = end.parent;\n    }\n    return nodes;\n  }\n\n  function leastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = a.ancestors(),\n        bNodes = b.ancestors(),\n        c = null;\n    a = aNodes.pop();\n    b = bNodes.pop();\n    while (a === b) {\n      c = a;\n      a = aNodes.pop();\n      b = bNodes.pop();\n    }\n    return c;\n  }\n\n  function node_ancestors() {\n    var node = this, nodes = [node];\n    while (node = node.parent) {\n      nodes.push(node);\n    }\n    return nodes;\n  }\n\n  function node_descendants() {\n    var nodes = [];\n    this.each(function(node) {\n      nodes.push(node);\n    });\n    return nodes;\n  }\n\n  function node_leaves() {\n    var leaves = [];\n    this.eachBefore(function(node) {\n      if (!node.children) {\n        leaves.push(node);\n      }\n    });\n    return leaves;\n  }\n\n  function node_links() {\n    var root = this, links = [];\n    root.each(function(node) {\n      if (node !== root) { // Don’t include the root’s parent, if any.\n        links.push({source: node.parent, target: node});\n      }\n    });\n    return links;\n  }\n\n  function hierarchy(data, children) {\n    var root = new Node(data),\n        valued = +data.value && (root.value = data.value),\n        node,\n        nodes = [root],\n        child,\n        childs,\n        i,\n        n;\n\n    if (children == null) children = defaultChildren;\n\n    while (node = nodes.pop()) {\n      if (valued) node.value = +node.data.value;\n      if ((childs = children(node.data)) && (n = childs.length)) {\n        node.children = new Array(n);\n        for (i = n - 1; i >= 0; --i) {\n          nodes.push(child = node.children[i] = new Node(childs[i]));\n          child.parent = node;\n          child.depth = node.depth + 1;\n        }\n      }\n    }\n\n    return root.eachBefore(computeHeight);\n  }\n\n  function node_copy() {\n    return hierarchy(this).eachBefore(copyData);\n  }\n\n  function defaultChildren(d) {\n    return d.children;\n  }\n\n  function copyData(node) {\n    node.data = node.data.data;\n  }\n\n  function computeHeight(node) {\n    var height = 0;\n    do node.height = height;\n    while ((node = node.parent) && (node.height < ++height));\n  }\n\n  function Node(data) {\n    this.data = data;\n    this.depth =\n    this.height = 0;\n    this.parent = null;\n  }\n\n  Node.prototype = hierarchy.prototype = {\n    constructor: Node,\n    each: node_each,\n    eachAfter: node_eachAfter,\n    eachBefore: node_eachBefore,\n    sum: node_sum,\n    sort: node_sort,\n    path: node_path,\n    ancestors: node_ancestors,\n    descendants: node_descendants,\n    leaves: node_leaves,\n    links: node_links,\n    copy: node_copy\n  };\n\n  function Node$2(value) {\n    this._ = value;\n    this.next = null;\n  }\n\n  function shuffle$1(array) {\n    var i,\n        n = (array = array.slice()).length,\n        head = null,\n        node = head;\n\n    while (n) {\n      var next = new Node$2(array[n - 1]);\n      if (node) node = node.next = next;\n      else node = head = next;\n      array[i] = array[--n];\n    }\n\n    return {\n      head: head,\n      tail: node\n    };\n  }\n\n  function enclose(circles) {\n    return encloseN(shuffle$1(circles), []);\n  }\n\n  function encloses(a, b) {\n    var dx = b.x - a.x,\n        dy = b.y - a.y,\n        dr = a.r - b.r;\n    return dr * dr + 1e-6 > dx * dx + dy * dy;\n  }\n\n  // Returns the smallest circle that contains circles L and intersects circles B.\n  function encloseN(L, B) {\n    var circle,\n        l0 = null,\n        l1 = L.head,\n        l2,\n        p1;\n\n    switch (B.length) {\n      case 1: circle = enclose1(B[0]); break;\n      case 2: circle = enclose2(B[0], B[1]); break;\n      case 3: circle = enclose3(B[0], B[1], B[2]); break;\n    }\n\n    while (l1) {\n      p1 = l1._, l2 = l1.next;\n      if (!circle || !encloses(circle, p1)) {\n\n        // Temporarily truncate L before l1.\n        if (l0) L.tail = l0, l0.next = null;\n        else L.head = L.tail = null;\n\n        B.push(p1);\n        circle = encloseN(L, B); // Note: reorders L!\n        B.pop();\n\n        // Move l1 to the front of L and reconnect the truncated list L.\n        if (L.head) l1.next = L.head, L.head = l1;\n        else l1.next = null, L.head = L.tail = l1;\n        l0 = L.tail, l0.next = l2;\n\n      } else {\n        l0 = l1;\n      }\n      l1 = l2;\n    }\n\n    L.tail = l0;\n    return circle;\n  }\n\n  function enclose1(a) {\n    return {\n      x: a.x,\n      y: a.y,\n      r: a.r\n    };\n  }\n\n  function enclose2(a, b) {\n    var x1 = a.x, y1 = a.y, r1 = a.r,\n        x2 = b.x, y2 = b.y, r2 = b.r,\n        x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n        l = Math.sqrt(x21 * x21 + y21 * y21);\n    return {\n      x: (x1 + x2 + x21 / l * r21) / 2,\n      y: (y1 + y2 + y21 / l * r21) / 2,\n      r: (l + r1 + r2) / 2\n    };\n  }\n\n  function enclose3(a, b, c) {\n    var x1 = a.x, y1 = a.y, r1 = a.r,\n        x2 = b.x, y2 = b.y, r2 = b.r,\n        x3 = c.x, y3 = c.y, r3 = c.r,\n        a2 = 2 * (x1 - x2),\n        b2 = 2 * (y1 - y2),\n        c2 = 2 * (r2 - r1),\n        d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n        a3 = 2 * (x1 - x3),\n        b3 = 2 * (y1 - y3),\n        c3 = 2 * (r3 - r1),\n        d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n        ab = a3 * b2 - a2 * b3,\n        xa = (b2 * d3 - b3 * d2) / ab - x1,\n        xb = (b3 * c2 - b2 * c3) / ab,\n        ya = (a3 * d2 - a2 * d3) / ab - y1,\n        yb = (a2 * c3 - a3 * c2) / ab,\n        A = xb * xb + yb * yb - 1,\n        B = 2 * (xa * xb + ya * yb + r1),\n        C = xa * xa + ya * ya - r1 * r1,\n        r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n    return {\n      x: xa + xb * r + x1,\n      y: ya + yb * r + y1,\n      r: r\n    };\n  }\n\n  function place(a, b, c) {\n    var ax = a.x,\n        ay = a.y,\n        da = b.r + c.r,\n        db = a.r + c.r,\n        dx = b.x - ax,\n        dy = b.y - ay,\n        dc = dx * dx + dy * dy;\n    if (dc) {\n      var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n          y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = ax + x * dx + y * dy;\n      c.y = ay + x * dy - y * dx;\n    } else {\n      c.x = ax + db;\n      c.y = ay;\n    }\n  }\n\n  function intersects(a, b) {\n    var dx = b.x - a.x,\n        dy = b.y - a.y,\n        dr = a.r + b.r;\n    return dr * dr > dx * dx + dy * dy;\n  }\n\n  function distance2(circle, x, y) {\n    var dx = circle.x - x,\n        dy = circle.y - y;\n    return dx * dx + dy * dy;\n  }\n\n  function Node$1(circle) {\n    this._ = circle;\n    this.next = null;\n    this.previous = null;\n  }\n\n  function packEnclose(circles) {\n    if (!(n = circles.length)) return 0;\n\n    var a, b, c, n;\n\n    // Place the first circle.\n    a = circles[0], a.x = 0, a.y = 0;\n    if (!(n > 1)) return a.r;\n\n    // Place the second circle.\n    b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n    if (!(n > 2)) return a.r + b.r;\n\n    // Place the third circle.\n    place(b, a, c = circles[2]);\n\n    // Initialize the weighted centroid.\n    var aa = a.r * a.r,\n        ba = b.r * b.r,\n        ca = c.r * c.r,\n        oa = aa + ba + ca,\n        ox = aa * a.x + ba * b.x + ca * c.x,\n        oy = aa * a.y + ba * b.y + ca * c.y,\n        cx, cy, i, j, k, sj, sk;\n\n    // Initialize the front-chain using the first three circles a, b and c.\n    a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n    a.next = c.previous = b;\n    b.next = a.previous = c;\n    c.next = b.previous = a;\n\n    // Attempt to place each remaining circle…\n    pack: for (i = 3; i < n; ++i) {\n      place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n      // If there are only three elements in the front-chain…\n      if ((k = a.previous) === (j = b.next)) {\n        // If the new circle intersects the third circle,\n        // rotate the front chain to try the next position.\n        if (intersects(j._, c._)) {\n          a = b, b = j, --i;\n          continue pack;\n        }\n      }\n\n      // Find the closest intersecting circle on the front-chain, if any.\n      else {\n        sj = j._.r, sk = k._.r;\n        do {\n          if (sj <= sk) {\n            if (intersects(j._, c._)) {\n              b = j, a.next = b, b.previous = a, --i;\n              continue pack;\n            }\n            j = j.next, sj += j._.r;\n          } else {\n            if (intersects(k._, c._)) {\n              a = k, a.next = b, b.previous = a, --i;\n              continue pack;\n            }\n            k = k.previous, sk += k._.r;\n          }\n        } while (j !== k.next);\n      }\n\n      // Success! Insert the new circle c between a and b.\n      c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n      // Update the weighted centroid.\n      oa += ca = c._.r * c._.r;\n      ox += ca * c._.x;\n      oy += ca * c._.y;\n\n      // Compute the new closest circle a to centroid.\n      aa = distance2(a._, cx = ox / oa, cy = oy / oa);\n      while ((c = c.next) !== b) {\n        if ((ca = distance2(c._, cx, cy)) < aa) {\n          a = c, aa = ca;\n        }\n      }\n      b = a.next;\n    }\n\n    // Compute the enclosing circle of the front chain.\n    a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n    // Translate the circles to put the enclosing circle around the origin.\n    for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n    return c.r;\n  }\n\n  function siblings(circles) {\n    packEnclose(circles);\n    return circles;\n  }\n\n  function optional(f) {\n    return f == null ? null : required(f);\n  }\n\n  function required(f) {\n    if (typeof f !== \"function\") throw new Error;\n    return f;\n  }\n\n  function constantZero() {\n    return 0;\n  }\n\n  function constant$5(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function defaultRadius(d) {\n    return Math.sqrt(d.value);\n  }\n\n  function index() {\n    var radius = null,\n        dx = 1,\n        dy = 1,\n        padding = constantZero;\n\n    function pack(root) {\n      root.x = dx / 2, root.y = dy / 2;\n      if (radius) {\n        root.eachBefore(radiusLeaf(radius))\n            .eachAfter(packChildren(padding, 0.5))\n            .eachBefore(translateChild(1));\n      } else {\n        root.eachBefore(radiusLeaf(defaultRadius))\n            .eachAfter(packChildren(constantZero, 1))\n            .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n            .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n      }\n      return root;\n    }\n\n    pack.radius = function(x) {\n      return arguments.length ? (radius = optional(x), pack) : radius;\n    };\n\n    pack.size = function(x) {\n      return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n    };\n\n    pack.padding = function(x) {\n      return arguments.length ? (padding = typeof x === \"function\" ? x : constant$5(+x), pack) : padding;\n    };\n\n    return pack;\n  }\n\n  function radiusLeaf(radius) {\n    return function(node) {\n      if (!node.children) {\n        node.r = Math.max(0, +radius(node) || 0);\n      }\n    };\n  }\n\n  function packChildren(padding, k) {\n    return function(node) {\n      if (children = node.children) {\n        var children,\n            i,\n            n = children.length,\n            r = padding(node) * k || 0,\n            e;\n\n        if (r) for (i = 0; i < n; ++i) children[i].r += r;\n        e = packEnclose(children);\n        if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n        node.r = e + r;\n      }\n    };\n  }\n\n  function translateChild(k) {\n    return function(node) {\n      var parent = node.parent;\n      node.r *= k;\n      if (parent) {\n        node.x = parent.x + k * node.x;\n        node.y = parent.y + k * node.y;\n      }\n    };\n  }\n\n  function roundNode(node) {\n    node.x0 = Math.round(node.x0);\n    node.y0 = Math.round(node.y0);\n    node.x1 = Math.round(node.x1);\n    node.y1 = Math.round(node.y1);\n  }\n\n  function treemapDice(parent, x0, y0, x1, y1) {\n    var nodes = parent.children,\n        node,\n        i = -1,\n        n = nodes.length,\n        k = parent.value && (x1 - x0) / parent.value;\n\n    while (++i < n) {\n      node = nodes[i], node.y0 = y0, node.y1 = y1;\n      node.x0 = x0, node.x1 = x0 += node.value * k;\n    }\n  }\n\n  function partition() {\n    var dx = 1,\n        dy = 1,\n        padding = 0,\n        round = false;\n\n    function partition(root) {\n      var n = root.height + 1;\n      root.x0 =\n      root.y0 = padding;\n      root.x1 = dx;\n      root.y1 = dy / n;\n      root.eachBefore(positionNode(dy, n));\n      if (round) root.eachBefore(roundNode);\n      return root;\n    }\n\n    function positionNode(dy, n) {\n      return function(node) {\n        if (node.children) {\n          treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n        }\n        var x0 = node.x0,\n            y0 = node.y0,\n            x1 = node.x1 - padding,\n            y1 = node.y1 - padding;\n        if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n        if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n        node.x0 = x0;\n        node.y0 = y0;\n        node.x1 = x1;\n        node.y1 = y1;\n      };\n    }\n\n    partition.round = function(x) {\n      return arguments.length ? (round = !!x, partition) : round;\n    };\n\n    partition.size = function(x) {\n      return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n    };\n\n    partition.padding = function(x) {\n      return arguments.length ? (padding = +x, partition) : padding;\n    };\n\n    return partition;\n  }\n\nvar   keyPrefix$1 = \"$\";\n  var preroot = {depth: -1};\n  var ambiguous = {};\n  function defaultId(d) {\n    return d.id;\n  }\n\n  function defaultParentId(d) {\n    return d.parentId;\n  }\n\n  function stratify() {\n    var id = defaultId,\n        parentId = defaultParentId;\n\n    function stratify(data) {\n      var d,\n          i,\n          n = data.length,\n          root,\n          parent,\n          node,\n          nodes = new Array(n),\n          nodeId,\n          nodeKey,\n          nodeByKey = {};\n\n      for (i = 0; i < n; ++i) {\n        d = data[i], node = nodes[i] = new Node(d);\n        if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n          nodeKey = keyPrefix$1 + (node.id = nodeId);\n          nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n        }\n      }\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i], nodeId = parentId(data[i], i, data);\n        if (nodeId == null || !(nodeId += \"\")) {\n          if (root) throw new Error(\"multiple roots\");\n          root = node;\n        } else {\n          parent = nodeByKey[keyPrefix$1 + nodeId];\n          if (!parent) throw new Error(\"missing: \" + nodeId);\n          if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n          if (parent.children) parent.children.push(node);\n          else parent.children = [node];\n          node.parent = parent;\n        }\n      }\n\n      if (!root) throw new Error(\"no root\");\n      root.parent = preroot;\n      root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n      root.parent = null;\n      if (n > 0) throw new Error(\"cycle\");\n\n      return root;\n    }\n\n    stratify.id = function(x) {\n      return arguments.length ? (id = required(x), stratify) : id;\n    };\n\n    stratify.parentId = function(x) {\n      return arguments.length ? (parentId = required(x), stratify) : parentId;\n    };\n\n    return stratify;\n  }\n\n  function defaultSeparation$1(a, b) {\n    return a.parent === b.parent ? 1 : 2;\n  }\n\n  // function radialSeparation(a, b) {\n  //   return (a.parent === b.parent ? 1 : 2) / a.depth;\n  // }\n\n  // This function is used to traverse the left contour of a subtree (or\n  // subforest). It returns the successor of v on this contour. This successor is\n  // either given by the leftmost child of v or by the thread of v. The function\n  // returns null if and only if v is on the highest level of its subtree.\n  function nextLeft(v) {\n    var children = v.children;\n    return children ? children[0] : v.t;\n  }\n\n  // This function works analogously to nextLeft.\n  function nextRight(v) {\n    var children = v.children;\n    return children ? children[children.length - 1] : v.t;\n  }\n\n  // Shifts the current subtree rooted at w+. This is done by increasing\n  // prelim(w+) and mod(w+) by shift.\n  function moveSubtree(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n\n  // All other shifts, applied to the smaller subtrees between w- and w+, are\n  // performed by this function. To prepare the shifts, we have to adjust\n  // change(w+), shift(w+), and change(w-).\n  function executeShifts(v) {\n    var shift = 0,\n        change = 0,\n        children = v.children,\n        i = children.length,\n        w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n\n  // If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n  // returns the specified (default) ancestor.\n  function nextAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n\n  function TreeNode(node, i) {\n    this._ = node;\n    this.parent = null;\n    this.children = null;\n    this.A = null; // default ancestor\n    this.a = this; // ancestor\n    this.z = 0; // prelim\n    this.m = 0; // mod\n    this.c = 0; // change\n    this.s = 0; // shift\n    this.t = null; // thread\n    this.i = i; // number\n  }\n\n  TreeNode.prototype = Object.create(Node.prototype);\n\n  function treeRoot(root) {\n    var tree = new TreeNode(root, 0),\n        node,\n        nodes = [tree],\n        child,\n        children,\n        i,\n        n;\n\n    while (node = nodes.pop()) {\n      if (children = node._.children) {\n        node.children = new Array(n = children.length);\n        for (i = n - 1; i >= 0; --i) {\n          nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n          child.parent = node;\n        }\n      }\n    }\n\n    (tree.parent = new TreeNode(null, 0)).children = [tree];\n    return tree;\n  }\n\n  // Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\n  function tree() {\n    var separation = defaultSeparation$1,\n        dx = 1,\n        dy = 1,\n        nodeSize = null;\n\n    function tree(root) {\n      var t = treeRoot(root);\n\n      // Compute the layout using Buchheim et al.’s algorithm.\n      t.eachAfter(firstWalk), t.parent.m = -t.z;\n      t.eachBefore(secondWalk);\n\n      // If a fixed node size is specified, scale x and y.\n      if (nodeSize) root.eachBefore(sizeNode);\n\n      // If a fixed tree size is specified, scale x and y based on the extent.\n      // Compute the left-most, right-most, and depth-most nodes for extents.\n      else {\n        var left = root,\n            right = root,\n            bottom = root;\n        root.eachBefore(function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var s = left === right ? 1 : separation(left, right) / 2,\n            tx = s - left.x,\n            kx = dx / (right.x + s + tx),\n            ky = dy / (bottom.depth || 1);\n        root.eachBefore(function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n\n      return root;\n    }\n\n    // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n    // applied recursively to the children of v, as well as the function\n    // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n    // node v is placed to the midpoint of its outermost children.\n    function firstWalk(v) {\n      var children = v.children,\n          siblings = v.parent.children,\n          w = v.i ? siblings[v.i - 1] : null;\n      if (children) {\n        executeShifts(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n\n    // Computes all real x-coordinates by summing up the modifiers recursively.\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n\n    // The core of the algorithm. Here, a new subtree is combined with the\n    // previous subtrees. Threads are used to traverse the inside and outside\n    // contours of the left and right subtree up to the highest common level. The\n    // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n    // superscript o means outside and i means inside, the subscript - means left\n    // subtree and + means right subtree. For summing up the modifiers along the\n    // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n    // nodes of the inside contours conflict, we compute the left one of the\n    // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n    // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n    // Finally, we add a new thread (if necessary).\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v,\n            vop = v,\n            vim = w,\n            vom = vip.parent.children[0],\n            sip = vip.m,\n            sop = vop.m,\n            sim = vim.m,\n            som = vom.m,\n            shift;\n        while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n          vom = nextLeft(vom);\n          vop = nextRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !nextRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !nextLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n\n    function sizeNode(node) {\n      node.x *= dx;\n      node.y = node.depth * dy;\n    }\n\n    tree.separation = function(x) {\n      return arguments.length ? (separation = x, tree) : separation;\n    };\n\n    tree.size = function(x) {\n      return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n    };\n\n    tree.nodeSize = function(x) {\n      return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n    };\n\n    return tree;\n  }\n\n  function treemapSlice(parent, x0, y0, x1, y1) {\n    var nodes = parent.children,\n        node,\n        i = -1,\n        n = nodes.length,\n        k = parent.value && (y1 - y0) / parent.value;\n\n    while (++i < n) {\n      node = nodes[i], node.x0 = x0, node.x1 = x1;\n      node.y0 = y0, node.y1 = y0 += node.value * k;\n    }\n  }\n\n  var phi = (1 + Math.sqrt(5)) / 2;\n\n  function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n    var rows = [],\n        nodes = parent.children,\n        row,\n        nodeValue,\n        i0 = 0,\n        i1,\n        n = nodes.length,\n        dx, dy,\n        value = parent.value,\n        sumValue,\n        minValue,\n        maxValue,\n        newRatio,\n        minRatio,\n        alpha,\n        beta;\n\n    while (i0 < n) {\n      dx = x1 - x0, dy = y1 - y0;\n      minValue = maxValue = sumValue = nodes[i0].value;\n      alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n      beta = sumValue * sumValue * alpha;\n      minRatio = Math.max(maxValue / beta, beta / minValue);\n\n      // Keep adding nodes while the aspect ratio maintains or improves.\n      for (i1 = i0 + 1; i1 < n; ++i1) {\n        sumValue += nodeValue = nodes[i1].value;\n        if (nodeValue < minValue) minValue = nodeValue;\n        if (nodeValue > maxValue) maxValue = nodeValue;\n        beta = sumValue * sumValue * alpha;\n        newRatio = Math.max(maxValue / beta, beta / minValue);\n        if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n        minRatio = newRatio;\n      }\n\n      // Position and record the row orientation.\n      rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n      if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n      else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n      value -= sumValue, i0 = i1;\n    }\n\n    return rows;\n  }\n\n  var squarify = (function custom(ratio) {\n\n    function squarify(parent, x0, y0, x1, y1) {\n      squarifyRatio(ratio, parent, x0, y0, x1, y1);\n    }\n\n    squarify.ratio = function(x) {\n      return custom((x = +x) > 1 ? x : 1);\n    };\n\n    return squarify;\n  })(phi);\n\n  function index$1() {\n    var tile = squarify,\n        round = false,\n        dx = 1,\n        dy = 1,\n        paddingStack = [0],\n        paddingInner = constantZero,\n        paddingTop = constantZero,\n        paddingRight = constantZero,\n        paddingBottom = constantZero,\n        paddingLeft = constantZero;\n\n    function treemap(root) {\n      root.x0 =\n      root.y0 = 0;\n      root.x1 = dx;\n      root.y1 = dy;\n      root.eachBefore(positionNode);\n      paddingStack = [0];\n      if (round) root.eachBefore(roundNode);\n      return root;\n    }\n\n    function positionNode(node) {\n      var p = paddingStack[node.depth],\n          x0 = node.x0 + p,\n          y0 = node.y0 + p,\n          x1 = node.x1 - p,\n          y1 = node.y1 - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n      if (node.children) {\n        p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n        x0 += paddingLeft(node) - p;\n        y0 += paddingTop(node) - p;\n        x1 -= paddingRight(node) - p;\n        y1 -= paddingBottom(node) - p;\n        if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n        if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n        tile(node, x0, y0, x1, y1);\n      }\n    }\n\n    treemap.round = function(x) {\n      return arguments.length ? (round = !!x, treemap) : round;\n    };\n\n    treemap.size = function(x) {\n      return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n    };\n\n    treemap.tile = function(x) {\n      return arguments.length ? (tile = required(x), treemap) : tile;\n    };\n\n    treemap.padding = function(x) {\n      return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n    };\n\n    treemap.paddingInner = function(x) {\n      return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$5(+x), treemap) : paddingInner;\n    };\n\n    treemap.paddingOuter = function(x) {\n      return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n    };\n\n    treemap.paddingTop = function(x) {\n      return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$5(+x), treemap) : paddingTop;\n    };\n\n    treemap.paddingRight = function(x) {\n      return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$5(+x), treemap) : paddingRight;\n    };\n\n    treemap.paddingBottom = function(x) {\n      return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$5(+x), treemap) : paddingBottom;\n    };\n\n    treemap.paddingLeft = function(x) {\n      return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$5(+x), treemap) : paddingLeft;\n    };\n\n    return treemap;\n  }\n\n  function binary(parent, x0, y0, x1, y1) {\n    var nodes = parent.children,\n        i, n = nodes.length,\n        sum, sums = new Array(n + 1);\n\n    for (sums[0] = sum = i = 0; i < n; ++i) {\n      sums[i + 1] = sum += nodes[i].value;\n    }\n\n    partition(0, n, parent.value, x0, y0, x1, y1);\n\n    function partition(i, j, value, x0, y0, x1, y1) {\n      if (i >= j - 1) {\n        var node = nodes[i];\n        node.x0 = x0, node.y0 = y0;\n        node.x1 = x1, node.y1 = y1;\n        return;\n      }\n\n      var valueOffset = sums[i],\n          valueTarget = (value / 2) + valueOffset,\n          k = i + 1,\n          hi = j - 1;\n\n      while (k < hi) {\n        var mid = k + hi >>> 1;\n        if (sums[mid] < valueTarget) k = mid + 1;\n        else hi = mid;\n      }\n\n      var valueLeft = sums[k] - valueOffset,\n          valueRight = value - valueLeft;\n\n      if ((y1 - y0) > (x1 - x0)) {\n        var yk = (y0 * valueRight + y1 * valueLeft) / value;\n        partition(i, k, valueLeft, x0, y0, x1, yk);\n        partition(k, j, valueRight, x0, yk, x1, y1);\n      } else {\n        var xk = (x0 * valueRight + x1 * valueLeft) / value;\n        partition(i, k, valueLeft, x0, y0, xk, y1);\n        partition(k, j, valueRight, xk, y0, x1, y1);\n      }\n    }\n  }\n\n  function sliceDice(parent, x0, y0, x1, y1) {\n    (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n  }\n\n  var resquarify = (function custom(ratio) {\n\n    function resquarify(parent, x0, y0, x1, y1) {\n      if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n        var rows,\n            row,\n            nodes,\n            i,\n            j = -1,\n            n,\n            m = rows.length,\n            value = parent.value;\n\n        while (++j < m) {\n          row = rows[j], nodes = row.children;\n          for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n          if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n          else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n          value -= row.value;\n        }\n      } else {\n        parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n        rows.ratio = ratio;\n      }\n    }\n\n    resquarify.ratio = function(x) {\n      return custom((x = +x) > 1 ? x : 1);\n    };\n\n    return resquarify;\n  })(phi);\n\n  function center$1(x, y) {\n    var nodes;\n\n    if (x == null) x = 0;\n    if (y == null) y = 0;\n\n    function force() {\n      var i,\n          n = nodes.length,\n          node,\n          sx = 0,\n          sy = 0;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i], sx += node.x, sy += node.y;\n      }\n\n      for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n        node = nodes[i], node.x -= sx, node.y -= sy;\n      }\n    }\n\n    force.initialize = function(_) {\n      nodes = _;\n    };\n\n    force.x = function(_) {\n      return arguments.length ? (x = +_, force) : x;\n    };\n\n    force.y = function(_) {\n      return arguments.length ? (y = +_, force) : y;\n    };\n\n    return force;\n  }\n\n  function constant$6(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function jiggle() {\n    return (Math.random() - 0.5) * 1e-6;\n  }\n\n  function x$1(d) {\n    return d.x + d.vx;\n  }\n\n  function y$1(d) {\n    return d.y + d.vy;\n  }\n\n  function collide(radius) {\n    var nodes,\n        radii,\n        strength = 1,\n        iterations = 1;\n\n    if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\n    function force() {\n      var i, n = nodes.length,\n          tree,\n          node,\n          xi,\n          yi,\n          ri,\n          ri2;\n\n      for (var k = 0; k < iterations; ++k) {\n        tree = quadtree(nodes, x$1, y$1).visitAfter(prepare);\n        for (i = 0; i < n; ++i) {\n          node = nodes[i];\n          ri = radii[i], ri2 = ri * ri;\n          xi = node.x + node.vx;\n          yi = node.y + node.vy;\n          tree.visit(apply);\n        }\n      }\n\n      function apply(quad, x0, y0, x1, y1) {\n        var data = quad.data, rj = quad.r, r = ri + rj;\n        if (data) {\n          if (data.index > i) {\n            var x = xi - data.x - data.vx,\n                y = yi - data.y - data.vy,\n                l = x * x + y * y;\n            if (l < r * r) {\n              if (x === 0) x = jiggle(), l += x * x;\n              if (y === 0) y = jiggle(), l += y * y;\n              l = (r - (l = Math.sqrt(l))) / l * strength;\n              node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n              node.vy += (y *= l) * r;\n              data.vx -= x * (r = 1 - r);\n              data.vy -= y * r;\n            }\n          }\n          return;\n        }\n        return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n      }\n    }\n\n    function prepare(quad) {\n      if (quad.data) return quad.r = radii[quad.data.index];\n      for (var i = quad.r = 0; i < 4; ++i) {\n        if (quad[i] && quad[i].r > quad.r) {\n          quad.r = quad[i].r;\n        }\n      }\n    }\n\n    force.initialize = function(_) {\n      var i, n = (nodes = _).length; radii = new Array(n);\n      for (i = 0; i < n; ++i) radii[i] = +radius(nodes[i], i, nodes);\n    };\n\n    force.iterations = function(_) {\n      return arguments.length ? (iterations = +_, force) : iterations;\n    };\n\n    force.strength = function(_) {\n      return arguments.length ? (strength = +_, force) : strength;\n    };\n\n    force.radius = function(_) {\n      return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), force) : radius;\n    };\n\n    return force;\n  }\n\n  function index$2(d, i) {\n    return i;\n  }\n\n  function link(links) {\n    var id = index$2,\n        strength = defaultStrength,\n        strengths,\n        distance = constant$6(30),\n        distances,\n        nodes,\n        count,\n        bias,\n        iterations = 1;\n\n    if (links == null) links = [];\n\n    function defaultStrength(link) {\n      return 1 / Math.min(count[link.source.index], count[link.target.index]);\n    }\n\n    function force(alpha) {\n      for (var k = 0, n = links.length; k < iterations; ++k) {\n        for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n          link = links[i], source = link.source, target = link.target;\n          x = target.x + target.vx - source.x - source.vx || jiggle();\n          y = target.y + target.vy - source.y - source.vy || jiggle();\n          l = Math.sqrt(x * x + y * y);\n          l = (l - distances[i]) / l * alpha * strengths[i];\n          x *= l, y *= l;\n          target.vx -= x * (b = bias[i]);\n          target.vy -= y * b;\n          source.vx += x * (b = 1 - b);\n          source.vy += y * b;\n        }\n      }\n    }\n\n    function initialize() {\n      if (!nodes) return;\n\n      var i,\n          n = nodes.length,\n          m = links.length,\n          nodeById = map$1(nodes, id),\n          link;\n\n      for (i = 0, count = new Array(n); i < n; ++i) {\n        count[i] = 0;\n      }\n\n      for (i = 0; i < m; ++i) {\n        link = links[i], link.index = i;\n        if (typeof link.source !== \"object\") link.source = nodeById.get(link.source);\n        if (typeof link.target !== \"object\") link.target = nodeById.get(link.target);\n        ++count[link.source.index], ++count[link.target.index];\n      }\n\n      for (i = 0, bias = new Array(m); i < m; ++i) {\n        link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n      }\n\n      strengths = new Array(m), initializeStrength();\n      distances = new Array(m), initializeDistance();\n    }\n\n    function initializeStrength() {\n      if (!nodes) return;\n\n      for (var i = 0, n = links.length; i < n; ++i) {\n        strengths[i] = +strength(links[i], i, links);\n      }\n    }\n\n    function initializeDistance() {\n      if (!nodes) return;\n\n      for (var i = 0, n = links.length; i < n; ++i) {\n        distances[i] = +distance(links[i], i, links);\n      }\n    }\n\n    force.initialize = function(_) {\n      nodes = _;\n      initialize();\n    };\n\n    force.links = function(_) {\n      return arguments.length ? (links = _, initialize(), force) : links;\n    };\n\n    force.id = function(_) {\n      return arguments.length ? (id = _, force) : id;\n    };\n\n    force.iterations = function(_) {\n      return arguments.length ? (iterations = +_, force) : iterations;\n    };\n\n    force.strength = function(_) {\n      return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n    };\n\n    force.distance = function(_) {\n      return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n    };\n\n    return force;\n  }\n\n  function x$2(d) {\n    return d.x;\n  }\n\n  function y$2(d) {\n    return d.y;\n  }\n\n  var initialRadius = 10;\n  var initialAngle = Math.PI * (3 - Math.sqrt(5));\n  function simulation(nodes) {\n    var simulation,\n        alpha = 1,\n        alphaMin = 0.001,\n        alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n        alphaTarget = 0,\n        velocityDecay = 0.6,\n        forces = map$1(),\n        stepper = timer(step),\n        event = dispatch(\"tick\", \"end\");\n\n    if (nodes == null) nodes = [];\n\n    function step() {\n      tick();\n      event.call(\"tick\", simulation);\n      if (alpha < alphaMin) {\n        stepper.stop();\n        event.call(\"end\", simulation);\n      }\n    }\n\n    function tick() {\n      var i, n = nodes.length, node;\n\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.each(function(force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    function initializeNodes() {\n      for (var i = 0, n = nodes.length, node; i < n; ++i) {\n        node = nodes[i], node.index = i;\n        if (isNaN(node.x) || isNaN(node.y)) {\n          var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n          node.x = radius * Math.cos(angle);\n          node.y = radius * Math.sin(angle);\n        }\n        if (isNaN(node.vx) || isNaN(node.vy)) {\n          node.vx = node.vy = 0;\n        }\n      }\n    }\n\n    function initializeForce(force) {\n      if (force.initialize) force.initialize(nodes);\n      return force;\n    }\n\n    initializeNodes();\n\n    return simulation = {\n      tick: tick,\n\n      restart: function() {\n        return stepper.restart(step), simulation;\n      },\n\n      stop: function() {\n        return stepper.stop(), simulation;\n      },\n\n      nodes: function(_) {\n        return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n      },\n\n      alpha: function(_) {\n        return arguments.length ? (alpha = +_, simulation) : alpha;\n      },\n\n      alphaMin: function(_) {\n        return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n      },\n\n      alphaDecay: function(_) {\n        return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n      },\n\n      alphaTarget: function(_) {\n        return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n      },\n\n      velocityDecay: function(_) {\n        return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n      },\n\n      force: function(name, _) {\n        return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n      },\n\n      find: function(x, y, radius) {\n        var i = 0,\n            n = nodes.length,\n            dx,\n            dy,\n            d2,\n            node,\n            closest;\n\n        if (radius == null) radius = Infinity;\n        else radius *= radius;\n\n        for (i = 0; i < n; ++i) {\n          node = nodes[i];\n          dx = x - node.x;\n          dy = y - node.y;\n          d2 = dx * dx + dy * dy;\n          if (d2 < radius) closest = node, radius = d2;\n        }\n\n        return closest;\n      },\n\n      on: function(name, _) {\n        return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n      }\n    };\n  }\n\n  function manyBody() {\n    var nodes,\n        node,\n        alpha,\n        strength = constant$6(-30),\n        strengths,\n        distanceMin2 = 1,\n        distanceMax2 = Infinity,\n        theta2 = 0.81;\n\n    function force(_) {\n      var i, n = nodes.length, tree = quadtree(nodes, x$2, y$2).visitAfter(accumulate);\n      for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n    }\n\n    function initialize() {\n      if (!nodes) return;\n      var i, n = nodes.length;\n      strengths = new Array(n);\n      for (i = 0; i < n; ++i) strengths[i] = +strength(nodes[i], i, nodes);\n    }\n\n    function accumulate(quad) {\n      var strength = 0, q, c, x, y, i;\n\n      // For internal nodes, accumulate forces from child quadrants.\n      if (quad.length) {\n        for (x = y = i = 0; i < 4; ++i) {\n          if ((q = quad[i]) && (c = q.value)) {\n            strength += c, x += c * q.x, y += c * q.y;\n          }\n        }\n        quad.x = x / strength;\n        quad.y = y / strength;\n      }\n\n      // For leaf nodes, accumulate forces from coincident quadrants.\n      else {\n        q = quad;\n        q.x = q.data.x;\n        q.y = q.data.y;\n        do strength += strengths[q.data.index];\n        while (q = q.next);\n      }\n\n      quad.value = strength;\n    }\n\n    function apply(quad, x1, _, x2) {\n      if (!quad.value) return true;\n\n      var x = quad.x - node.x,\n          y = quad.y - node.y,\n          w = x2 - x1,\n          l = x * x + y * y;\n\n      // Apply the Barnes-Hut approximation if possible.\n      // Limit forces for very close nodes; randomize direction if coincident.\n      if (w * w / theta2 < l) {\n        if (l < distanceMax2) {\n          if (x === 0) x = jiggle(), l += x * x;\n          if (y === 0) y = jiggle(), l += y * y;\n          if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n          node.vx += x * quad.value * alpha / l;\n          node.vy += y * quad.value * alpha / l;\n        }\n        return true;\n      }\n\n      // Otherwise, process points directly.\n      else if (quad.length || l >= distanceMax2) return;\n\n      // Limit forces for very close nodes; randomize direction if coincident.\n      if (quad.data !== node || quad.next) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n      }\n\n      do if (quad.data !== node) {\n        w = strengths[quad.data.index] * alpha / l;\n        node.vx += x * w;\n        node.vy += y * w;\n      } while (quad = quad.next);\n    }\n\n    force.initialize = function(_) {\n      nodes = _;\n      initialize();\n    };\n\n    force.strength = function(_) {\n      return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n    };\n\n    force.distanceMin = function(_) {\n      return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n    };\n\n    force.distanceMax = function(_) {\n      return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n    };\n\n    force.theta = function(_) {\n      return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n    };\n\n    return force;\n  }\n\n  function x$3(x) {\n    var strength = constant$6(0.1),\n        nodes,\n        strengths,\n        xz;\n\n    if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\n    function force(alpha) {\n      for (var i = 0, n = nodes.length, node; i < n; ++i) {\n        node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n      }\n    }\n\n    function initialize() {\n      if (!nodes) return;\n      var i, n = nodes.length;\n      strengths = new Array(n);\n      xz = new Array(n);\n      for (i = 0; i < n; ++i) {\n        strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n      }\n    }\n\n    force.initialize = function(_) {\n      nodes = _;\n      initialize();\n    };\n\n    force.strength = function(_) {\n      return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n    };\n\n    force.x = function(_) {\n      return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n    };\n\n    return force;\n  }\n\n  function y$3(y) {\n    var strength = constant$6(0.1),\n        nodes,\n        strengths,\n        yz;\n\n    if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\n    function force(alpha) {\n      for (var i = 0, n = nodes.length, node; i < n; ++i) {\n        node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n      }\n    }\n\n    function initialize() {\n      if (!nodes) return;\n      var i, n = nodes.length;\n      strengths = new Array(n);\n      yz = new Array(n);\n      for (i = 0; i < n; ++i) {\n        strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n      }\n    }\n\n    force.initialize = function(_) {\n      nodes = _;\n      initialize();\n    };\n\n    force.strength = function(_) {\n      return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n    };\n\n    force.y = function(_) {\n      return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n    };\n\n    return force;\n  }\n\n  function nopropagation() {\n    exports.event.stopImmediatePropagation();\n  }\n\n  function noevent() {\n    exports.event.preventDefault();\n    exports.event.stopImmediatePropagation();\n  }\n\n  function dragDisable(view) {\n    var root = view.document.documentElement,\n        selection = select(view).on(\"dragstart.drag\", noevent, true);\n    if (\"onselectstart\" in root) {\n      selection.on(\"selectstart.drag\", noevent, true);\n    } else {\n      root.__noselect = root.style.MozUserSelect;\n      root.style.MozUserSelect = \"none\";\n    }\n  }\n\n  function dragEnable(view, noclick) {\n    var root = view.document.documentElement,\n        selection = select(view).on(\"dragstart.drag\", null);\n    if (noclick) {\n      selection.on(\"click.drag\", noevent, true);\n      setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n    }\n    if (\"onselectstart\" in root) {\n      selection.on(\"selectstart.drag\", null);\n    } else {\n      root.style.MozUserSelect = root.__noselect;\n      delete root.__noselect;\n    }\n  }\n\n  function constant$7(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n    this.target = target;\n    this.type = type;\n    this.subject = subject;\n    this.identifier = id;\n    this.active = active;\n    this.x = x;\n    this.y = y;\n    this.dx = dx;\n    this.dy = dy;\n    this._ = dispatch;\n  }\n\n  DragEvent.prototype.on = function() {\n    var value = this._.on.apply(this._, arguments);\n    return value === this._ ? this : value;\n  };\n\n  // Ignore right-click, since that should open the context menu.\n  function defaultFilter() {\n    return !exports.event.button;\n  }\n\n  function defaultContainer() {\n    return this.parentNode;\n  }\n\n  function defaultSubject(d) {\n    return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n  }\n\n  function drag() {\n    var filter = defaultFilter,\n        container = defaultContainer,\n        subject = defaultSubject,\n        gestures = {},\n        listeners = dispatch(\"start\", \"drag\", \"end\"),\n        active = 0,\n        mousemoving,\n        touchending;\n\n    function drag(selection) {\n      selection\n          .on(\"mousedown.drag\", mousedowned)\n          .on(\"touchstart.drag\", touchstarted)\n          .on(\"touchmove.drag\", touchmoved)\n          .on(\"touchend.drag touchcancel.drag\", touchended)\n          .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n    }\n\n    function mousedowned() {\n      if (touchending || !filter.apply(this, arguments)) return;\n      var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n      if (!gesture) return;\n      select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n      dragDisable(exports.event.view);\n      nopropagation();\n      mousemoving = false;\n      gesture(\"start\");\n    }\n\n    function mousemoved() {\n      noevent();\n      mousemoving = true;\n      gestures.mouse(\"drag\");\n    }\n\n    function mouseupped() {\n      select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n      dragEnable(exports.event.view, mousemoving);\n      noevent();\n      gestures.mouse(\"end\");\n    }\n\n    function touchstarted() {\n      if (!filter.apply(this, arguments)) return;\n      var touches = exports.event.changedTouches,\n          c = container.apply(this, arguments),\n          n = touches.length, i, gesture;\n\n      for (i = 0; i < n; ++i) {\n        if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n          nopropagation();\n          gesture(\"start\");\n        }\n      }\n    }\n\n    function touchmoved() {\n      var touches = exports.event.changedTouches,\n          n = touches.length, i, gesture;\n\n      for (i = 0; i < n; ++i) {\n        if (gesture = gestures[touches[i].identifier]) {\n          noevent();\n          gesture(\"drag\");\n        }\n      }\n    }\n\n    function touchended() {\n      var touches = exports.event.changedTouches,\n          n = touches.length, i, gesture;\n\n      if (touchending) clearTimeout(touchending);\n      touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n      for (i = 0; i < n; ++i) {\n        if (gesture = gestures[touches[i].identifier]) {\n          nopropagation();\n          gesture(\"end\");\n        }\n      }\n    }\n\n    function beforestart(id, container, point, that, args) {\n      var p = point(container, id), s, dx, dy,\n          sublisteners = listeners.copy();\n\n      if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n        if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n        dx = s.x - p[0] || 0;\n        dy = s.y - p[1] || 0;\n        return true;\n      })) return;\n\n      return function gesture(type) {\n        var p0 = p, n;\n        switch (type) {\n          case \"start\": gestures[id] = gesture, n = active++; break;\n          case \"end\": delete gestures[id], --active; // nobreak\n          case \"drag\": p = point(container, id), n = active; break;\n        }\n        customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n      };\n    }\n\n    drag.filter = function(_) {\n      return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$7(!!_), drag) : filter;\n    };\n\n    drag.container = function(_) {\n      return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$7(_), drag) : container;\n    };\n\n    drag.subject = function(_) {\n      return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$7(_), drag) : subject;\n    };\n\n    drag.on = function() {\n      var value = listeners.on.apply(listeners, arguments);\n      return value === listeners ? drag : value;\n    };\n\n    return drag;\n  }\n\n  function constant$8(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function x$4(d) {\n    return d[0];\n  }\n\n  function y$4(d) {\n    return d[1];\n  }\n\n  function RedBlackTree() {\n    this._ = null; // root node\n  }\n\n  function RedBlackNode(node) {\n    node.U = // parent node\n    node.C = // color - true for red, false for black\n    node.L = // left node\n    node.R = // right node\n    node.P = // previous node\n    node.N = null; // next node\n  }\n\n  RedBlackTree.prototype = {\n    constructor: RedBlackTree,\n\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = RedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              RedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            RedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              RedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            RedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n\n      var parent = node.U,\n          sibling,\n          left = node.L,\n          right = node.R,\n          next,\n          red;\n\n      if (!left) next = right;\n      else if (!right) next = left;\n      else next = RedBlackFirst(right);\n\n      if (parent) {\n        if (parent.L === node) parent.L = next;\n        else parent.R = next;\n      } else {\n        this._ = next;\n      }\n\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) { node.C = false; return; }\n\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            RedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if ((sibling.L && sibling.L.C)\n              || (sibling.R && sibling.R.C)) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              RedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            RedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            RedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              RedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            RedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n\n      if (node) node.C = false;\n    }\n  };\n\n  function RedBlackRotateLeft(tree, node) {\n    var p = node,\n        q = node.R,\n        parent = p.U;\n\n    if (parent) {\n      if (parent.L === p) parent.L = q;\n      else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n\n  function RedBlackRotateRight(tree, node) {\n    var p = node,\n        q = node.L,\n        parent = p.U;\n\n    if (parent) {\n      if (parent.L === p) parent.L = q;\n      else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n\n  function RedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n\n  function createEdge(left, right, v0, v1) {\n    var edge = [null, null],\n        index = edges.push(edge) - 1;\n    edge.left = left;\n    edge.right = right;\n    if (v0) setEdgeEnd(edge, left, right, v0);\n    if (v1) setEdgeEnd(edge, right, left, v1);\n    cells[left.index].halfedges.push(index);\n    cells[right.index].halfedges.push(index);\n    return edge;\n  }\n\n  function createBorderEdge(left, v0, v1) {\n    var edge = [v0, v1];\n    edge.left = left;\n    return edge;\n  }\n\n  function setEdgeEnd(edge, left, right, vertex) {\n    if (!edge[0] && !edge[1]) {\n      edge[0] = vertex;\n      edge.left = left;\n      edge.right = right;\n    } else if (edge.left === right) {\n      edge[1] = vertex;\n    } else {\n      edge[0] = vertex;\n    }\n  }\n\n  // Liang–Barsky line clipping.\n  function clipEdge(edge, x0, y0, x1, y1) {\n    var a = edge[0],\n        b = edge[1],\n        ax = a[0],\n        ay = a[1],\n        bx = b[0],\n        by = b[1],\n        t0 = 0,\n        t1 = 1,\n        dx = bx - ax,\n        dy = by - ay,\n        r;\n\n    r = x0 - ax;\n    if (!dx && r > 0) return;\n    r /= dx;\n    if (dx < 0) {\n      if (r < t0) return;\n      if (r < t1) t1 = r;\n    } else if (dx > 0) {\n      if (r > t1) return;\n      if (r > t0) t0 = r;\n    }\n\n    r = x1 - ax;\n    if (!dx && r < 0) return;\n    r /= dx;\n    if (dx < 0) {\n      if (r > t1) return;\n      if (r > t0) t0 = r;\n    } else if (dx > 0) {\n      if (r < t0) return;\n      if (r < t1) t1 = r;\n    }\n\n    r = y0 - ay;\n    if (!dy && r > 0) return;\n    r /= dy;\n    if (dy < 0) {\n      if (r < t0) return;\n      if (r < t1) t1 = r;\n    } else if (dy > 0) {\n      if (r > t1) return;\n      if (r > t0) t0 = r;\n    }\n\n    r = y1 - ay;\n    if (!dy && r < 0) return;\n    r /= dy;\n    if (dy < 0) {\n      if (r > t1) return;\n      if (r > t0) t0 = r;\n    } else if (dy > 0) {\n      if (r < t0) return;\n      if (r < t1) t1 = r;\n    }\n\n    if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n    if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n    if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n    return true;\n  }\n\n  function connectEdge(edge, x0, y0, x1, y1) {\n    var v1 = edge[1];\n    if (v1) return true;\n\n    var v0 = edge[0],\n        left = edge.left,\n        right = edge.right,\n        lx = left[0],\n        ly = left[1],\n        rx = right[0],\n        ry = right[1],\n        fx = (lx + rx) / 2,\n        fy = (ly + ry) / 2,\n        fm,\n        fb;\n\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!v0) v0 = [fx, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [fx, y1];\n      } else {\n        if (!v0) v0 = [fx, y1];\n        else if (v0[1] < y0) return;\n        v1 = [fx, y0];\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!v0) v0 = [(y0 - fb) / fm, y0];\n          else if (v0[1] >= y1) return;\n          v1 = [(y1 - fb) / fm, y1];\n        } else {\n          if (!v0) v0 = [(y1 - fb) / fm, y1];\n          else if (v0[1] < y0) return;\n          v1 = [(y0 - fb) / fm, y0];\n        }\n      } else {\n        if (ly < ry) {\n          if (!v0) v0 = [x0, fm * x0 + fb];\n          else if (v0[0] >= x1) return;\n          v1 = [x1, fm * x1 + fb];\n        } else {\n          if (!v0) v0 = [x1, fm * x1 + fb];\n          else if (v0[0] < x0) return;\n          v1 = [x0, fm * x0 + fb];\n        }\n      }\n    }\n\n    edge[0] = v0;\n    edge[1] = v1;\n    return true;\n  }\n\n  function clipEdges(x0, y0, x1, y1) {\n    var i = edges.length,\n        edge;\n\n    while (i--) {\n      if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n          || !clipEdge(edge, x0, y0, x1, y1)\n          || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$3\n              || Math.abs(edge[0][1] - edge[1][1]) > epsilon$3)) {\n        delete edges[i];\n      }\n    }\n  }\n\n  function createCell(site) {\n    return cells[site.index] = {\n      site: site,\n      halfedges: []\n    };\n  }\n\n  function cellHalfedgeAngle(cell, edge) {\n    var site = cell.site,\n        va = edge.left,\n        vb = edge.right;\n    if (site === vb) vb = va, va = site;\n    if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n    if (site === va) va = edge[1], vb = edge[0];\n    else va = edge[0], vb = edge[1];\n    return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n  }\n\n  function cellHalfedgeStart(cell, edge) {\n    return edge[+(edge.left !== cell.site)];\n  }\n\n  function cellHalfedgeEnd(cell, edge) {\n    return edge[+(edge.left === cell.site)];\n  }\n\n  function sortCellHalfedges() {\n    for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n      if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n        var index = new Array(m),\n            array = new Array(m);\n        for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n        index.sort(function(i, j) { return array[j] - array[i]; });\n        for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n        for (j = 0; j < m; ++j) halfedges[j] = array[j];\n      }\n    }\n  }\n\n  function clipCells(x0, y0, x1, y1) {\n    var nCells = cells.length,\n        iCell,\n        cell,\n        site,\n        iHalfedge,\n        halfedges,\n        nHalfedges,\n        start,\n        startX,\n        startY,\n        end,\n        endX,\n        endY,\n        cover = true;\n\n    for (iCell = 0; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        halfedges = cell.halfedges;\n        iHalfedge = halfedges.length;\n\n        // Remove any dangling clipped edges.\n        while (iHalfedge--) {\n          if (!edges[halfedges[iHalfedge]]) {\n            halfedges.splice(iHalfedge, 1);\n          }\n        }\n\n        // Insert any border edges as necessary.\n        iHalfedge = 0, nHalfedges = halfedges.length;\n        while (iHalfedge < nHalfedges) {\n          end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n          start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n          if (Math.abs(endX - startX) > epsilon$3 || Math.abs(endY - startY) > epsilon$3) {\n            halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n                Math.abs(endX - x0) < epsilon$3 && y1 - endY > epsilon$3 ? [x0, Math.abs(startX - x0) < epsilon$3 ? startY : y1]\n                : Math.abs(endY - y1) < epsilon$3 && x1 - endX > epsilon$3 ? [Math.abs(startY - y1) < epsilon$3 ? startX : x1, y1]\n                : Math.abs(endX - x1) < epsilon$3 && endY - y0 > epsilon$3 ? [x1, Math.abs(startX - x1) < epsilon$3 ? startY : y0]\n                : Math.abs(endY - y0) < epsilon$3 && endX - x0 > epsilon$3 ? [Math.abs(startY - y0) < epsilon$3 ? startX : x0, y0]\n                : null)) - 1);\n            ++nHalfedges;\n          }\n        }\n\n        if (nHalfedges) cover = false;\n      }\n    }\n\n    // If there weren’t any edges, have the closest site cover the extent.\n    // It doesn’t matter which corner of the extent we measure!\n    if (cover) {\n      var dx, dy, d2, dc = Infinity;\n\n      for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n        if (cell = cells[iCell]) {\n          site = cell.site;\n          dx = site[0] - x0;\n          dy = site[1] - y0;\n          d2 = dx * dx + dy * dy;\n          if (d2 < dc) dc = d2, cover = cell;\n        }\n      }\n\n      if (cover) {\n        var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n        cover.halfedges.push(\n          edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n          edges.push(createBorderEdge(site, v01, v11)) - 1,\n          edges.push(createBorderEdge(site, v11, v10)) - 1,\n          edges.push(createBorderEdge(site, v10, v00)) - 1\n        );\n      }\n    }\n\n    // Lastly delete any cells with no edges; these were entirely clipped.\n    for (iCell = 0; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        if (!cell.halfedges.length) {\n          delete cells[iCell];\n        }\n      }\n    }\n  }\n\n  var circlePool = [];\n\n  var firstCircle;\n\n  function Circle() {\n    RedBlackNode(this);\n    this.x =\n    this.y =\n    this.arc =\n    this.site =\n    this.cy = null;\n  }\n\n  function attachCircle(arc) {\n    var lArc = arc.P,\n        rArc = arc.N;\n\n    if (!lArc || !rArc) return;\n\n    var lSite = lArc.site,\n        cSite = arc.site,\n        rSite = rArc.site;\n\n    if (lSite === rSite) return;\n\n    var bx = cSite[0],\n        by = cSite[1],\n        ax = lSite[0] - bx,\n        ay = lSite[1] - by,\n        cx = rSite[0] - bx,\n        cy = rSite[1] - by;\n\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -epsilon2$1) return;\n\n    var ha = ax * ax + ay * ay,\n        hc = cx * cx + cy * cy,\n        x = (cy * ha - ay * hc) / d,\n        y = (ax * hc - cx * ha) / d;\n\n    var circle = circlePool.pop() || new Circle;\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n    arc.circle = circle;\n\n    var before = null,\n        node = circles._;\n\n    while (node) {\n      if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n        if (node.L) node = node.L;\n        else { before = node.P; break; }\n      } else {\n        if (node.R) node = node.R;\n        else { before = node; break; }\n      }\n    }\n\n    circles.insert(before, circle);\n    if (!before) firstCircle = circle;\n  }\n\n  function detachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) firstCircle = circle.N;\n      circles.remove(circle);\n      circlePool.push(circle);\n      RedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n\n  var beachPool = [];\n\n  function Beach() {\n    RedBlackNode(this);\n    this.edge =\n    this.site =\n    this.circle = null;\n  }\n\n  function createBeach(site) {\n    var beach = beachPool.pop() || new Beach;\n    beach.site = site;\n    return beach;\n  }\n\n  function detachBeach(beach) {\n    detachCircle(beach);\n    beaches.remove(beach);\n    beachPool.push(beach);\n    RedBlackNode(beach);\n  }\n\n  function removeBeach(beach) {\n    var circle = beach.circle,\n        x = circle.x,\n        y = circle.cy,\n        vertex = [x, y],\n        previous = beach.P,\n        next = beach.N,\n        disappearing = [beach];\n\n    detachBeach(beach);\n\n    var lArc = previous;\n    while (lArc.circle\n        && Math.abs(x - lArc.circle.x) < epsilon$3\n        && Math.abs(y - lArc.circle.cy) < epsilon$3) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      detachBeach(lArc);\n      lArc = previous;\n    }\n\n    disappearing.unshift(lArc);\n    detachCircle(lArc);\n\n    var rArc = next;\n    while (rArc.circle\n        && Math.abs(x - rArc.circle.x) < epsilon$3\n        && Math.abs(y - rArc.circle.cy) < epsilon$3) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      detachBeach(rArc);\n      rArc = next;\n    }\n\n    disappearing.push(rArc);\n    detachCircle(rArc);\n\n    var nArcs = disappearing.length,\n        iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n    attachCircle(lArc);\n    attachCircle(rArc);\n  }\n\n  function addBeach(site) {\n    var x = site[0],\n        directrix = site[1],\n        lArc,\n        rArc,\n        dxl,\n        dxr,\n        node = beaches._;\n\n    while (node) {\n      dxl = leftBreakPoint(node, directrix) - x;\n      if (dxl > epsilon$3) node = node.L; else {\n        dxr = x - rightBreakPoint(node, directrix);\n        if (dxr > epsilon$3) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -epsilon$3) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -epsilon$3) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n\n    createCell(site);\n    var newArc = createBeach(site);\n    beaches.insert(lArc, newArc);\n\n    if (!lArc && !rArc) return;\n\n    if (lArc === rArc) {\n      detachCircle(lArc);\n      rArc = createBeach(lArc.site);\n      beaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n      attachCircle(lArc);\n      attachCircle(rArc);\n      return;\n    }\n\n    if (!rArc) { // && lArc\n      newArc.edge = createEdge(lArc.site, newArc.site);\n      return;\n    }\n\n    // else lArc !== rArc\n    detachCircle(lArc);\n    detachCircle(rArc);\n\n    var lSite = lArc.site,\n        ax = lSite[0],\n        ay = lSite[1],\n        bx = site[0] - ax,\n        by = site[1] - ay,\n        rSite = rArc.site,\n        cx = rSite[0] - ax,\n        cy = rSite[1] - ay,\n        d = 2 * (bx * cy - by * cx),\n        hb = bx * bx + by * by,\n        hc = cx * cx + cy * cy,\n        vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n    setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = createEdge(lSite, site, null, vertex);\n    rArc.edge = createEdge(site, rSite, null, vertex);\n    attachCircle(lArc);\n    attachCircle(rArc);\n  }\n\n  function leftBreakPoint(arc, directrix) {\n    var site = arc.site,\n        rfocx = site[0],\n        rfocy = site[1],\n        pby2 = rfocy - directrix;\n\n    if (!pby2) return rfocx;\n\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n\n    site = lArc.site;\n    var lfocx = site[0],\n        lfocy = site[1],\n        plby2 = lfocy - directrix;\n\n    if (!plby2) return lfocx;\n\n    var hl = lfocx - rfocx,\n        aby2 = 1 / pby2 - 1 / plby2,\n        b = hl / plby2;\n\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n    return (rfocx + lfocx) / 2;\n  }\n\n  function rightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return leftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site[1] === directrix ? site[0] : Infinity;\n  }\n\n  var epsilon$3 = 1e-6;\n  var epsilon2$1 = 1e-12;\n  var beaches;\n  var cells;\n  var circles;\n  var edges;\n\n  function triangleArea(a, b, c) {\n    return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n  }\n\n  function lexicographic(a, b) {\n    return b[1] - a[1]\n        || b[0] - a[0];\n  }\n\n  function Diagram(sites, extent) {\n    var site = sites.sort(lexicographic).pop(),\n        x,\n        y,\n        circle;\n\n    edges = [];\n    cells = new Array(sites.length);\n    beaches = new RedBlackTree;\n    circles = new RedBlackTree;\n\n    while (true) {\n      circle = firstCircle;\n      if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n        if (site[0] !== x || site[1] !== y) {\n          addBeach(site);\n          x = site[0], y = site[1];\n        }\n        site = sites.pop();\n      } else if (circle) {\n        removeBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n\n    sortCellHalfedges();\n\n    if (extent) {\n      var x0 = +extent[0][0],\n          y0 = +extent[0][1],\n          x1 = +extent[1][0],\n          y1 = +extent[1][1];\n      clipEdges(x0, y0, x1, y1);\n      clipCells(x0, y0, x1, y1);\n    }\n\n    this.edges = edges;\n    this.cells = cells;\n\n    beaches =\n    circles =\n    edges =\n    cells = null;\n  }\n\n  Diagram.prototype = {\n    constructor: Diagram,\n\n    polygons: function() {\n      var edges = this.edges;\n\n      return this.cells.map(function(cell) {\n        var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n        polygon.data = cell.site.data;\n        return polygon;\n      });\n    },\n\n    triangles: function() {\n      var triangles = [],\n          edges = this.edges;\n\n      this.cells.forEach(function(cell, i) {\n        var site = cell.site,\n            halfedges = cell.halfedges,\n            j = -1,\n            m = halfedges.length,\n            s0,\n            e1 = edges[halfedges[m - 1]],\n            s1 = e1.left === site ? e1.right : e1.left;\n\n        while (++j < m) {\n          s0 = s1;\n          e1 = edges[halfedges[j]];\n          s1 = e1.left === site ? e1.right : e1.left;\n          if (i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n            triangles.push([site.data, s0.data, s1.data]);\n          }\n        }\n      });\n\n      return triangles;\n    },\n\n    links: function() {\n      return this.edges.filter(function(edge) {\n        return edge.right;\n      }).map(function(edge) {\n        return {\n          source: edge.left.data,\n          target: edge.right.data\n        };\n      });\n    }\n  }\n\n  function voronoi() {\n    var x = x$4,\n        y = y$4,\n        extent = null;\n\n    function voronoi(data) {\n      return new Diagram(data.map(function(d, i) {\n        var s = [Math.round(x(d, i, data) / epsilon$3) * epsilon$3, Math.round(y(d, i, data) / epsilon$3) * epsilon$3];\n        s.index = i;\n        s.data = d;\n        return s;\n      }), extent);\n    }\n\n    voronoi.polygons = function(data) {\n      return voronoi(data).polygons();\n    };\n\n    voronoi.links = function(data) {\n      return voronoi(data).links();\n    };\n\n    voronoi.triangles = function(data) {\n      return voronoi(data).triangles();\n    };\n\n    voronoi.x = function(_) {\n      return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$8(+_), voronoi) : x;\n    };\n\n    voronoi.y = function(_) {\n      return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$8(+_), voronoi) : y;\n    };\n\n    voronoi.extent = function(_) {\n      return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n    };\n\n    voronoi.size = function(_) {\n      return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n    };\n\n    return voronoi;\n  }\n\n  function constant$9(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function ZoomEvent(target, type, transform) {\n    this.target = target;\n    this.type = type;\n    this.transform = transform;\n  }\n\n  function Transform(k, x, y) {\n    this.k = k;\n    this.x = x;\n    this.y = y;\n  }\n\n  Transform.prototype = {\n    constructor: Transform,\n    scale: function(k) {\n      return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n    },\n    translate: function(x, y) {\n      return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n    },\n    apply: function(point) {\n      return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n    },\n    applyX: function(x) {\n      return x * this.k + this.x;\n    },\n    applyY: function(y) {\n      return y * this.k + this.y;\n    },\n    invert: function(location) {\n      return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n    },\n    invertX: function(x) {\n      return (x - this.x) / this.k;\n    },\n    invertY: function(y) {\n      return (y - this.y) / this.k;\n    },\n    rescaleX: function(x) {\n      return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n    },\n    rescaleY: function(y) {\n      return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n    },\n    toString: function() {\n      return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n    }\n  };\n\n  var identity$6 = new Transform(1, 0, 0);\n\n  transform.prototype = Transform.prototype;\n\n  function transform(node) {\n    return node.__zoom || identity$6;\n  }\n\n  function nopropagation$1() {\n    exports.event.stopImmediatePropagation();\n  }\n\n  function noevent$1() {\n    exports.event.preventDefault();\n    exports.event.stopImmediatePropagation();\n  }\n\n  // Ignore right-click, since that should open the context menu.\n  function defaultFilter$1() {\n    return !exports.event.button;\n  }\n\n  function defaultExtent() {\n    var e = this, w, h;\n    if (e instanceof SVGElement) {\n      e = e.ownerSVGElement || e;\n      w = e.width.baseVal.value;\n      h = e.height.baseVal.value;\n    } else {\n      w = e.clientWidth;\n      h = e.clientHeight;\n    }\n    return [[0, 0], [w, h]];\n  }\n\n  function defaultTransform() {\n    return this.__zoom || identity$6;\n  }\n\n  function zoom() {\n    var filter = defaultFilter$1,\n        extent = defaultExtent,\n        k0 = 0,\n        k1 = Infinity,\n        x0 = -k1,\n        x1 = k1,\n        y0 = x0,\n        y1 = x1,\n        duration = 250,\n        gestures = [],\n        listeners = dispatch(\"start\", \"zoom\", \"end\"),\n        touchstarting,\n        touchending,\n        touchDelay = 500,\n        wheelDelay = 150;\n\n    function zoom(selection) {\n      selection\n          .on(\"wheel.zoom\", wheeled)\n          .on(\"mousedown.zoom\", mousedowned)\n          .on(\"dblclick.zoom\", dblclicked)\n          .on(\"touchstart.zoom\", touchstarted)\n          .on(\"touchmove.zoom\", touchmoved)\n          .on(\"touchend.zoom touchcancel.zoom\", touchended)\n          .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n          .property(\"__zoom\", defaultTransform);\n    }\n\n    zoom.transform = function(collection, transform) {\n      var selection = collection.selection ? collection.selection() : collection;\n      selection.property(\"__zoom\", defaultTransform);\n      if (collection !== selection) {\n        schedule(collection, transform);\n      } else {\n        selection.interrupt().each(function() {\n          gesture(this, arguments)\n              .start()\n              .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n              .end();\n        });\n      }\n    };\n\n    zoom.scaleBy = function(selection, k) {\n      zoom.scaleTo(selection, function() {\n        var k0 = this.__zoom.k,\n            k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n        return k0 * k1;\n      });\n    };\n\n    zoom.scaleTo = function(selection, k) {\n      zoom.transform(selection, function() {\n        var e = extent.apply(this, arguments),\n            t0 = this.__zoom,\n            p0 = centroid(e),\n            p1 = t0.invert(p0),\n            k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n        return constrain(translate(scale(t0, k1), p0, p1), e);\n      });\n    };\n\n    zoom.translateBy = function(selection, x, y) {\n      zoom.transform(selection, function() {\n        return constrain(this.__zoom.translate(\n          typeof x === \"function\" ? x.apply(this, arguments) : x,\n          typeof y === \"function\" ? y.apply(this, arguments) : y\n        ), extent.apply(this, arguments));\n      });\n    };\n\n    function scale(transform, k) {\n      k = Math.max(k0, Math.min(k1, k));\n      return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n    }\n\n    function translate(transform, p0, p1) {\n      var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n      return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n    }\n\n    function constrain(transform, extent) {\n      var dx = Math.min(0, transform.invertX(extent[0][0]) - x0) || Math.max(0, transform.invertX(extent[1][0]) - x1),\n          dy = Math.min(0, transform.invertY(extent[0][1]) - y0) || Math.max(0, transform.invertY(extent[1][1]) - y1);\n      return dx || dy ? transform.translate(dx, dy) : transform;\n    }\n\n    function centroid(extent) {\n      return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n    }\n\n    function schedule(transition, transform, center) {\n      transition\n          .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n          .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n          .tween(\"zoom\", function() {\n            var that = this,\n                args = arguments,\n                g = gesture(that, args),\n                e = extent.apply(that, args),\n                p = center || centroid(e),\n                w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n                a = that.__zoom,\n                b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n                i = interpolateZoom(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n            return function(t) {\n              if (t === 1) t = b; // Avoid rounding error on end.\n              else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n              g.zoom(null, t);\n            };\n          });\n    }\n\n    function gesture(that, args) {\n      for (var i = 0, n = gestures.length, g; i < n; ++i) {\n        if ((g = gestures[i]).that === that) {\n          return g;\n        }\n      }\n      return new Gesture(that, args);\n    }\n\n    function Gesture(that, args) {\n      this.that = that;\n      this.args = args;\n      this.index = -1;\n      this.active = 0;\n      this.extent = extent.apply(that, args);\n    }\n\n    Gesture.prototype = {\n      start: function() {\n        if (++this.active === 1) {\n          this.index = gestures.push(this) - 1;\n          this.emit(\"start\");\n        }\n        return this;\n      },\n      zoom: function(key, transform) {\n        if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n        if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n        if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n        this.that.__zoom = transform;\n        this.emit(\"zoom\");\n        return this;\n      },\n      end: function() {\n        if (--this.active === 0) {\n          gestures.splice(this.index, 1);\n          this.index = -1;\n          this.emit(\"end\");\n        }\n        return this;\n      },\n      emit: function(type) {\n        customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n      }\n    };\n\n    function wheeled() {\n      if (!filter.apply(this, arguments)) return;\n      var g = gesture(this, arguments),\n          t = this.__zoom,\n          k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n          p = mouse(this);\n\n      // If the mouse is in the same location as before, reuse it.\n      // If there were recent wheel events, reset the wheel idle timeout.\n      if (g.wheel) {\n        if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n          g.mouse[1] = t.invert(g.mouse[0] = p);\n        }\n        clearTimeout(g.wheel);\n      }\n\n      // If this wheel event won’t trigger a transform change, ignore it.\n      else if (t.k === k) return;\n\n      // Otherwise, capture the mouse point and location at the start.\n      else {\n        g.mouse = [p, t.invert(p)];\n        interrupt(this);\n        g.start();\n      }\n\n      noevent$1();\n      g.wheel = setTimeout(wheelidled, wheelDelay);\n      g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n      function wheelidled() {\n        g.wheel = null;\n        g.end();\n      }\n    }\n\n    function mousedowned() {\n      if (touchending || !filter.apply(this, arguments)) return;\n      var g = gesture(this, arguments),\n          v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n          p = mouse(this);\n\n      dragDisable(exports.event.view);\n      nopropagation$1();\n      g.mouse = [p, this.__zoom.invert(p)];\n      interrupt(this);\n      g.start();\n\n      function mousemoved() {\n        noevent$1();\n        g.moved = true;\n        g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n      }\n\n      function mouseupped() {\n        v.on(\"mousemove.zoom mouseup.zoom\", null);\n        dragEnable(exports.event.view, g.moved);\n        noevent$1();\n        g.end();\n      }\n    }\n\n    function dblclicked() {\n      if (!filter.apply(this, arguments)) return;\n      var t0 = this.__zoom,\n          p0 = mouse(this),\n          p1 = t0.invert(p0),\n          k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n          t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n      noevent$1();\n      if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n      else select(this).call(zoom.transform, t1);\n    }\n\n    function touchstarted() {\n      if (!filter.apply(this, arguments)) return;\n      var g = gesture(this, arguments),\n          touches = exports.event.changedTouches,\n          n = touches.length, i, t, p;\n\n      nopropagation$1();\n      for (i = 0; i < n; ++i) {\n        t = touches[i], p = touch(this, touches, t.identifier);\n        p = [p, this.__zoom.invert(p), t.identifier];\n        if (!g.touch0) g.touch0 = p;\n        else if (!g.touch1) g.touch1 = p;\n      }\n      if (touchstarting) {\n        touchstarting = clearTimeout(touchstarting);\n        if (!g.touch1) return g.end(), dblclicked.apply(this, arguments);\n      }\n      if (exports.event.touches.length === n) {\n        touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n        interrupt(this);\n        g.start();\n      }\n    }\n\n    function touchmoved() {\n      var g = gesture(this, arguments),\n          touches = exports.event.changedTouches,\n          n = touches.length, i, t, p, l;\n\n      noevent$1();\n      if (touchstarting) touchstarting = clearTimeout(touchstarting);\n      for (i = 0; i < n; ++i) {\n        t = touches[i], p = touch(this, touches, t.identifier);\n        if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n        else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n      }\n      t = g.that.__zoom;\n      if (g.touch1) {\n        var p0 = g.touch0[0], l0 = g.touch0[1],\n            p1 = g.touch1[0], l1 = g.touch1[1],\n            dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n            dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n        t = scale(t, Math.sqrt(dp / dl));\n        p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n        l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n      }\n      else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n      else return;\n      g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n    }\n\n    function touchended() {\n      var g = gesture(this, arguments),\n          touches = exports.event.changedTouches,\n          n = touches.length, i, t;\n\n      nopropagation$1();\n      if (touchending) clearTimeout(touchending);\n      touchending = setTimeout(function() { touchending = null; }, touchDelay);\n      for (i = 0; i < n; ++i) {\n        t = touches[i];\n        if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n        else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n      }\n      if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n      if (!g.touch0) g.end();\n    }\n\n    zoom.filter = function(_) {\n      return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$9(!!_), zoom) : filter;\n    };\n\n    zoom.extent = function(_) {\n      return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$9([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n    };\n\n    zoom.scaleExtent = function(_) {\n      return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n    };\n\n    zoom.translateExtent = function(_) {\n      return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n    };\n\n    zoom.duration = function(_) {\n      return arguments.length ? (duration = +_, zoom) : duration;\n    };\n\n    zoom.on = function() {\n      var value = listeners.on.apply(listeners, arguments);\n      return value === listeners ? zoom : value;\n    };\n\n    return zoom;\n  }\n\n  function constant$10(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function BrushEvent(target, type, selection) {\n    this.target = target;\n    this.type = type;\n    this.selection = selection;\n  }\n\n  function nopropagation$2() {\n    exports.event.stopImmediatePropagation();\n  }\n\n  function noevent$2() {\n    exports.event.preventDefault();\n    exports.event.stopImmediatePropagation();\n  }\n\n  var MODE_DRAG = {name: \"drag\"};\n  var MODE_SPACE = {name: \"space\"};\n  var MODE_HANDLE = {name: \"handle\"};\n  var MODE_CENTER = {name: \"center\"};\n  var X = {\n    name: \"x\",\n    handles: [\"e\", \"w\"].map(type$1),\n    input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n    output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n  };\n\n  var Y = {\n    name: \"y\",\n    handles: [\"n\", \"s\"].map(type$1),\n    input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n    output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n  };\n\n  var XY = {\n    name: \"xy\",\n    handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type$1),\n    input: function(xy) { return xy; },\n    output: function(xy) { return xy; }\n  };\n\n  var cursors = {\n    overlay: \"crosshair\",\n    selection: \"move\",\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n\n  var flipX = {\n    e: \"w\",\n    w: \"e\",\n    nw: \"ne\",\n    ne: \"nw\",\n    se: \"sw\",\n    sw: \"se\"\n  };\n\n  var flipY = {\n    n: \"s\",\n    s: \"n\",\n    nw: \"sw\",\n    ne: \"se\",\n    se: \"ne\",\n    sw: \"nw\"\n  };\n\n  var signsX = {\n    overlay: +1,\n    selection: +1,\n    n: null,\n    e: +1,\n    s: null,\n    w: -1,\n    nw: -1,\n    ne: +1,\n    se: +1,\n    sw: -1\n  };\n\n  var signsY = {\n    overlay: +1,\n    selection: +1,\n    n: -1,\n    e: null,\n    s: +1,\n    w: null,\n    nw: -1,\n    ne: -1,\n    se: +1,\n    sw: +1\n  };\n\n  function type$1(t) {\n    return {type: t};\n  }\n\n  // Ignore right-click, since that should open the context menu.\n  function defaultFilter$2() {\n    return !exports.event.button;\n  }\n\n  function defaultExtent$1() {\n    var svg = this.ownerSVGElement || this;\n    return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n  }\n\n  // Like d3.local, but with the name “__brush” rather than auto-generated.\n  function local$1(node) {\n    while (!node.__brush) if (!(node = node.parentNode)) return;\n    return node.__brush;\n  }\n\n  function empty$1(extent) {\n    return extent[0][0] === extent[1][0]\n        || extent[0][1] === extent[1][1];\n  }\n\n  function brushSelection(node) {\n    var state = node.__brush;\n    return state ? state.dim.output(state.selection) : null;\n  }\n\n  function brushX() {\n    return brush$1(X);\n  }\n\n  function brushY() {\n    return brush$1(Y);\n  }\n\n  function brush() {\n    return brush$1(XY);\n  }\n\n  function brush$1(dim) {\n    var extent = defaultExtent$1,\n        filter = defaultFilter$2,\n        listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n        handleSize = 6,\n        touchending;\n\n    function brush(group) {\n      var overlay = group\n          .property(\"__brush\", initialize)\n        .selectAll(\".overlay\")\n        .data([type$1(\"overlay\")]);\n\n      overlay.enter().append(\"rect\")\n          .attr(\"class\", \"overlay\")\n          .attr(\"pointer-events\", \"all\")\n          .attr(\"cursor\", cursors.overlay)\n        .merge(overlay)\n          .each(function() {\n            var extent = local$1(this).extent;\n            select(this)\n                .attr(\"x\", extent[0][0])\n                .attr(\"y\", extent[0][1])\n                .attr(\"width\", extent[1][0] - extent[0][0])\n                .attr(\"height\", extent[1][1] - extent[0][1]);\n          });\n\n      group.selectAll(\".selection\")\n        .data([type$1(\"selection\")])\n        .enter().append(\"rect\")\n          .attr(\"class\", \"selection\")\n          .attr(\"cursor\", cursors.selection)\n          .attr(\"fill\", \"#777\")\n          .attr(\"fill-opacity\", 0.3)\n          .attr(\"stroke\", \"#fff\")\n          .attr(\"shape-rendering\", \"crispEdges\");\n\n      var handle = group.selectAll(\".handle\")\n        .data(dim.handles, function(d) { return d.type; });\n\n      handle.exit().remove();\n\n      handle.enter().append(\"rect\")\n          .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n          .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n      group\n          .each(redraw)\n          .attr(\"fill\", \"none\")\n          .attr(\"pointer-events\", \"all\")\n          .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n          .on(\"mousedown.brush touchstart.brush\", started);\n    }\n\n    brush.move = function(group, selection) {\n      if (group.selection) {\n        group\n            .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n            .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n            .tween(\"brush\", function() {\n              var that = this,\n                  state = that.__brush,\n                  emit = emitter(that, arguments),\n                  selection0 = state.selection,\n                  selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                  i = interpolate(selection0, selection1);\n\n              function tween(t) {\n                state.selection = t === 1 && empty$1(selection1) ? null : i(t);\n                redraw.call(that);\n                emit.brush();\n              }\n\n              return selection0 && selection1 ? tween : tween(1);\n            });\n      } else {\n        group\n            .each(function() {\n              var that = this,\n                  args = arguments,\n                  state = that.__brush,\n                  selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                  emit = emitter(that, args).beforestart();\n\n              interrupt(that);\n              state.selection = selection1 == null || empty$1(selection1) ? null : selection1;\n              redraw.call(that);\n              emit.start().brush().end();\n            });\n      }\n    };\n\n    function redraw() {\n      var group = select(this),\n          selection = local$1(this).selection;\n\n      if (selection) {\n        group.selectAll(\".selection\")\n            .style(\"display\", null)\n            .attr(\"x\", selection[0][0])\n            .attr(\"y\", selection[0][1])\n            .attr(\"width\", selection[1][0] - selection[0][0])\n            .attr(\"height\", selection[1][1] - selection[0][1]);\n\n        group.selectAll(\".handle\")\n            .style(\"display\", null)\n            .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n            .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n            .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n            .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n      }\n\n      else {\n        group.selectAll(\".selection,.handle\")\n            .style(\"display\", \"none\")\n            .attr(\"x\", null)\n            .attr(\"y\", null)\n            .attr(\"width\", null)\n            .attr(\"height\", null);\n      }\n    }\n\n    function emitter(that, args) {\n      return that.__brush.emitter || new Emitter(that, args);\n    }\n\n    function Emitter(that, args) {\n      this.that = that;\n      this.args = args;\n      this.state = that.__brush;\n      this.active = 0;\n    }\n\n    Emitter.prototype = {\n      beforestart: function() {\n        if (++this.active === 1) this.state.emitter = this, this.starting = true;\n        return this;\n      },\n      start: function() {\n        if (this.starting) this.starting = false, this.emit(\"start\");\n        return this;\n      },\n      brush: function() {\n        this.emit(\"brush\");\n        return this;\n      },\n      end: function() {\n        if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n        return this;\n      },\n      emit: function(type) {\n        customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n      }\n    };\n\n    function started() {\n      if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$2(); }\n      else if (touchending) return;\n      if (!filter.apply(this, arguments)) return;\n\n      var that = this,\n          type = exports.event.target.__data__.type,\n          mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n          signX = dim === Y ? null : signsX[type],\n          signY = dim === X ? null : signsY[type],\n          state = local$1(that),\n          extent = state.extent,\n          selection = state.selection,\n          W = extent[0][0], w0, w1,\n          N = extent[0][1], n0, n1,\n          E = extent[1][0], e0, e1,\n          S = extent[1][1], s0, s1,\n          dx,\n          dy,\n          moving,\n          shifting = signX && signY && exports.event.shiftKey,\n          lockX,\n          lockY,\n          point0 = mouse(that),\n          point = point0,\n          emit = emitter(that, arguments).beforestart();\n\n      if (type === \"overlay\") {\n        state.selection = selection = [\n          [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n          [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n        ];\n      } else {\n        w0 = selection[0][0];\n        n0 = selection[0][1];\n        e0 = selection[1][0];\n        s0 = selection[1][1];\n      }\n\n      w1 = w0;\n      n1 = n0;\n      e1 = e0;\n      s1 = s0;\n\n      var group = select(that)\n          .attr(\"pointer-events\", \"none\");\n\n      var overlay = group.selectAll(\".overlay\")\n          .attr(\"cursor\", cursors[type]);\n\n      if (exports.event.touches) {\n        group\n            .on(\"touchmove.brush\", moved, true)\n            .on(\"touchend.brush touchcancel.brush\", ended, true);\n      } else {\n        var view = select(exports.event.view)\n            .on(\"keydown.brush\", keydowned, true)\n            .on(\"keyup.brush\", keyupped, true)\n            .on(\"mousemove.brush\", moved, true)\n            .on(\"mouseup.brush\", ended, true);\n\n        dragDisable(exports.event.view);\n      }\n\n      nopropagation$2();\n      interrupt(that);\n      redraw.call(that);\n      emit.start();\n\n      function moved() {\n        var point1 = mouse(that);\n        if (shifting && !lockX && !lockY) {\n          if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n          else lockX = true;\n        }\n        point = point1;\n        moving = true;\n        noevent$2();\n        move();\n      }\n\n      function move() {\n        var t;\n\n        dx = point[0] - point0[0];\n        dy = point[1] - point0[1];\n\n        switch (mode) {\n          case MODE_SPACE:\n          case MODE_DRAG: {\n            if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n            if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n            break;\n          }\n          case MODE_HANDLE: {\n            if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n            else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n            if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n            else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n            break;\n          }\n          case MODE_CENTER: {\n            if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n            if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n            break;\n          }\n        }\n\n        if (e1 < w1) {\n          signX *= -1;\n          t = w0, w0 = e0, e0 = t;\n          t = w1, w1 = e1, e1 = t;\n          if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n        }\n\n        if (s1 < n1) {\n          signY *= -1;\n          t = n0, n0 = s0, s0 = t;\n          t = n1, n1 = s1, s1 = t;\n          if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n        }\n\n        selection = state.selection; // May be set by brush.move!\n\n        if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n        if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n        if (selection[0][0] !== w1\n            || selection[0][1] !== n1\n            || selection[1][0] !== e1\n            || selection[1][1] !== s1) {\n          state.selection = [[w1, n1], [e1, s1]];\n          redraw.call(that);\n          emit.brush();\n        }\n      }\n\n      function ended() {\n        nopropagation$2();\n        if (exports.event.touches) {\n          if (exports.event.touches.length) return;\n          if (touchending) clearTimeout(touchending);\n          touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n          group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n        } else {\n          dragEnable(exports.event.view, moving);\n          view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n        }\n        group.attr(\"pointer-events\", \"all\");\n        overlay.attr(\"cursor\", cursors.overlay);\n        if (empty$1(selection)) state.selection = null, redraw.call(that);\n        emit.end();\n      }\n\n      function keydowned() {\n        switch (exports.event.keyCode) {\n          case 16: { // SHIFT\n            shifting = signX && signY;\n            break;\n          }\n          case 18: { // ALT\n            if (mode === MODE_HANDLE) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n              move();\n            }\n            break;\n          }\n          case 32: { // SPACE; takes priority over ALT\n            if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n              if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n              if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n              mode = MODE_SPACE;\n              overlay.attr(\"cursor\", cursors.selection);\n              move();\n            }\n            break;\n          }\n          default: return;\n        }\n        noevent$2();\n      }\n\n      function keyupped() {\n        switch (exports.event.keyCode) {\n          case 16: { // SHIFT\n            if (shifting) {\n              lockX = lockY = shifting = false;\n              move();\n            }\n            break;\n          }\n          case 18: { // ALT\n            if (mode === MODE_CENTER) {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n              move();\n            }\n            break;\n          }\n          case 32: { // SPACE\n            if (mode === MODE_SPACE) {\n              if (exports.event.altKey) {\n                if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n                if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n                mode = MODE_CENTER;\n              } else {\n                if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n                if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n                mode = MODE_HANDLE;\n              }\n              overlay.attr(\"cursor\", cursors[type]);\n              move();\n            }\n            break;\n          }\n          default: return;\n        }\n        noevent$2();\n      }\n    }\n\n    function initialize() {\n      var state = this.__brush || {selection: null};\n      state.extent = extent.apply(this, arguments);\n      state.dim = dim;\n      return state;\n    }\n\n    brush.extent = function(_) {\n      return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$10([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n    };\n\n    brush.filter = function(_) {\n      return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$10(!!_), brush) : filter;\n    };\n\n    brush.handleSize = function(_) {\n      return arguments.length ? (handleSize = +_, brush) : handleSize;\n    };\n\n    brush.on = function() {\n      var value = listeners.on.apply(listeners, arguments);\n      return value === listeners ? brush : value;\n    };\n\n    return brush;\n  }\n\n  var cos = Math.cos;\n  var sin = Math.sin;\n  var pi$3 = Math.PI;\n  var halfPi$2 = pi$3 / 2;\n  var tau$3 = pi$3 * 2;\n  var max$1 = Math.max;\n\n  function compareValue(compare) {\n    return function(a, b) {\n      return compare(\n        a.source.value + a.target.value,\n        b.source.value + b.target.value\n      );\n    };\n  }\n\n  function chord() {\n    var padAngle = 0,\n        sortGroups = null,\n        sortSubgroups = null,\n        sortChords = null;\n\n    function chord(matrix) {\n      var n = matrix.length,\n          groupSums = [],\n          groupIndex = range(n),\n          subgroupIndex = [],\n          chords = [],\n          groups = chords.groups = new Array(n),\n          subgroups = new Array(n * n),\n          k,\n          x,\n          x0,\n          dx,\n          i,\n          j;\n\n      // Compute the sum.\n      k = 0, i = -1; while (++i < n) {\n        x = 0, j = -1; while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(range(n));\n        k += x;\n      }\n\n      // Sort groups…\n      if (sortGroups) groupIndex.sort(function(a, b) {\n        return sortGroups(groupSums[a], groupSums[b]);\n      });\n\n      // Sort subgroups…\n      if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n        d.sort(function(a, b) {\n          return sortSubgroups(matrix[i][a], matrix[i][b]);\n        });\n      });\n\n      // Convert the sum to scaling factor for [0, 2pi].\n      // TODO Allow start and end angle to be specified?\n      // TODO Allow padding to be specified as percentage?\n      k = max$1(0, tau$3 - padAngle * n) / k;\n      dx = k ? padAngle : tau$3 / n;\n\n      // Compute the start and end angle for each group and subgroup.\n      // Note: Opera has a bug reordering object literal properties!\n      x = 0, i = -1; while (++i < n) {\n        x0 = x, j = -1; while (++j < n) {\n          var di = groupIndex[i],\n              dj = subgroupIndex[di][j],\n              v = matrix[di][dj],\n              a0 = x,\n              a1 = x += v * k;\n          subgroups[dj * n + di] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += dx;\n      }\n\n      // Generate chords for each (non-empty) subgroup-subgroup link.\n      i = -1; while (++i < n) {\n        j = i - 1; while (++j < n) {\n          var source = subgroups[j * n + i],\n              target = subgroups[i * n + j];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value\n                ? {source: target, target: source}\n                : {source: source, target: target});\n          }\n        }\n      }\n\n      return sortChords ? chords.sort(sortChords) : chords;\n    }\n\n    chord.padAngle = function(_) {\n      return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n    };\n\n    chord.sortGroups = function(_) {\n      return arguments.length ? (sortGroups = _, chord) : sortGroups;\n    };\n\n    chord.sortSubgroups = function(_) {\n      return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n    };\n\n    chord.sortChords = function(_) {\n      return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n    };\n\n    return chord;\n  }\n\n  var slice$5 = Array.prototype.slice;\n\n  function constant$11(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function defaultSource(d) {\n    return d.source;\n  }\n\n  function defaultTarget(d) {\n    return d.target;\n  }\n\n  function defaultRadius$1(d) {\n    return d.radius;\n  }\n\n  function defaultStartAngle(d) {\n    return d.startAngle;\n  }\n\n  function defaultEndAngle(d) {\n    return d.endAngle;\n  }\n\n  function ribbon() {\n    var source = defaultSource,\n        target = defaultTarget,\n        radius = defaultRadius$1,\n        startAngle = defaultStartAngle,\n        endAngle = defaultEndAngle,\n        context = null;\n\n    function ribbon() {\n      var buffer,\n          argv = slice$5.call(arguments),\n          s = source.apply(this, argv),\n          t = target.apply(this, argv),\n          sr = +radius.apply(this, (argv[0] = s, argv)),\n          sa0 = startAngle.apply(this, argv) - halfPi$2,\n          sa1 = endAngle.apply(this, argv) - halfPi$2,\n          sx0 = sr * cos(sa0),\n          sy0 = sr * sin(sa0),\n          tr = +radius.apply(this, (argv[0] = t, argv)),\n          ta0 = startAngle.apply(this, argv) - halfPi$2,\n          ta1 = endAngle.apply(this, argv) - halfPi$2;\n\n      if (!context) context = buffer = path();\n\n      context.moveTo(sx0, sy0);\n      context.arc(0, 0, sr, sa0, sa1);\n      if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n        context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n        context.arc(0, 0, tr, ta0, ta1);\n      }\n      context.quadraticCurveTo(0, 0, sx0, sy0);\n      context.closePath();\n\n      if (buffer) return context = null, buffer + \"\" || null;\n    }\n\n    ribbon.radius = function(_) {\n      return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$11(+_), ribbon) : radius;\n    };\n\n    ribbon.startAngle = function(_) {\n      return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$11(+_), ribbon) : startAngle;\n    };\n\n    ribbon.endAngle = function(_) {\n      return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$11(+_), ribbon) : endAngle;\n    };\n\n    ribbon.source = function(_) {\n      return arguments.length ? (source = _, ribbon) : source;\n    };\n\n    ribbon.target = function(_) {\n      return arguments.length ? (target = _, ribbon) : target;\n    };\n\n    ribbon.context = function(_) {\n      return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n    };\n\n    return ribbon;\n  }\n\n  // Adds floating point numbers with twice the normal precision.\n  // Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n  // Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n  // 305–363 (1997).\n  // Code adapted from GeographicLib by Charles F. F. Karney,\n  // http://geographiclib.sourceforge.net/\n\n  function adder() {\n    return new Adder;\n  }\n\n  function Adder() {\n    this.reset();\n  }\n\n  Adder.prototype = {\n    constructor: Adder,\n    reset: function() {\n      this.s = // rounded value\n      this.t = 0; // exact error\n    },\n    add: function(y) {\n      add$1(temp, y, this.t);\n      add$1(this, temp.s, this.s);\n      if (this.s) this.t += temp.t;\n      else this.s = temp.t;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n\n  var temp = new Adder;\n\n  function add$1(adder, a, b) {\n    var x = adder.s = a + b,\n        bv = x - a,\n        av = x - bv;\n    adder.t = (a - av) + (b - bv);\n  }\n\n  var epsilon$4 = 1e-6;\n  var epsilon2$2 = 1e-12;\n  var pi$4 = Math.PI;\n  var halfPi$3 = pi$4 / 2;\n  var quarterPi = pi$4 / 4;\n  var tau$4 = pi$4 * 2;\n\n  var degrees$1 = 180 / pi$4;\n  var radians = pi$4 / 180;\n\n  var abs = Math.abs;\n  var atan = Math.atan;\n  var atan2 = Math.atan2;\n  var cos$1 = Math.cos;\n  var ceil = Math.ceil;\n  var exp = Math.exp;\n  var log$1 = Math.log;\n  var pow$1 = Math.pow;\n  var sin$1 = Math.sin;\n  var sign$1 = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\n  var sqrt$1 = Math.sqrt;\n  var tan = Math.tan;\n\n  function acos(x) {\n    return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n  }\n\n  function asin$1(x) {\n    return x > 1 ? halfPi$3 : x < -1 ? -halfPi$3 : Math.asin(x);\n  }\n\n  function haversin(x) {\n    return (x = sin$1(x / 2)) * x;\n  }\n\n  function noop$2() {}\n\n  function streamGeometry(geometry, stream) {\n    if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n      streamGeometryType[geometry.type](geometry, stream);\n    }\n  }\n\n  var streamObjectType = {\n    Feature: function(feature, stream) {\n      streamGeometry(feature.geometry, stream);\n    },\n    FeatureCollection: function(object, stream) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) streamGeometry(features[i].geometry, stream);\n    }\n  };\n\n  var streamGeometryType = {\n    Sphere: function(object, stream) {\n      stream.sphere();\n    },\n    Point: function(object, stream) {\n      object = object.coordinates;\n      stream.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, stream) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, stream) {\n      streamLine(object.coordinates, stream, 0);\n    },\n    MultiLineString: function(object, stream) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) streamLine(coordinates[i], stream, 0);\n    },\n    Polygon: function(object, stream) {\n      streamPolygon(object.coordinates, stream);\n    },\n    MultiPolygon: function(object, stream) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) streamPolygon(coordinates[i], stream);\n    },\n    GeometryCollection: function(object, stream) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) streamGeometry(geometries[i], stream);\n    }\n  };\n\n  function streamLine(coordinates, stream, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    stream.lineStart();\n    while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n    stream.lineEnd();\n  }\n\n  function streamPolygon(coordinates, stream) {\n    var i = -1, n = coordinates.length;\n    stream.polygonStart();\n    while (++i < n) streamLine(coordinates[i], stream, 1);\n    stream.polygonEnd();\n  }\n\n  function stream(object, stream) {\n    if (object && streamObjectType.hasOwnProperty(object.type)) {\n      streamObjectType[object.type](object, stream);\n    } else {\n      streamGeometry(object, stream);\n    }\n  }\n\n  var areaRingSum;\n\n  var areaSum;\n  var lambda00;\n  var phi00;\n  var lambda0;\n  var cosPhi0;\n  var sinPhi0;\n  var areaStream = {\n    point: noop$2,\n    lineStart: noop$2,\n    lineEnd: noop$2,\n    polygonStart: function() {\n      areaRingSum.reset();\n      areaStream.lineStart = areaRingStart;\n      areaStream.lineEnd = areaRingEnd;\n    },\n    polygonEnd: function() {\n      var areaRing = +areaRingSum;\n      areaSum.add(areaRing < 0 ? tau$4 + areaRing : areaRing);\n      this.lineStart = this.lineEnd = this.point = noop$2;\n    },\n    sphere: function() {\n      areaSum.add(tau$4);\n    }\n  };\n\n  function areaRingStart() {\n    areaStream.point = areaPointFirst;\n  }\n\n  function areaRingEnd() {\n    areaPoint(lambda00, phi00);\n  }\n\n  function areaPointFirst(lambda, phi) {\n    areaStream.point = areaPoint;\n    lambda00 = lambda, phi00 = phi;\n    lambda *= radians, phi *= radians;\n    lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n  }\n\n  function areaPoint(lambda, phi) {\n    lambda *= radians, phi *= radians;\n    phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n    // Spherical excess E for a spherical triangle with vertices: south pole,\n    // previous point, current point.  Uses a formula derived from Cagnoli’s\n    // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n    var dLambda = lambda - lambda0,\n        sdLambda = dLambda >= 0 ? 1 : -1,\n        adLambda = sdLambda * dLambda,\n        cosPhi = cos$1(phi),\n        sinPhi = sin$1(phi),\n        k = sinPhi0 * sinPhi,\n        u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n        v = k * sdLambda * sin$1(adLambda);\n    areaRingSum.add(atan2(v, u));\n\n    // Advance the previous points.\n    lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n  }\n\n  function area$2(object) {\n    if (areaSum) areaSum.reset();\n    else areaSum = adder(), areaRingSum = adder();\n    stream(object, areaStream);\n    return areaSum * 2;\n  }\n\n  function spherical(cartesian) {\n    return [atan2(cartesian[1], cartesian[0]), asin$1(cartesian[2])];\n  }\n\n  function cartesian(spherical) {\n    var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n    return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n  }\n\n  function cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n\n  function cartesianCross(a, b) {\n    return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n  }\n\n  // TODO return a\n  function cartesianAddInPlace(a, b) {\n    a[0] += b[0], a[1] += b[1], a[2] += b[2];\n  }\n\n  function cartesianScale(vector, k) {\n    return [vector[0] * k, vector[1] * k, vector[2] * k];\n  }\n\n  // TODO return d\n  function cartesianNormalizeInPlace(d) {\n    var l = sqrt$1(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l, d[1] /= l, d[2] /= l;\n  }\n\nvar   lambda0$1;\n  var phi0;\n  var lambda1;\n  var phi1;\n  var lambda2;\nvar   lambda00$1;\nvar   phi00$1;\n  var p0;\n  var deltaSum;\n  var ranges;\nvar   range$1;\n  var boundsStream = {\n    point: boundsPoint,\n    lineStart: boundsLineStart,\n    lineEnd: boundsLineEnd,\n    polygonStart: function() {\n      boundsStream.point = boundsRingPoint;\n      boundsStream.lineStart = boundsRingStart;\n      boundsStream.lineEnd = boundsRingEnd;\n      deltaSum.reset();\n      areaStream.polygonStart();\n    },\n    polygonEnd: function() {\n      areaStream.polygonEnd();\n      boundsStream.point = boundsPoint;\n      boundsStream.lineStart = boundsLineStart;\n      boundsStream.lineEnd = boundsLineEnd;\n      if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n      else if (deltaSum > epsilon$4) phi1 = 90;\n      else if (deltaSum < -epsilon$4) phi0 = -90;\n      range$1[0] = lambda0$1, range$1[1] = lambda1;\n    }\n  };\n\n  function boundsPoint(lambda, phi) {\n    ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n    if (phi < phi0) phi0 = phi;\n    if (phi > phi1) phi1 = phi;\n  }\n\n  function linePoint(lambda, phi) {\n    var p = cartesian([lambda * radians, phi * radians]);\n    if (p0) {\n      var normal = cartesianCross(p0, p),\n          equatorial = [normal[1], -normal[0], 0],\n          inflection = cartesianCross(equatorial, normal);\n      cartesianNormalizeInPlace(inflection);\n      inflection = spherical(inflection);\n      var delta = lambda - lambda2,\n          sign = delta > 0 ? 1 : -1,\n          lambdai = inflection[0] * degrees$1 * sign,\n          phii,\n          antimeridian = abs(delta) > 180;\n      if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n        phii = inflection[1] * degrees$1;\n        if (phii > phi1) phi1 = phii;\n      } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n        phii = -inflection[1] * degrees$1;\n        if (phii < phi0) phi0 = phii;\n      } else {\n        if (phi < phi0) phi0 = phi;\n        if (phi > phi1) phi1 = phi;\n      }\n      if (antimeridian) {\n        if (lambda < lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      } else {\n        if (lambda1 >= lambda0$1) {\n          if (lambda < lambda0$1) lambda0$1 = lambda;\n          if (lambda > lambda1) lambda1 = lambda;\n        } else {\n          if (lambda > lambda2) {\n            if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n          } else {\n            if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n          }\n        }\n      }\n    } else {\n      boundsPoint(lambda, phi);\n    }\n    p0 = p, lambda2 = lambda;\n  }\n\n  function boundsLineStart() {\n    boundsStream.point = linePoint;\n  }\n\n  function boundsLineEnd() {\n    range$1[0] = lambda0$1, range$1[1] = lambda1;\n    boundsStream.point = boundsPoint;\n    p0 = null;\n  }\n\n  function boundsRingPoint(lambda, phi) {\n    if (p0) {\n      var delta = lambda - lambda2;\n      deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n    } else {\n      lambda00$1 = lambda, phi00$1 = phi;\n    }\n    areaStream.point(lambda, phi);\n    linePoint(lambda, phi);\n  }\n\n  function boundsRingStart() {\n    areaStream.lineStart();\n  }\n\n  function boundsRingEnd() {\n    boundsRingPoint(lambda00$1, phi00$1);\n    areaStream.lineEnd();\n    if (abs(deltaSum) > epsilon$4) lambda0$1 = -(lambda1 = 180);\n    range$1[0] = lambda0$1, range$1[1] = lambda1;\n    p0 = null;\n  }\n\n  // Finds the left-right distance between two longitudes.\n  // This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n  // the distance between ±180° to be 360°.\n  function angle(lambda0, lambda1) {\n    return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n  }\n\n  function rangeCompare(a, b) {\n    return a[0] - b[0];\n  }\n\n  function rangeContains(range, x) {\n    return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n  }\n\n  function bounds(feature) {\n    var i, n, a, b, merged, deltaMax, delta;\n\n    if (deltaSum) deltaSum.reset();\n    else deltaSum = adder();\n    phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n    ranges = [];\n    stream(feature, boundsStream);\n\n    // First, sort ranges by their minimum longitudes.\n    if (n = ranges.length) {\n      ranges.sort(rangeCompare);\n\n      // Then, merge any ranges that overlap.\n      for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n        b = ranges[i];\n        if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n          if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n          if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n        } else {\n          merged.push(a = b);\n        }\n      }\n\n      // Finally, find the largest gap between the merged ranges.\n      // The final bounding box will be the inverse of this gap.\n      for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n        b = merged[i];\n        if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n      }\n    }\n\n    ranges = range$1 = null;\n\n    return lambda0$1 === Infinity || phi0 === Infinity\n        ? [[NaN, NaN], [NaN, NaN]]\n        : [[lambda0$1, phi0], [lambda1, phi1]];\n  }\n\n  var W0;\n  var W1;\n  var X0;\n  var Y0;\n  var Z0;\n  var X1;\n  var Y1;\n  var Z1;\n  var X2;\n  var Y2;\n  var Z2;\nvar   lambda00$2;\nvar   phi00$2;\n  var x0;\n  var y0;\n  var z0;\n  // previous point\n\n  var centroidStream = {\n    sphere: noop$2,\n    point: centroidPoint,\n    lineStart: centroidLineStart,\n    lineEnd: centroidLineEnd,\n    polygonStart: function() {\n      centroidStream.lineStart = centroidRingStart;\n      centroidStream.lineEnd = centroidRingEnd;\n    },\n    polygonEnd: function() {\n      centroidStream.lineStart = centroidLineStart;\n      centroidStream.lineEnd = centroidLineEnd;\n    }\n  };\n\n  // Arithmetic mean of Cartesian vectors.\n  function centroidPoint(lambda, phi) {\n    lambda *= radians, phi *= radians;\n    var cosPhi = cos$1(phi);\n    centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n  }\n\n  function centroidPointCartesian(x, y, z) {\n    ++W0;\n    X0 += (x - X0) / W0;\n    Y0 += (y - Y0) / W0;\n    Z0 += (z - Z0) / W0;\n  }\n\n  function centroidLineStart() {\n    centroidStream.point = centroidLinePointFirst;\n  }\n\n  function centroidLinePointFirst(lambda, phi) {\n    lambda *= radians, phi *= radians;\n    var cosPhi = cos$1(phi);\n    x0 = cosPhi * cos$1(lambda);\n    y0 = cosPhi * sin$1(lambda);\n    z0 = sin$1(phi);\n    centroidStream.point = centroidLinePoint;\n    centroidPointCartesian(x0, y0, z0);\n  }\n\n  function centroidLinePoint(lambda, phi) {\n    lambda *= radians, phi *= radians;\n    var cosPhi = cos$1(phi),\n        x = cosPhi * cos$1(lambda),\n        y = cosPhi * sin$1(lambda),\n        z = sin$1(phi),\n        w = atan2(sqrt$1((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n    W1 += w;\n    X1 += w * (x0 + (x0 = x));\n    Y1 += w * (y0 + (y0 = y));\n    Z1 += w * (z0 + (z0 = z));\n    centroidPointCartesian(x0, y0, z0);\n  }\n\n  function centroidLineEnd() {\n    centroidStream.point = centroidPoint;\n  }\n\n  // See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n  // J. Applied Mechanics 42, 239 (1975).\n  function centroidRingStart() {\n    centroidStream.point = centroidRingPointFirst;\n  }\n\n  function centroidRingEnd() {\n    centroidRingPoint(lambda00$2, phi00$2);\n    centroidStream.point = centroidPoint;\n  }\n\n  function centroidRingPointFirst(lambda, phi) {\n    lambda00$2 = lambda, phi00$2 = phi;\n    lambda *= radians, phi *= radians;\n    centroidStream.point = centroidRingPoint;\n    var cosPhi = cos$1(phi);\n    x0 = cosPhi * cos$1(lambda);\n    y0 = cosPhi * sin$1(lambda);\n    z0 = sin$1(phi);\n    centroidPointCartesian(x0, y0, z0);\n  }\n\n  function centroidRingPoint(lambda, phi) {\n    lambda *= radians, phi *= radians;\n    var cosPhi = cos$1(phi),\n        x = cosPhi * cos$1(lambda),\n        y = cosPhi * sin$1(lambda),\n        z = sin$1(phi),\n        cx = y0 * z - z0 * y,\n        cy = z0 * x - x0 * z,\n        cz = x0 * y - y0 * x,\n        m = sqrt$1(cx * cx + cy * cy + cz * cz),\n        u = x0 * x + y0 * y + z0 * z,\n        v = m && -acos(u) / m, // area weight\n        w = atan2(m, u); // line weight\n    X2 += v * cx;\n    Y2 += v * cy;\n    Z2 += v * cz;\n    W1 += w;\n    X1 += w * (x0 + (x0 = x));\n    Y1 += w * (y0 + (y0 = y));\n    Z1 += w * (z0 + (z0 = z));\n    centroidPointCartesian(x0, y0, z0);\n  }\n\n  function centroid$1(object) {\n    W0 = W1 =\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    stream(object, centroidStream);\n\n    var x = X2,\n        y = Y2,\n        z = Z2,\n        m = x * x + y * y + z * z;\n\n    // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n    if (m < epsilon2$2) {\n      x = X1, y = Y1, z = Z1;\n      // If the feature has zero length, fall back to arithmetic mean of point vectors.\n      if (W1 < epsilon$4) x = X0, y = Y0, z = Z0;\n      m = x * x + y * y + z * z;\n      // If the feature still has an undefined ccentroid, then return.\n      if (m < epsilon2$2) return [NaN, NaN];\n    }\n\n    return [atan2(y, x) * degrees$1, asin$1(z / sqrt$1(m)) * degrees$1];\n  }\n\n  function constant$12(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function compose(a, b) {\n\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n\n    return compose;\n  }\n\n  function rotationIdentity(lambda, phi) {\n    return [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n  }\n\n  rotationIdentity.invert = rotationIdentity;\n\n  function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n    return (deltaLambda %= tau$4) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n      : rotationLambda(deltaLambda))\n      : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n      : rotationIdentity);\n  }\n\n  function forwardRotationLambda(deltaLambda) {\n    return function(lambda, phi) {\n      return lambda += deltaLambda, [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n    };\n  }\n\n  function rotationLambda(deltaLambda) {\n    var rotation = forwardRotationLambda(deltaLambda);\n    rotation.invert = forwardRotationLambda(-deltaLambda);\n    return rotation;\n  }\n\n  function rotationPhiGamma(deltaPhi, deltaGamma) {\n    var cosDeltaPhi = cos$1(deltaPhi),\n        sinDeltaPhi = sin$1(deltaPhi),\n        cosDeltaGamma = cos$1(deltaGamma),\n        sinDeltaGamma = sin$1(deltaGamma);\n\n    function rotation(lambda, phi) {\n      var cosPhi = cos$1(phi),\n          x = cos$1(lambda) * cosPhi,\n          y = sin$1(lambda) * cosPhi,\n          z = sin$1(phi),\n          k = z * cosDeltaPhi + x * sinDeltaPhi;\n      return [\n        atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n        asin$1(k * cosDeltaGamma + y * sinDeltaGamma)\n      ];\n    }\n\n    rotation.invert = function(lambda, phi) {\n      var cosPhi = cos$1(phi),\n          x = cos$1(lambda) * cosPhi,\n          y = sin$1(lambda) * cosPhi,\n          z = sin$1(phi),\n          k = z * cosDeltaGamma - y * sinDeltaGamma;\n      return [\n        atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n        asin$1(k * cosDeltaPhi - x * sinDeltaPhi)\n      ];\n    };\n\n    return rotation;\n  }\n\n  function rotation(rotate) {\n    rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n      return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n    }\n\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n      return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n    };\n\n    return forward;\n  }\n\n  // Generates a circle centered at [0°, 0°], with a given radius and precision.\n  function circleStream(stream, radius, delta, direction, t0, t1) {\n    if (!delta) return;\n    var cosRadius = cos$1(radius),\n        sinRadius = sin$1(radius),\n        step = direction * delta;\n    if (t0 == null) {\n      t0 = radius + direction * tau$4;\n      t1 = radius - step / 2;\n    } else {\n      t0 = circleRadius(cosRadius, t0);\n      t1 = circleRadius(cosRadius, t1);\n      if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$4;\n    }\n    for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n      point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n      stream.point(point[0], point[1]);\n    }\n  }\n\n  // Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n  function circleRadius(cosRadius, point) {\n    point = cartesian(point), point[0] -= cosRadius;\n    cartesianNormalizeInPlace(point);\n    var radius = acos(-point[1]);\n    return ((-point[2] < 0 ? -radius : radius) + tau$4 - epsilon$4) % tau$4;\n  }\n\n  function circle$1() {\n    var center = constant$12([0, 0]),\n        radius = constant$12(90),\n        precision = constant$12(6),\n        ring,\n        rotate,\n        stream = {point: point};\n\n    function point(x, y) {\n      ring.push(x = rotate(x, y));\n      x[0] *= degrees$1, x[1] *= degrees$1;\n    }\n\n    function circle() {\n      var c = center.apply(this, arguments),\n          r = radius.apply(this, arguments) * radians,\n          p = precision.apply(this, arguments) * radians;\n      ring = [];\n      rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n      circleStream(stream, r, p, 1);\n      c = {type: \"Polygon\", coordinates: [ring]};\n      ring = rotate = null;\n      return c;\n    }\n\n    circle.center = function(_) {\n      return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$12([+_[0], +_[1]]), circle) : center;\n    };\n\n    circle.radius = function(_) {\n      return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$12(+_), circle) : radius;\n    };\n\n    circle.precision = function(_) {\n      return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$12(+_), circle) : precision;\n    };\n\n    return circle;\n  }\n\n  function clipBuffer() {\n    var lines = [],\n        line;\n    return {\n      point: function(x, y) {\n        line.push([x, y]);\n      },\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      lineEnd: noop$2,\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      },\n      result: function() {\n        var result = lines;\n        lines = [];\n        line = null;\n        return result;\n      }\n    };\n  }\n\n  function clipLine(a, b, x0, y0, x1, y1) {\n    var ax = a[0],\n        ay = a[1],\n        bx = b[0],\n        by = b[1],\n        t0 = 0,\n        t1 = 1,\n        dx = bx - ax,\n        dy = by - ay,\n        r;\n\n    r = x0 - ax;\n    if (!dx && r > 0) return;\n    r /= dx;\n    if (dx < 0) {\n      if (r < t0) return;\n      if (r < t1) t1 = r;\n    } else if (dx > 0) {\n      if (r > t1) return;\n      if (r > t0) t0 = r;\n    }\n\n    r = x1 - ax;\n    if (!dx && r < 0) return;\n    r /= dx;\n    if (dx < 0) {\n      if (r > t1) return;\n      if (r > t0) t0 = r;\n    } else if (dx > 0) {\n      if (r < t0) return;\n      if (r < t1) t1 = r;\n    }\n\n    r = y0 - ay;\n    if (!dy && r > 0) return;\n    r /= dy;\n    if (dy < 0) {\n      if (r < t0) return;\n      if (r < t1) t1 = r;\n    } else if (dy > 0) {\n      if (r > t1) return;\n      if (r > t0) t0 = r;\n    }\n\n    r = y1 - ay;\n    if (!dy && r < 0) return;\n    r /= dy;\n    if (dy < 0) {\n      if (r > t1) return;\n      if (r > t0) t0 = r;\n    } else if (dy > 0) {\n      if (r < t0) return;\n      if (r < t1) t1 = r;\n    }\n\n    if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n    if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n    return true;\n  }\n\n  function pointEqual(a, b) {\n    return abs(a[0] - b[0]) < epsilon$4 && abs(a[1] - b[1]) < epsilon$4;\n  }\n\n  function Intersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other; // another intersection\n    this.e = entry; // is an entry?\n    this.v = false; // visited\n    this.n = this.p = null; // next & previous\n  }\n\n  // A generalized polygon clipping algorithm: given a polygon that has been cut\n  // into its visible line segments, and rejoins the segments by interpolating\n  // along the clip edge.\n  function clipPolygon(segments, compareIntersection, startInside, interpolate, stream) {\n    var subject = [],\n        clip = [],\n        i,\n        n;\n\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n], x;\n\n      // If the first and last points of a segment are coincident, then treat as a\n      // closed ring. TODO if all rings are closed, then the winding order of the\n      // exterior ring should be checked.\n      if (pointEqual(p0, p1)) {\n        stream.lineStart();\n        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n        stream.lineEnd();\n        return;\n      }\n\n      subject.push(x = new Intersection(p0, segment, null, true));\n      clip.push(x.o = new Intersection(p0, null, x, false));\n      subject.push(x = new Intersection(p1, segment, null, false));\n      clip.push(x.o = new Intersection(p1, null, x, true));\n    });\n\n    if (!subject.length) return;\n\n    clip.sort(compareIntersection);\n    link$1(subject);\n    link$1(clip);\n\n    for (i = 0, n = clip.length; i < n; ++i) {\n      clip[i].e = startInside = !startInside;\n    }\n\n    var start = subject[0],\n        points,\n        point;\n\n    while (1) {\n      // Find first unvisited intersection.\n      var current = start,\n          isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      stream.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, stream);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, stream);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      stream.lineEnd();\n    }\n  }\n\n  function link$1(array) {\n    if (!(n = array.length)) return;\n    var n,\n        i = 0,\n        a = array[0],\n        b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n\n  var clipMax = 1e9;\n  var clipMin = -clipMax;\n  // TODO Use d3-polygon’s polygonContains here for the ring check?\n  // TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\n  function clipExtent(x0, y0, x1, y1) {\n\n    function visible(x, y) {\n      return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n    }\n\n    function interpolate(from, to, direction, stream) {\n      var a = 0, a1 = 0;\n      if (from == null\n          || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n          || comparePoint(from, to) < 0 ^ direction > 0) {\n        do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n        while ((a = (a + direction + 4) % 4) !== a1);\n      } else {\n        stream.point(to[0], to[1]);\n      }\n    }\n\n    function corner(p, direction) {\n      return abs(p[0] - x0) < epsilon$4 ? direction > 0 ? 0 : 3\n          : abs(p[0] - x1) < epsilon$4 ? direction > 0 ? 2 : 1\n          : abs(p[1] - y0) < epsilon$4 ? direction > 0 ? 1 : 0\n          : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n    }\n\n    function compareIntersection(a, b) {\n      return comparePoint(a.x, b.x);\n    }\n\n    function comparePoint(a, b) {\n      var ca = corner(a, 1),\n          cb = corner(b, 1);\n      return ca !== cb ? ca - cb\n          : ca === 0 ? b[1] - a[1]\n          : ca === 1 ? a[0] - b[0]\n          : ca === 2 ? a[1] - b[1]\n          : b[0] - a[0];\n    }\n\n    return function(stream) {\n      var activeStream = stream,\n          bufferStream = clipBuffer(),\n          segments,\n          polygon,\n          ring,\n          x__, y__, v__, // first point\n          x_, y_, v_, // previous point\n          first,\n          clean;\n\n      var clipStream = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: polygonStart,\n        polygonEnd: polygonEnd\n      };\n\n      function point(x, y) {\n        if (visible(x, y)) activeStream.point(x, y);\n      }\n\n      function polygonInside() {\n        var winding = 0;\n\n        for (var i = 0, n = polygon.length; i < n; ++i) {\n          for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n            a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n            if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n            else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n          }\n        }\n\n        return winding;\n      }\n\n      // Buffer geometry within a polygon and then clip it en masse.\n      function polygonStart() {\n        activeStream = bufferStream, segments = [], polygon = [], clean = true;\n      }\n\n      function polygonEnd() {\n        var startInside = polygonInside(),\n            cleanInside = clean && startInside,\n            visible = (segments = merge(segments)).length;\n        if (cleanInside || visible) {\n          stream.polygonStart();\n          if (cleanInside) {\n            stream.lineStart();\n            interpolate(null, null, 1, stream);\n            stream.lineEnd();\n          }\n          if (visible) {\n            clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n          }\n          stream.polygonEnd();\n        }\n        activeStream = stream, segments = polygon = ring = null;\n      }\n\n      function lineStart() {\n        clipStream.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n\n      // TODO rather than special-case polygons, simply handle them separately.\n      // Ideally, coincident intersection points should be jittered to avoid\n      // clipping issues.\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferStream.rejoin();\n          segments.push(bufferStream.result());\n        }\n        clipStream.point = point;\n        if (v_) activeStream.lineEnd();\n      }\n\n      function linePoint(x, y) {\n        var v = visible(x, y);\n        if (polygon) ring.push([x, y]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n          }\n        } else {\n          if (v && v_) activeStream.point(x, y);\n          else {\n            var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n                b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n            if (clipLine(a, b, x0, y0, x1, y1)) {\n              if (!v_) {\n                activeStream.lineStart();\n                activeStream.point(a[0], a[1]);\n              }\n              activeStream.point(b[0], b[1]);\n              if (!v) activeStream.lineEnd();\n              clean = false;\n            } else if (v) {\n              activeStream.lineStart();\n              activeStream.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n\n      return clipStream;\n    };\n  }\n\n  function extent$1() {\n    var x0 = 0,\n        y0 = 0,\n        x1 = 960,\n        y1 = 500,\n        cache,\n        cacheStream,\n        clip;\n\n    return clip = {\n      stream: function(stream) {\n        return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n      },\n      extent: function(_) {\n        return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n      }\n    };\n  }\n\n  var lengthSum;\nvar   lambda0$2;\nvar   sinPhi0$1;\nvar   cosPhi0$1;\n  var lengthStream = {\n    sphere: noop$2,\n    point: noop$2,\n    lineStart: lengthLineStart,\n    lineEnd: noop$2,\n    polygonStart: noop$2,\n    polygonEnd: noop$2\n  };\n\n  function lengthLineStart() {\n    lengthStream.point = lengthPointFirst;\n    lengthStream.lineEnd = lengthLineEnd;\n  }\n\n  function lengthLineEnd() {\n    lengthStream.point = lengthStream.lineEnd = noop$2;\n  }\n\n  function lengthPointFirst(lambda, phi) {\n    lambda *= radians, phi *= radians;\n    lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n    lengthStream.point = lengthPoint;\n  }\n\n  function lengthPoint(lambda, phi) {\n    lambda *= radians, phi *= radians;\n    var sinPhi = sin$1(phi),\n        cosPhi = cos$1(phi),\n        delta = abs(lambda - lambda0$2),\n        cosDelta = cos$1(delta),\n        sinDelta = sin$1(delta),\n        x = cosPhi * sinDelta,\n        y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n        z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n    lengthSum.add(atan2(sqrt$1(x * x + y * y), z));\n    lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n  }\n\n  function length$2(object) {\n    if (lengthSum) lengthSum.reset();\n    else lengthSum = adder();\n    stream(object, lengthStream);\n    return +lengthSum;\n  }\n\n  var coordinates = [null, null];\nvar   object$1 = {type: \"LineString\", coordinates: coordinates};\n  function distance(a, b) {\n    coordinates[0] = a;\n    coordinates[1] = b;\n    return length$2(object$1);\n  }\n\n  function graticuleX(y0, y1, dy) {\n    var y = range(y0, y1 - epsilon$4, dy).concat(y1);\n    return function(x) { return y.map(function(y) { return [x, y]; }); };\n  }\n\n  function graticuleY(x0, x1, dx) {\n    var x = range(x0, x1 - epsilon$4, dx).concat(x1);\n    return function(y) { return x.map(function(x) { return [x, y]; }); };\n  }\n\n  function graticule() {\n    var x1, x0, X1, X0,\n        y1, y0, Y1, Y0,\n        dx = 10, dy = dx, DX = 90, DY = 360,\n        x, y, X, Y,\n        precision = 2.5;\n\n    function graticule() {\n      return {type: \"MultiLineString\", coordinates: lines()};\n    }\n\n    function lines() {\n      return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n          .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n          .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$4; }).map(x))\n          .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$4; }).map(y));\n    }\n\n    graticule.lines = function() {\n      return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n    };\n\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [\n          X(X0).concat(\n          Y(Y1).slice(1),\n          X(X1).reverse().slice(1),\n          Y(Y0).reverse().slice(1))\n        ]\n      };\n    };\n\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.extentMinor();\n      return graticule.extentMajor(_).extentMinor(_);\n    };\n\n    graticule.extentMajor = function(_) {\n      if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n\n    graticule.extentMinor = function(_) {\n      if (!arguments.length) return [[x0, y0], [x1, y1]];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.stepMinor();\n      return graticule.stepMajor(_).stepMinor(_);\n    };\n\n    graticule.stepMajor = function(_) {\n      if (!arguments.length) return [DX, DY];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n\n    graticule.stepMinor = function(_) {\n      if (!arguments.length) return [dx, dy];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = graticuleX(y0, y1, 90);\n      y = graticuleY(x0, x1, precision);\n      X = graticuleX(Y0, Y1, 90);\n      Y = graticuleY(X0, X1, precision);\n      return graticule;\n    };\n\n    return graticule\n        .extentMajor([[-180, -90 + epsilon$4], [180, 90 - epsilon$4]])\n        .extentMinor([[-180, -80 - epsilon$4], [180, 80 + epsilon$4]]);\n  }\n\n  function interpolate$2(a, b) {\n    var x0 = a[0] * radians,\n        y0 = a[1] * radians,\n        x1 = b[0] * radians,\n        y1 = b[1] * radians,\n        cy0 = cos$1(y0),\n        sy0 = sin$1(y0),\n        cy1 = cos$1(y1),\n        sy1 = sin$1(y1),\n        kx0 = cy0 * cos$1(x0),\n        ky0 = cy0 * sin$1(x0),\n        kx1 = cy1 * cos$1(x1),\n        ky1 = cy1 * sin$1(x1),\n        d = 2 * asin$1(sqrt$1(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n        k = sin$1(d);\n\n    var interpolate = d ? function(t) {\n      var B = sin$1(t *= d) / k,\n          A = sin$1(d - t) / k,\n          x = A * kx0 + B * kx1,\n          y = A * ky0 + B * ky1,\n          z = A * sy0 + B * sy1;\n      return [\n        atan2(y, x) * degrees$1,\n        atan2(z, sqrt$1(x * x + y * y)) * degrees$1\n      ];\n    } : function() {\n      return [x0 * degrees$1, y0 * degrees$1];\n    };\n\n    interpolate.distance = d;\n\n    return interpolate;\n  }\n\n  function identity$7(x) {\n    return x;\n  }\n\nvar   areaSum$1 = adder();\nvar   areaRingSum$1 = adder();\n  var x00;\n  var y00;\nvar   x0$1;\nvar   y0$1;\n  var areaStream$1 = {\n    point: noop$2,\n    lineStart: noop$2,\n    lineEnd: noop$2,\n    polygonStart: function() {\n      areaStream$1.lineStart = areaRingStart$1;\n      areaStream$1.lineEnd = areaRingEnd$1;\n    },\n    polygonEnd: function() {\n      areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$2;\n      areaSum$1.add(abs(areaRingSum$1));\n      areaRingSum$1.reset();\n    },\n    result: function() {\n      var area = areaSum$1 / 2;\n      areaSum$1.reset();\n      return area;\n    }\n  };\n\n  function areaRingStart$1() {\n    areaStream$1.point = areaPointFirst$1;\n  }\n\n  function areaPointFirst$1(x, y) {\n    areaStream$1.point = areaPoint$1;\n    x00 = x0$1 = x, y00 = y0$1 = y;\n  }\n\n  function areaPoint$1(x, y) {\n    areaRingSum$1.add(y0$1 * x - x0$1 * y);\n    x0$1 = x, y0$1 = y;\n  }\n\n  function areaRingEnd$1() {\n    areaPoint$1(x00, y00);\n  }\n\nvar   x0$2 = Infinity;\nvar   y0$2 = x0$2;\n  var x1 = -x0$2;\n  var y1 = x1;\n  var boundsStream$1 = {\n    point: boundsPoint$1,\n    lineStart: noop$2,\n    lineEnd: noop$2,\n    polygonStart: noop$2,\n    polygonEnd: noop$2,\n    result: function() {\n      var bounds = [[x0$2, y0$2], [x1, y1]];\n      x1 = y1 = -(y0$2 = x0$2 = Infinity);\n      return bounds;\n    }\n  };\n\n  function boundsPoint$1(x, y) {\n    if (x < x0$2) x0$2 = x;\n    if (x > x1) x1 = x;\n    if (y < y0$2) y0$2 = y;\n    if (y > y1) y1 = y;\n  }\n\nvar   X0$1 = 0;\nvar   Y0$1 = 0;\nvar   Z0$1 = 0;\nvar   X1$1 = 0;\nvar   Y1$1 = 0;\nvar   Z1$1 = 0;\nvar   X2$1 = 0;\nvar   Y2$1 = 0;\nvar   Z2$1 = 0;\nvar   x00$1;\nvar   y00$1;\nvar   x0$3;\nvar   y0$3;\n  var centroidStream$1 = {\n    point: centroidPoint$1,\n    lineStart: centroidLineStart$1,\n    lineEnd: centroidLineEnd$1,\n    polygonStart: function() {\n      centroidStream$1.lineStart = centroidRingStart$1;\n      centroidStream$1.lineEnd = centroidRingEnd$1;\n    },\n    polygonEnd: function() {\n      centroidStream$1.point = centroidPoint$1;\n      centroidStream$1.lineStart = centroidLineStart$1;\n      centroidStream$1.lineEnd = centroidLineEnd$1;\n    },\n    result: function() {\n      var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n          : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n          : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n          : [NaN, NaN];\n      X0$1 = Y0$1 = Z0$1 =\n      X1$1 = Y1$1 = Z1$1 =\n      X2$1 = Y2$1 = Z2$1 = 0;\n      return centroid;\n    }\n  };\n\n  function centroidPoint$1(x, y) {\n    X0$1 += x;\n    Y0$1 += y;\n    ++Z0$1;\n  }\n\n  function centroidLineStart$1() {\n    centroidStream$1.point = centroidPointFirstLine;\n  }\n\n  function centroidPointFirstLine(x, y) {\n    centroidStream$1.point = centroidPointLine;\n    centroidPoint$1(x0$3 = x, y0$3 = y);\n  }\n\n  function centroidPointLine(x, y) {\n    var dx = x - x0$3, dy = y - y0$3, z = sqrt$1(dx * dx + dy * dy);\n    X1$1 += z * (x0$3 + x) / 2;\n    Y1$1 += z * (y0$3 + y) / 2;\n    Z1$1 += z;\n    centroidPoint$1(x0$3 = x, y0$3 = y);\n  }\n\n  function centroidLineEnd$1() {\n    centroidStream$1.point = centroidPoint$1;\n  }\n\n  function centroidRingStart$1() {\n    centroidStream$1.point = centroidPointFirstRing;\n  }\n\n  function centroidRingEnd$1() {\n    centroidPointRing(x00$1, y00$1);\n  }\n\n  function centroidPointFirstRing(x, y) {\n    centroidStream$1.point = centroidPointRing;\n    centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n  }\n\n  function centroidPointRing(x, y) {\n    var dx = x - x0$3,\n        dy = y - y0$3,\n        z = sqrt$1(dx * dx + dy * dy);\n\n    X1$1 += z * (x0$3 + x) / 2;\n    Y1$1 += z * (y0$3 + y) / 2;\n    Z1$1 += z;\n\n    z = y0$3 * x - x0$3 * y;\n    X2$1 += z * (x0$3 + x);\n    Y2$1 += z * (y0$3 + y);\n    Z2$1 += z * 3;\n    centroidPoint$1(x0$3 = x, y0$3 = y);\n  }\n\n  function PathContext(context) {\n    var pointRadius = 4.5;\n\n    var stream = {\n      point: point,\n\n      // While inside a line, override point to moveTo then lineTo.\n      lineStart: function() { stream.point = pointLineStart; },\n      lineEnd: lineEnd,\n\n      // While inside a polygon, override lineEnd to closePath.\n      polygonStart: function() { stream.lineEnd = lineEndPolygon; },\n      polygonEnd: function() { stream.lineEnd = lineEnd; stream.point = point; },\n\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n\n      result: noop$2\n    };\n\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, tau$4);\n    }\n\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n\n    function lineEnd() {\n      stream.point = point;\n    }\n\n    function lineEndPolygon() {\n      context.closePath();\n    }\n\n    return stream;\n  }\n\n  function PathString() {\n    var pointCircle = circle$2(4.5),\n        string = [];\n\n    var stream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = circle$2(_);\n        return stream;\n      },\n      result: function() {\n        if (string.length) {\n          var result = string.join(\"\");\n          string = [];\n          return result;\n        }\n      }\n    };\n\n    function point(x, y) {\n      string.push(\"M\", x, \",\", y, pointCircle);\n    }\n\n    function pointLineStart(x, y) {\n      string.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n\n    function pointLine(x, y) {\n      string.push(\"L\", x, \",\", y);\n    }\n\n    function lineStart() {\n      stream.point = pointLineStart;\n    }\n\n    function lineEnd() {\n      stream.point = point;\n    }\n\n    function lineEndPolygon() {\n      string.push(\"Z\");\n    }\n\n    return stream;\n  }\n\n  function circle$2(radius) {\n    return \"m0,\" + radius\n        + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n        + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n        + \"z\";\n  }\n\n  function index$3() {\n    var pointRadius = 4.5,\n        projection,\n        projectionStream,\n        context,\n        contextStream;\n\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        stream(object, projectionStream(contextStream));\n      }\n      return contextStream.result();\n    }\n\n    path.area = function(object) {\n      stream(object, projectionStream(areaStream$1));\n      return areaStream$1.result();\n    };\n\n    path.bounds = function(object) {\n      stream(object, projectionStream(boundsStream$1));\n      return boundsStream$1.result();\n    };\n\n    path.centroid = function(object) {\n      stream(object, projectionStream(centroidStream$1));\n      return centroidStream$1.result();\n    };\n\n    path.projection = function(_) {\n      return arguments.length ? (projectionStream = (projection = _) == null ? identity$7 : _.stream, path) : projection;\n    };\n\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new PathString : new PathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return path;\n    };\n\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n\n    return path.projection(null).context(null);\n  }\n\n  var sum$2 = adder();\n\n  function polygonContains(polygon, point) {\n    var lambda = point[0],\n        phi = point[1],\n        normal = [sin$1(lambda), -cos$1(lambda), 0],\n        angle = 0,\n        winding = 0;\n\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      if (!(m = (ring = polygon[i]).length)) continue;\n      var ring,\n          m,\n          point0 = ring[m - 1],\n          lambda0 = point0[0],\n          phi0 = point0[1] / 2 + quarterPi,\n          sinPhi0 = sin$1(phi0),\n          cosPhi0 = cos$1(phi0);\n\n      for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n        var point1 = ring[j],\n            lambda1 = point1[0],\n            phi1 = point1[1] / 2 + quarterPi,\n            sinPhi1 = sin$1(phi1),\n            cosPhi1 = cos$1(phi1),\n            delta = lambda1 - lambda0,\n            sign = delta >= 0 ? 1 : -1,\n            absDelta = sign * delta,\n            antimeridian = absDelta > pi$4,\n            k = sinPhi0 * sinPhi1;\n\n        sum$2.add(atan2(k * sign * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n        angle += antimeridian ? delta + sign * tau$4 : delta;\n\n        // Are the longitudes either side of the point’s meridian (lambda),\n        // and are the latitudes smaller than the parallel (phi)?\n        if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n          var arc = cartesianCross(cartesian(point0), cartesian(point1));\n          cartesianNormalizeInPlace(arc);\n          var intersection = cartesianCross(normal, arc);\n          cartesianNormalizeInPlace(intersection);\n          var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin$1(intersection[2]);\n          if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ delta >= 0 ? 1 : -1;\n          }\n        }\n      }\n    }\n\n    // First, determine whether the South pole is inside or outside:\n    //\n    // It is inside if:\n    // * the polygon winds around it in a clockwise direction.\n    // * the polygon does not (cumulatively) wind around it, but has a negative\n    //   (counter-clockwise) area.\n    //\n    // Second, count the (signed) number of times a segment crosses a lambda\n    // from the point to the South pole.  If it is zero, then the point is the\n    // same side as the South pole.\n\n    var contains = (angle < -epsilon$4 || angle < epsilon$4 && sum$2 < -epsilon$4) ^ (winding & 1);\n    sum$2.reset();\n    return contains;\n  }\n\n  function clip(pointVisible, clipLine, interpolate, start) {\n    return function(rotate, sink) {\n      var line = clipLine(sink),\n          rotatedStart = rotate.invert(start[0], start[1]),\n          ringBuffer = clipBuffer(),\n          ringSink = clipLine(ringBuffer),\n          polygonStarted = false,\n          polygon,\n          segments,\n          ring;\n\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = merge(segments);\n          var startInside = polygonContains(polygon, rotatedStart);\n          if (segments.length) {\n            if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n            clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n          } else if (startInside) {\n            if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n            sink.lineStart();\n            interpolate(null, null, 1, sink);\n            sink.lineEnd();\n          }\n          if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          sink.polygonStart();\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n          sink.polygonEnd();\n        }\n      };\n\n      function point(lambda, phi) {\n        var point = rotate(lambda, phi);\n        if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n      }\n\n      function pointLine(lambda, phi) {\n        var point = rotate(lambda, phi);\n        line.point(point[0], point[1]);\n      }\n\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n\n      function pointRing(lambda, phi) {\n        ring.push([lambda, phi]);\n        var point = rotate(lambda, phi);\n        ringSink.point(point[0], point[1]);\n      }\n\n      function ringStart() {\n        ringSink.lineStart();\n        ring = [];\n      }\n\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringSink.lineEnd();\n\n        var clean = ringSink.clean(),\n            ringSegments = ringBuffer.result(),\n            i, n = ringSegments.length, m,\n            segment,\n            point;\n\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n\n        if (!n) return;\n\n        // No intersections.\n        if (clean & 1) {\n          segment = ringSegments[0];\n          if ((m = segment.length - 1) > 0) {\n            if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n            sink.lineStart();\n            for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n            sink.lineEnd();\n          }\n          return;\n        }\n\n        // Rejoin connected segments.\n        // TODO reuse ringBuffer.rejoin()?\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n        segments.push(ringSegments.filter(validSegment));\n      }\n\n      return clip;\n    };\n  }\n\n  function validSegment(segment) {\n    return segment.length > 1;\n  }\n\n  // Intersections are sorted along the clip edge. For both antimeridian cutting\n  // and circle clipping, the same comparison is used.\n  function compareIntersection(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfPi$3 - epsilon$4 : halfPi$3 - a[1])\n         - ((b = b.x)[0] < 0 ? b[1] - halfPi$3 - epsilon$4 : halfPi$3 - b[1]);\n  }\n\n  var clipAntimeridian = clip(\n    function() { return true; },\n    clipAntimeridianLine,\n    clipAntimeridianInterpolate,\n    [-pi$4, -halfPi$3]\n  );\n\n  // Takes a line and cuts into visible segments. Return values: 0 - there were\n  // intersections or the line was empty; 1 - no intersections; 2 - there were\n  // intersections, and the first and last segments should be rejoined.\n  function clipAntimeridianLine(stream) {\n    var lambda0 = NaN,\n        phi0 = NaN,\n        sign0 = NaN,\n        clean; // no intersections\n\n    return {\n      lineStart: function() {\n        stream.lineStart();\n        clean = 1;\n      },\n      point: function(lambda1, phi1) {\n        var sign1 = lambda1 > 0 ? pi$4 : -pi$4,\n            delta = abs(lambda1 - lambda0);\n        if (abs(delta - pi$4) < epsilon$4) { // line crosses a pole\n          stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$3 : -halfPi$3);\n          stream.point(sign0, phi0);\n          stream.lineEnd();\n          stream.lineStart();\n          stream.point(sign1, phi0);\n          stream.point(lambda1, phi0);\n          clean = 0;\n        } else if (sign0 !== sign1 && delta >= pi$4) { // line crosses antimeridian\n          if (abs(lambda0 - sign0) < epsilon$4) lambda0 -= sign0 * epsilon$4; // handle degeneracies\n          if (abs(lambda1 - sign1) < epsilon$4) lambda1 -= sign1 * epsilon$4;\n          phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n          stream.point(sign0, phi0);\n          stream.lineEnd();\n          stream.lineStart();\n          stream.point(sign1, phi0);\n          clean = 0;\n        }\n        stream.point(lambda0 = lambda1, phi0 = phi1);\n        sign0 = sign1;\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n        lambda0 = phi0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean; // if intersections, rejoin first and last segments\n      }\n    };\n  }\n\n  function clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n    var cosPhi0,\n        cosPhi1,\n        sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n    return abs(sinLambda0Lambda1) > epsilon$4\n        ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n            - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n            / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n        : (phi0 + phi1) / 2;\n  }\n\n  function clipAntimeridianInterpolate(from, to, direction, stream) {\n    var phi;\n    if (from == null) {\n      phi = direction * halfPi$3;\n      stream.point(-pi$4, phi);\n      stream.point(0, phi);\n      stream.point(pi$4, phi);\n      stream.point(pi$4, 0);\n      stream.point(pi$4, -phi);\n      stream.point(0, -phi);\n      stream.point(-pi$4, -phi);\n      stream.point(-pi$4, 0);\n      stream.point(-pi$4, phi);\n    } else if (abs(from[0] - to[0]) > epsilon$4) {\n      var lambda = from[0] < to[0] ? pi$4 : -pi$4;\n      phi = direction * lambda / 2;\n      stream.point(-lambda, phi);\n      stream.point(0, phi);\n      stream.point(lambda, phi);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function clipCircle(radius, delta) {\n    var cr = cos$1(radius),\n        smallRadius = cr > 0,\n        notHemisphere = abs(cr) > epsilon$4; // TODO optimise for this common case\n\n    function interpolate(from, to, direction, stream) {\n      circleStream(stream, radius, delta, direction, from, to);\n    }\n\n    function visible(lambda, phi) {\n      return cos$1(lambda) * cos$1(phi) > cr;\n    }\n\n    // Takes a line and cuts into visible segments. Return values used for polygon\n    // clipping: 0 - there were intersections or the line was empty; 1 - no\n    // intersections 2 - there were intersections, and the first and last segments\n    // should be rejoined.\n    function clipLine(stream) {\n      var point0, // previous point\n          c0, // code for previous point\n          v0, // visibility of previous point\n          v00, // visibility of first point\n          clean; // no intersections\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(lambda, phi) {\n          var point1 = [lambda, phi],\n              point2,\n              v = visible(lambda, phi),\n              c = smallRadius\n                ? v ? 0 : code(lambda, phi)\n                : v ? code(lambda + (lambda < 0 ? pi$4 : -pi$4), phi) : 0;\n          if (!point0 && (v00 = v0 = v)) stream.lineStart();\n          // Handle degeneracies.\n          // TODO ignore if not clipping polygons.\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n              point1[0] += epsilon$4;\n              point1[1] += epsilon$4;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              // outside going in\n              stream.lineStart();\n              point2 = intersect(point1, point0);\n              stream.point(point2[0], point2[1]);\n            } else {\n              // inside going out\n              point2 = intersect(point0, point1);\n              stream.point(point2[0], point2[1]);\n              stream.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            // If the codes for two points are different, or are both zero,\n            // and there this segment intersects with the small circle.\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                stream.lineStart();\n                stream.point(t[0][0], t[0][1]);\n                stream.point(t[1][0], t[1][1]);\n                stream.lineEnd();\n              } else {\n                stream.point(t[1][0], t[1][1]);\n                stream.lineEnd();\n                stream.lineStart();\n                stream.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !pointEqual(point0, point1))) {\n            stream.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) stream.lineEnd();\n          point0 = null;\n        },\n        // Rejoin first and last segments if there were intersections and the first\n        // and last points were visible.\n        clean: function() {\n          return clean | ((v00 && v0) << 1);\n        }\n      };\n    }\n\n    // Intersects the great circle between a and b with the clip circle.\n    function intersect(a, b, two) {\n      var pa = cartesian(a),\n          pb = cartesian(b);\n\n      // We have two planes, n1.p = d1 and n2.p = d2.\n      // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n      var n1 = [1, 0, 0], // normal\n          n2 = cartesianCross(pa, pb),\n          n2n2 = cartesianDot(n2, n2),\n          n1n2 = n2[0], // cartesianDot(n1, n2),\n          determinant = n2n2 - n1n2 * n1n2;\n\n      // Two polar points.\n      if (!determinant) return !two && a;\n\n      var c1 =  cr * n2n2 / determinant,\n          c2 = -cr * n1n2 / determinant,\n          n1xn2 = cartesianCross(n1, n2),\n          A = cartesianScale(n1, c1),\n          B = cartesianScale(n2, c2);\n      cartesianAddInPlace(A, B);\n\n      // Solve |p(t)|^2 = 1.\n      var u = n1xn2,\n          w = cartesianDot(A, u),\n          uu = cartesianDot(u, u),\n          t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n      if (t2 < 0) return;\n\n      var t = sqrt$1(t2),\n          q = cartesianScale(u, (-w - t) / uu);\n      cartesianAddInPlace(q, A);\n      q = spherical(q);\n\n      if (!two) return q;\n\n      // Two intersection points.\n      var lambda0 = a[0],\n          lambda1 = b[0],\n          phi0 = a[1],\n          phi1 = b[1],\n          z;\n\n      if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n      var delta = lambda1 - lambda0,\n          polar = abs(delta - pi$4) < epsilon$4,\n          meridian = polar || delta < epsilon$4;\n\n      if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n      // Check that the first point is between a and b.\n      if (meridian\n          ? polar\n            ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$4 ? phi0 : phi1)\n            : phi0 <= q[1] && q[1] <= phi1\n          : delta > pi$4 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n        var q1 = cartesianScale(u, (-w + t) / uu);\n        cartesianAddInPlace(q1, A);\n        return [q, spherical(q1)];\n      }\n    }\n\n    // Generates a 4-bit vector representing the location of a point relative to\n    // the small circle's bounding box.\n    function code(lambda, phi) {\n      var r = smallRadius ? radius : pi$4 - radius,\n          code = 0;\n      if (lambda < -r) code |= 1; // left\n      else if (lambda > r) code |= 2; // right\n      if (phi < -r) code |= 4; // below\n      else if (phi > r) code |= 8; // above\n      return code;\n    }\n\n    return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$4, radius - pi$4]);\n  }\n\n  function transform$1(prototype) {\n    return {\n      stream: transform$2(prototype)\n    };\n  }\n\n  function transform$2(prototype) {\n    function T() {}\n    var p = T.prototype = Object.create(Transform$1.prototype);\n    for (var k in prototype) p[k] = prototype[k];\n    return function(stream) {\n      var t = new T;\n      t.stream = stream;\n      return t;\n    };\n  }\n\n  function Transform$1() {}\n\n  Transform$1.prototype = {\n    point: function(x, y) { this.stream.point(x, y); },\n    sphere: function() { this.stream.sphere(); },\n    lineStart: function() { this.stream.lineStart(); },\n    lineEnd: function() { this.stream.lineEnd(); },\n    polygonStart: function() { this.stream.polygonStart(); },\n    polygonEnd: function() { this.stream.polygonEnd(); }\n  };\n\n  var maxDepth = 16;\n  var cosMinDistance = cos$1(30 * radians);\n  // cos(minimum angular distance)\n\n  function resample(project, delta2) {\n    return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n  }\n\n  function resampleNone(project) {\n    return transform$2({\n      point: function(x, y) {\n        x = project(x, y);\n        this.stream.point(x[0], x[1]);\n      }\n    });\n  }\n\n  function resample$1(project, delta2) {\n\n    function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0,\n          dy = y1 - y0,\n          d2 = dx * dx + dy * dy;\n      if (d2 > 4 * delta2 && depth--) {\n        var a = a0 + a1,\n            b = b0 + b1,\n            c = c0 + c1,\n            m = sqrt$1(a * a + b * b + c * c),\n            phi2 = asin$1(c /= m),\n            lambda2 = abs(abs(c) - 1) < epsilon$4 || abs(lambda0 - lambda1) < epsilon$4 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n            p = project(lambda2, phi2),\n            x2 = p[0],\n            y2 = p[1],\n            dx2 = x2 - x0,\n            dy2 = y2 - y0,\n            dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > delta2 // perpendicular projected distance\n            || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n            || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n          resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    return function(stream) {\n      var lambda00, x00, y00, a00, b00, c00, // first point\n          lambda0, x0, y0, a0, b0, c0; // previous point\n\n      var resampleStream = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n        polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n      };\n\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n\n      function lineStart() {\n        x0 = NaN;\n        resampleStream.point = linePoint;\n        stream.lineStart();\n      }\n\n      function linePoint(lambda, phi) {\n        var c = cartesian([lambda, phi]), p = project(lambda, phi);\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n\n      function lineEnd() {\n        resampleStream.point = point;\n        stream.lineEnd();\n      }\n\n      function ringStart() {\n        lineStart();\n        resampleStream.point = ringPoint;\n        resampleStream.lineEnd = ringEnd;\n      }\n\n      function ringPoint(lambda, phi) {\n        linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resampleStream.point = linePoint;\n      }\n\n      function ringEnd() {\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n        resampleStream.lineEnd = lineEnd;\n        lineEnd();\n      }\n\n      return resampleStream;\n    };\n  }\n\n  var transformRadians = transform$2({\n    point: function(x, y) {\n      this.stream.point(x * radians, y * radians);\n    }\n  });\n\n  function projection(project) {\n    return projectionMutator(function() { return project; })();\n  }\n\n  function projectionMutator(projectAt) {\n    var project,\n        k = 150, // scale\n        x = 480, y = 250, // translate\n        dx, dy, lambda = 0, phi = 0, // center\n        deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n        theta = null, preclip = clipAntimeridian, // clip angle\n        x0 = null, y0, x1, y1, postclip = identity$7, // clip extent\n        delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n        cache,\n        cacheStream;\n\n    function projection(point) {\n      point = projectRotate(point[0] * radians, point[1] * radians);\n      return [point[0] * k + dx, dy - point[1] * k];\n    }\n\n    function invert(point) {\n      point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n      return point && [point[0] * degrees$1, point[1] * degrees$1];\n    }\n\n    function projectTransform(x, y) {\n      return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n    }\n\n    projection.stream = function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n    };\n\n    projection.clipAngle = function(_) {\n      return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n    };\n\n    projection.clipExtent = function(_) {\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    };\n\n    projection.scale = function(_) {\n      return arguments.length ? (k = +_, recenter()) : k;\n    };\n\n    projection.translate = function(_) {\n      return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n    };\n\n    projection.center = function(_) {\n      return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n    };\n\n    projection.rotate = function(_) {\n      return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n    };\n\n    projection.precision = function(_) {\n      return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt$1(delta2);\n    };\n\n    function recenter() {\n      projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n      var center = project(lambda, phi);\n      dx = x - center[0] * k;\n      dy = y + center[1] * k;\n      return reset();\n    }\n\n    function reset() {\n      cache = cacheStream = null;\n      return projection;\n    }\n\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return recenter();\n    };\n  }\n\n  function conicProjection(projectAt) {\n    var phi0 = 0,\n        phi1 = pi$4 / 3,\n        m = projectionMutator(projectAt),\n        p = m(phi0, phi1);\n\n    p.parallels = function(_) {\n      return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n    };\n\n    return p;\n  }\n\n  function conicEqualAreaRaw(y0, y1) {\n    var sy0 = sin$1(y0),\n        n = (sy0 + sin$1(y1)) / 2,\n        c = 1 + sy0 * (2 * n - sy0),\n        r0 = sqrt$1(c) / n;\n\n    function project(x, y) {\n      var r = sqrt$1(c - 2 * n * sin$1(y)) / n;\n      return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n    }\n\n    project.invert = function(x, y) {\n      var r0y = r0 - y;\n      return [atan2(x, r0y) / n, asin$1((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n    };\n\n    return project;\n  }\n\n  function conicEqualArea() {\n    return conicProjection(conicEqualAreaRaw)\n        .scale(155.424)\n        .center([0, 33.6442]);\n  }\n\n  function albers() {\n    return conicEqualArea()\n        .parallels([29.5, 45.5])\n        .scale(1070)\n        .translate([480, 250])\n        .rotate([96, 0])\n        .center([-0.6, 38.7]);\n  }\n\n  // The projections must have mutually exclusive clip regions on the sphere,\n  // as this will avoid emitting interleaving lines and polygons.\n  function multiplex(streams) {\n    var n = streams.length;\n    return {\n      point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n      sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n      lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n      lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n      polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n      polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n    };\n  }\n\n  // A composite projection for the United States, configured by default for\n  // 960×500. The projection also works quite well at 960×600 if you change the\n  // scale to 1285 and adjust the translate accordingly. The set of standard\n  // parallels for each region comes from USGS, which is published here:\n  // http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n  function albersUsa() {\n    var cache,\n        cacheStream,\n        lower48 = albers(), lower48Point,\n        alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n        hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n        point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      return point = null,\n          (lower48Point.point(x, y), point)\n          || (alaskaPoint.point(x, y), point)\n          || (hawaiiPoint.point(x, y), point);\n    }\n\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(),\n          t = lower48.translate(),\n          x = (coordinates[0] - t[0]) / k,\n          y = (coordinates[1] - t[1]) / k;\n      return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n          : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n          : lower48).invert(coordinates);\n    };\n\n    albersUsa.stream = function(stream) {\n      return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n    };\n\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n      return albersUsa;\n    };\n\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n\n      lower48Point = lower48\n          .translate(_)\n          .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n          .stream(pointStream);\n\n      alaskaPoint = alaska\n          .translate([x - 0.307 * k, y + 0.201 * k])\n          .clipExtent([[x - 0.425 * k + epsilon$4, y + 0.120 * k + epsilon$4], [x - 0.214 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n          .stream(pointStream);\n\n      hawaiiPoint = hawaii\n          .translate([x - 0.205 * k, y + 0.212 * k])\n          .clipExtent([[x - 0.214 * k + epsilon$4, y + 0.166 * k + epsilon$4], [x - 0.115 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n          .stream(pointStream);\n\n      return albersUsa;\n    };\n\n    return albersUsa.scale(1070);\n  }\n\n  function azimuthalRaw(scale) {\n    return function(x, y) {\n      var cx = cos$1(x),\n          cy = cos$1(y),\n          k = scale(cx * cy);\n      return [\n        k * cy * sin$1(x),\n        k * sin$1(y)\n      ];\n    }\n  }\n\n  function azimuthalInvert(angle) {\n    return function(x, y) {\n      var z = sqrt$1(x * x + y * y),\n          c = angle(z),\n          sc = sin$1(c),\n          cc = cos$1(c);\n      return [\n        atan2(x * sc, z * cc),\n        asin$1(z && y * sc / z)\n      ];\n    }\n  }\n\n  var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n    return sqrt$1(2 / (1 + cxcy));\n  });\n\n  azimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n    return 2 * asin$1(z / 2);\n  });\n\n  function azimuthalEqualArea() {\n    return projection(azimuthalEqualAreaRaw)\n        .scale(124.75)\n        .clipAngle(180 - 1e-3);\n  }\n\n  var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n    return (c = acos(c)) && c / sin$1(c);\n  });\n\n  azimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n    return z;\n  });\n\n  function azimuthalEquidistant() {\n    return projection(azimuthalEquidistantRaw)\n        .scale(79.4188)\n        .clipAngle(180 - 1e-3);\n  }\n\n  function mercatorRaw(lambda, phi) {\n    return [lambda, log$1(tan((halfPi$3 + phi) / 2))];\n  }\n\n  mercatorRaw.invert = function(x, y) {\n    return [x, 2 * atan(exp(y)) - halfPi$3];\n  };\n\n  function mercator() {\n    return mercatorProjection(mercatorRaw)\n        .scale(961 / tau$4);\n  }\n\n  function mercatorProjection(project) {\n    var m = projection(project),\n        scale = m.scale,\n        translate = m.translate,\n        clipExtent = m.clipExtent,\n        clipAuto;\n\n    m.scale = function(_) {\n      return arguments.length ? (scale(_), clipAuto && m.clipExtent(null), m) : scale();\n    };\n\n    m.translate = function(_) {\n      return arguments.length ? (translate(_), clipAuto && m.clipExtent(null), m) : translate();\n    };\n\n    m.clipExtent = function(_) {\n      if (!arguments.length) return clipAuto ? null : clipExtent();\n      if (clipAuto = _ == null) {\n        var k = pi$4 * scale(),\n            t = translate();\n        _ = [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]];\n      }\n      clipExtent(_);\n      return m;\n    };\n\n    return m.clipExtent(null);\n  }\n\n  function tany(y) {\n    return tan((halfPi$3 + y) / 2);\n  }\n\n  function conicConformalRaw(y0, y1) {\n    var cy0 = cos$1(y0),\n        n = y0 === y1 ? sin$1(y0) : log$1(cy0 / cos$1(y1)) / log$1(tany(y1) / tany(y0)),\n        f = cy0 * pow$1(tany(y0), n) / n;\n\n    if (!n) return mercatorRaw;\n\n    function project(x, y) {\n      if (f > 0) { if (y < -halfPi$3 + epsilon$4) y = -halfPi$3 + epsilon$4; }\n      else { if (y > halfPi$3 - epsilon$4) y = halfPi$3 - epsilon$4; }\n      var r = f / pow$1(tany(y), n);\n      return [r * sin$1(n * x), f - r * cos$1(n * x)];\n    }\n\n    project.invert = function(x, y) {\n      var fy = f - y, r = sign$1(n) * sqrt$1(x * x + fy * fy);\n      return [atan2(x, fy) / n, 2 * atan(pow$1(f / r, 1 / n)) - halfPi$3];\n    };\n\n    return project;\n  }\n\n  function conicConformal() {\n    return conicProjection(conicConformalRaw)\n        .scale(109.5)\n        .parallels([30, 30]);\n  }\n\n  function equirectangularRaw(lambda, phi) {\n    return [lambda, phi];\n  }\n\n  equirectangularRaw.invert = equirectangularRaw;\n\n  function equirectangular() {\n    return projection(equirectangularRaw)\n        .scale(152.63);\n  }\n\n  function conicEquidistantRaw(y0, y1) {\n    var cy0 = cos$1(y0),\n        n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n        g = cy0 / n + y0;\n\n    if (abs(n) < epsilon$4) return equirectangularRaw;\n\n    function project(x, y) {\n      var gy = g - y, nx = n * x;\n      return [gy * sin$1(nx), g - gy * cos$1(nx)];\n    }\n\n    project.invert = function(x, y) {\n      var gy = g - y;\n      return [atan2(x, gy) / n, g - sign$1(n) * sqrt$1(x * x + gy * gy)];\n    };\n\n    return project;\n  }\n\n  function conicEquidistant() {\n    return conicProjection(conicEquidistantRaw)\n        .scale(131.154)\n        .center([0, 13.9389]);\n  }\n\n  function gnomonicRaw(x, y) {\n    var cy = cos$1(y), k = cos$1(x) * cy;\n    return [cy * sin$1(x) / k, sin$1(y) / k];\n  }\n\n  gnomonicRaw.invert = azimuthalInvert(atan);\n\n  function gnomonic() {\n    return projection(gnomonicRaw)\n        .scale(144.049)\n        .clipAngle(60);\n  }\n\n  function orthographicRaw(x, y) {\n    return [cos$1(y) * sin$1(x), sin$1(y)];\n  }\n\n  orthographicRaw.invert = azimuthalInvert(asin$1);\n\n  function orthographic() {\n    return projection(orthographicRaw)\n        .scale(249.5)\n        .clipAngle(90 + epsilon$4);\n  }\n\n  function stereographicRaw(x, y) {\n    var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n    return [cy * sin$1(x) / k, sin$1(y) / k];\n  }\n\n  stereographicRaw.invert = azimuthalInvert(function(z) {\n    return 2 + atan(z);\n  });\n\n  function stereographic() {\n    return projection(stereographicRaw)\n        .scale(250)\n        .clipAngle(142);\n  }\n\n  function transverseMercatorRaw(lambda, phi) {\n    return [log$1(tan((halfPi$3 + phi) / 2)), -lambda];\n  }\n\n  transverseMercatorRaw.invert = function(x, y) {\n    return [-y, 2 * atan(exp(x)) - halfPi$3];\n  };\n\n  function transverseMercator() {\n    var m = mercatorProjection(transverseMercatorRaw),\n        center = m.center,\n        rotate = m.rotate;\n\n    m.center = function(_) {\n      return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n    };\n\n    m.rotate = function(_) {\n      return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n    };\n\n    return rotate([0, 0, 90])\n        .scale(159.155);\n  }\n\n  exports.version = version;\n  exports.bisect = bisectRight;\n  exports.bisectRight = bisectRight;\n  exports.bisectLeft = bisectLeft;\n  exports.ascending = ascending;\n  exports.bisector = bisector;\n  exports.descending = descending;\n  exports.deviation = deviation;\n  exports.extent = extent;\n  exports.histogram = histogram;\n  exports.thresholdFreedmanDiaconis = freedmanDiaconis;\n  exports.thresholdScott = scott;\n  exports.thresholdSturges = sturges;\n  exports.max = max;\n  exports.mean = mean;\n  exports.median = median;\n  exports.merge = merge;\n  exports.min = min;\n  exports.pairs = pairs;\n  exports.permute = permute;\n  exports.quantile = threshold;\n  exports.range = range;\n  exports.scan = scan;\n  exports.shuffle = shuffle;\n  exports.sum = sum;\n  exports.ticks = ticks;\n  exports.tickStep = tickStep;\n  exports.transpose = transpose;\n  exports.variance = variance;\n  exports.zip = zip;\n  exports.entries = entries;\n  exports.keys = keys;\n  exports.values = values;\n  exports.map = map$1;\n  exports.set = set;\n  exports.nest = nest;\n  exports.randomUniform = uniform;\n  exports.randomNormal = normal;\n  exports.randomLogNormal = logNormal;\n  exports.randomBates = bates;\n  exports.randomIrwinHall = irwinHall;\n  exports.randomExponential = exponential;\n  exports.easeLinear = linear;\n  exports.easeQuad = quadInOut;\n  exports.easeQuadIn = quadIn;\n  exports.easeQuadOut = quadOut;\n  exports.easeQuadInOut = quadInOut;\n  exports.easeCubic = easeCubicInOut;\n  exports.easeCubicIn = cubicIn;\n  exports.easeCubicOut = cubicOut;\n  exports.easeCubicInOut = easeCubicInOut;\n  exports.easePoly = polyInOut;\n  exports.easePolyIn = polyIn;\n  exports.easePolyOut = polyOut;\n  exports.easePolyInOut = polyInOut;\n  exports.easeSin = sinInOut;\n  exports.easeSinIn = sinIn;\n  exports.easeSinOut = sinOut;\n  exports.easeSinInOut = sinInOut;\n  exports.easeExp = expInOut;\n  exports.easeExpIn = expIn;\n  exports.easeExpOut = expOut;\n  exports.easeExpInOut = expInOut;\n  exports.easeCircle = circleInOut;\n  exports.easeCircleIn = circleIn;\n  exports.easeCircleOut = circleOut;\n  exports.easeCircleInOut = circleInOut;\n  exports.easeBounce = bounceOut;\n  exports.easeBounceIn = bounceIn;\n  exports.easeBounceOut = bounceOut;\n  exports.easeBounceInOut = bounceInOut;\n  exports.easeBack = backInOut;\n  exports.easeBackIn = backIn;\n  exports.easeBackOut = backOut;\n  exports.easeBackInOut = backInOut;\n  exports.easeElastic = elasticOut;\n  exports.easeElasticIn = elasticIn;\n  exports.easeElasticOut = elasticOut;\n  exports.easeElasticInOut = elasticInOut;\n  exports.polygonArea = area;\n  exports.polygonCentroid = centroid;\n  exports.polygonHull = hull;\n  exports.polygonContains = contains;\n  exports.polygonLength = length$1;\n  exports.path = path;\n  exports.quadtree = quadtree;\n  exports.queue = queue;\n  exports.arc = arc;\n  exports.area = area$1;\n  exports.line = line;\n  exports.pie = pie;\n  exports.radialArea = radialArea;\n  exports.radialLine = radialLine$1;\n  exports.symbol = symbol;\n  exports.symbols = symbols;\n  exports.symbolCircle = circle;\n  exports.symbolCross = cross$1;\n  exports.symbolDiamond = diamond;\n  exports.symbolSquare = square;\n  exports.symbolStar = star;\n  exports.symbolTriangle = triangle;\n  exports.symbolWye = wye;\n  exports.curveBasisClosed = basisClosed;\n  exports.curveBasisOpen = basisOpen;\n  exports.curveBasis = basis;\n  exports.curveBundle = bundle;\n  exports.curveCardinalClosed = cardinalClosed;\n  exports.curveCardinalOpen = cardinalOpen;\n  exports.curveCardinal = cardinal;\n  exports.curveCatmullRomClosed = catmullRomClosed;\n  exports.curveCatmullRomOpen = catmullRomOpen;\n  exports.curveCatmullRom = catmullRom;\n  exports.curveLinearClosed = linearClosed;\n  exports.curveLinear = curveLinear;\n  exports.curveMonotoneX = monotoneX;\n  exports.curveMonotoneY = monotoneY;\n  exports.curveNatural = natural;\n  exports.curveStep = step;\n  exports.curveStepAfter = stepAfter;\n  exports.curveStepBefore = stepBefore;\n  exports.stack = stack;\n  exports.stackOffsetExpand = expand;\n  exports.stackOffsetNone = none;\n  exports.stackOffsetSilhouette = silhouette;\n  exports.stackOffsetWiggle = wiggle;\n  exports.stackOrderAscending = ascending$1;\n  exports.stackOrderDescending = descending$2;\n  exports.stackOrderInsideOut = insideOut;\n  exports.stackOrderNone = none$1;\n  exports.stackOrderReverse = reverse;\n  exports.color = color;\n  exports.rgb = colorRgb;\n  exports.hsl = colorHsl;\n  exports.lab = lab;\n  exports.hcl = colorHcl;\n  exports.cubehelix = cubehelix;\n  exports.interpolate = interpolate;\n  exports.interpolateArray = array$1;\n  exports.interpolateDate = date;\n  exports.interpolateNumber = interpolateNumber;\n  exports.interpolateObject = object;\n  exports.interpolateRound = interpolateRound;\n  exports.interpolateString = interpolateString;\n  exports.interpolateTransformCss = interpolateTransform$1;\n  exports.interpolateTransformSvg = interpolateTransform$2;\n  exports.interpolateZoom = interpolateZoom;\n  exports.interpolateRgb = interpolateRgb;\n  exports.interpolateRgbBasis = rgbBasis;\n  exports.interpolateRgbBasisClosed = rgbBasisClosed;\n  exports.interpolateHsl = hsl$1;\n  exports.interpolateHslLong = hslLong;\n  exports.interpolateLab = lab$1;\n  exports.interpolateHcl = hcl$1;\n  exports.interpolateHclLong = hclLong;\n  exports.interpolateCubehelix = cubehelix$2;\n  exports.interpolateCubehelixLong = interpolateCubehelixLong;\n  exports.interpolateBasis = basis$2;\n  exports.interpolateBasisClosed = basisClosed$1;\n  exports.quantize = quantize;\n  exports.dispatch = dispatch;\n  exports.dsvFormat = dsv;\n  exports.csvParse = csvParse;\n  exports.csvParseRows = csvParseRows;\n  exports.csvFormat = csvFormat;\n  exports.csvFormatRows = csvFormatRows;\n  exports.tsvParse = tsvParse;\n  exports.tsvParseRows = tsvParseRows;\n  exports.tsvFormat = tsvFormat;\n  exports.tsvFormatRows = tsvFormatRows;\n  exports.request = request;\n  exports.html = html;\n  exports.json = json;\n  exports.text = text;\n  exports.xml = xml;\n  exports.csv = csv$1;\n  exports.tsv = tsv$1;\n  exports.now = now;\n  exports.timer = timer;\n  exports.timerFlush = timerFlush;\n  exports.timeout = timeout$1;\n  exports.interval = interval$1;\n  exports.timeInterval = newInterval;\n  exports.timeMillisecond = millisecond;\n  exports.timeMilliseconds = milliseconds;\n  exports.timeSecond = second;\n  exports.timeSeconds = seconds;\n  exports.timeMinute = minute;\n  exports.timeMinutes = minutes;\n  exports.timeHour = hour;\n  exports.timeHours = hours;\n  exports.timeDay = day;\n  exports.timeDays = days;\n  exports.timeWeek = timeWeek;\n  exports.timeWeeks = sundays;\n  exports.timeSunday = timeWeek;\n  exports.timeSundays = sundays;\n  exports.timeMonday = timeMonday;\n  exports.timeMondays = mondays;\n  exports.timeTuesday = tuesday;\n  exports.timeTuesdays = tuesdays;\n  exports.timeWednesday = wednesday;\n  exports.timeWednesdays = wednesdays;\n  exports.timeThursday = thursday;\n  exports.timeThursdays = thursdays;\n  exports.timeFriday = friday;\n  exports.timeFridays = fridays;\n  exports.timeSaturday = saturday;\n  exports.timeSaturdays = saturdays;\n  exports.timeMonth = month;\n  exports.timeMonths = months;\n  exports.timeYear = year;\n  exports.timeYears = years;\n  exports.utcMillisecond = millisecond;\n  exports.utcMilliseconds = milliseconds;\n  exports.utcSecond = second;\n  exports.utcSeconds = seconds;\n  exports.utcMinute = utcMinute;\n  exports.utcMinutes = utcMinutes;\n  exports.utcHour = utcHour;\n  exports.utcHours = utcHours;\n  exports.utcDay = utcDay;\n  exports.utcDays = utcDays;\n  exports.utcWeek = utcWeek;\n  exports.utcWeeks = utcSundays;\n  exports.utcSunday = utcWeek;\n  exports.utcSundays = utcSundays;\n  exports.utcMonday = utcMonday;\n  exports.utcMondays = utcMondays;\n  exports.utcTuesday = utcTuesday;\n  exports.utcTuesdays = utcTuesdays;\n  exports.utcWednesday = utcWednesday;\n  exports.utcWednesdays = utcWednesdays;\n  exports.utcThursday = utcThursday;\n  exports.utcThursdays = utcThursdays;\n  exports.utcFriday = utcFriday;\n  exports.utcFridays = utcFridays;\n  exports.utcSaturday = utcSaturday;\n  exports.utcSaturdays = utcSaturdays;\n  exports.utcMonth = utcMonth;\n  exports.utcMonths = utcMonths;\n  exports.utcYear = utcYear;\n  exports.utcYears = utcYears;\n  exports.formatLocale = formatLocale;\n  exports.formatDefaultLocale = defaultLocale;\n  exports.formatSpecifier = formatSpecifier;\n  exports.precisionFixed = precisionFixed;\n  exports.precisionPrefix = precisionPrefix;\n  exports.precisionRound = precisionRound;\n  exports.isoFormat = formatIso;\n  exports.isoParse = parseIso;\n  exports.timeFormatLocale = formatLocale$1;\n  exports.timeFormatDefaultLocale = defaultLocale$1;\n  exports.scaleBand = band;\n  exports.scalePoint = point$4;\n  exports.scaleIdentity = identity$4;\n  exports.scaleLinear = linear$2;\n  exports.scaleLog = log;\n  exports.scaleOrdinal = ordinal;\n  exports.scaleImplicit = implicit;\n  exports.scalePow = pow;\n  exports.scaleSqrt = sqrt;\n  exports.scaleQuantile = quantile;\n  exports.scaleQuantize = quantize$1;\n  exports.scaleThreshold = threshold$1;\n  exports.scaleTime = time;\n  exports.scaleUtc = utcTime;\n  exports.schemeCategory10 = category10;\n  exports.schemeCategory20b = category20b;\n  exports.schemeCategory20c = category20c;\n  exports.schemeCategory20 = category20;\n  exports.scaleSequential = sequential;\n  exports.interpolateCubehelixDefault = cubehelix$3;\n  exports.interpolateRainbow = rainbow$1;\n  exports.interpolateWarm = warm;\n  exports.interpolateCool = cool;\n  exports.interpolateViridis = viridis;\n  exports.interpolateMagma = magma;\n  exports.interpolateInferno = inferno;\n  exports.interpolatePlasma = plasma;\n  exports.creator = creator;\n  exports.customEvent = customEvent;\n  exports.local = local;\n  exports.matcher = matcher$1;\n  exports.mouse = mouse;\n  exports.namespace = namespace;\n  exports.namespaces = namespaces;\n  exports.select = select;\n  exports.selectAll = selectAll;\n  exports.selection = selection;\n  exports.selector = selector;\n  exports.selectorAll = selectorAll;\n  exports.touch = touch;\n  exports.touches = touches;\n  exports.window = window;\n  exports.active = active;\n  exports.interrupt = interrupt;\n  exports.transition = transition;\n  exports.axisTop = axisTop;\n  exports.axisRight = axisRight;\n  exports.axisBottom = axisBottom;\n  exports.axisLeft = axisLeft;\n  exports.cluster = cluster;\n  exports.hierarchy = hierarchy;\n  exports.pack = index;\n  exports.packSiblings = siblings;\n  exports.packEnclose = enclose;\n  exports.partition = partition;\n  exports.stratify = stratify;\n  exports.tree = tree;\n  exports.treemap = index$1;\n  exports.treemapBinary = binary;\n  exports.treemapDice = treemapDice;\n  exports.treemapSlice = treemapSlice;\n  exports.treemapSliceDice = sliceDice;\n  exports.treemapSquarify = squarify;\n  exports.treemapResquarify = resquarify;\n  exports.forceCenter = center$1;\n  exports.forceCollide = collide;\n  exports.forceLink = link;\n  exports.forceManyBody = manyBody;\n  exports.forceSimulation = simulation;\n  exports.forceX = x$3;\n  exports.forceY = y$3;\n  exports.drag = drag;\n  exports.dragDisable = dragDisable;\n  exports.dragEnable = dragEnable;\n  exports.voronoi = voronoi;\n  exports.zoom = zoom;\n  exports.zoomIdentity = identity$6;\n  exports.zoomTransform = transform;\n  exports.brush = brush;\n  exports.brushX = brushX;\n  exports.brushY = brushY;\n  exports.brushSelection = brushSelection;\n  exports.chord = chord;\n  exports.ribbon = ribbon;\n  exports.geoAlbers = albers;\n  exports.geoAlbersUsa = albersUsa;\n  exports.geoArea = area$2;\n  exports.geoAzimuthalEqualArea = azimuthalEqualArea;\n  exports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\n  exports.geoAzimuthalEquidistant = azimuthalEquidistant;\n  exports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\n  exports.geoBounds = bounds;\n  exports.geoCentroid = centroid$1;\n  exports.geoCircle = circle$1;\n  exports.geoClipExtent = extent$1;\n  exports.geoConicConformal = conicConformal;\n  exports.geoConicConformalRaw = conicConformalRaw;\n  exports.geoConicEqualArea = conicEqualArea;\n  exports.geoConicEqualAreaRaw = conicEqualAreaRaw;\n  exports.geoConicEquidistant = conicEquidistant;\n  exports.geoConicEquidistantRaw = conicEquidistantRaw;\n  exports.geoDistance = distance;\n  exports.geoEquirectangular = equirectangular;\n  exports.geoEquirectangularRaw = equirectangularRaw;\n  exports.geoGnomonic = gnomonic;\n  exports.geoGnomonicRaw = gnomonicRaw;\n  exports.geoGraticule = graticule;\n  exports.geoInterpolate = interpolate$2;\n  exports.geoLength = length$2;\n  exports.geoMercator = mercator;\n  exports.geoMercatorRaw = mercatorRaw;\n  exports.geoOrthographic = orthographic;\n  exports.geoOrthographicRaw = orthographicRaw;\n  exports.geoPath = index$3;\n  exports.geoProjection = projection;\n  exports.geoProjectionMutator = projectionMutator;\n  exports.geoRotation = rotation;\n  exports.geoStereographic = stereographic;\n  exports.geoStereographicRaw = stereographicRaw;\n  exports.geoStream = stream;\n  exports.geoTransform = transform$1;\n  exports.geoTransverseMercator = transverseMercator;\n  exports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Ploidy; });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Ploidy = function () {\n  function Ploidy(config) {\n    _classCallCheck(this, Ploidy);\n\n    this._config = config;\n    this._description = this._normalize(this._config.ploidyDesc);\n  }\n\n  // Get number of chromosomes in a chromosome set\n\n\n  _createClass(Ploidy, [{\n    key: 'getChromosomesNumber',\n    value: function getChromosomesNumber(setNumber) {\n      if (this._config.ploidyDesc) {\n        var chrSetCode = this._config.ploidyDesc[setNumber];\n        if (chrSetCode instanceof Object) {\n          return Object.keys(chrSetCode)[0].length;\n        } else {\n          return chrSetCode.length;\n        }\n      } else {\n        return this._config.ploidy || 1;\n      }\n    }\n\n    // Normalize use defined description\n\n  }, {\n    key: '_normalize',\n    value: function _normalize(description) {\n      var normalized, key, descValue;\n\n      // Return the same if no description provided\n      if (!description) {\n        return description;\n      }\n\n      // Array of normalized description objects\n      normalized = [];\n\n      // Loop through description and normalize\n      for (key in description) {\n        descValue = description[key];\n        if (typeof descValue === 'string') {\n          if (this._config.orientation === 'vertical') {\n            descValue = descValue.split('').reverse();\n          }\n          normalized.push({\n            ancestors: descValue,\n            existence: this._getexistenceArray(descValue.length)\n          });\n        } else {\n          normalized.push({\n            ancestors: Object.keys(descValue)[0],\n            existence: descValue[Object.keys(descValue)[0]]\n          });\n        }\n      }\n\n      return normalized;\n    }\n\n    // Get array filled by '11' elements\n\n  }, {\n    key: '_getexistenceArray',\n    value: function _getexistenceArray(length) {\n      var array = [];\n\n      for (var i = 0; i < length; i++) {\n        array.push('11');\n      }\n\n      return array;\n    }\n  }, {\n    key: 'getSetSize',\n    value: function getSetSize(chrSetNumber) {\n      if (this._description) {\n        return this._description[chrSetNumber].ancestors.length;\n      } else {\n        return 1;\n      }\n    }\n\n    // Get ancestor letter\n\n  }, {\n    key: 'getAncestor',\n    value: function getAncestor(chrSetNumber, chrNumber) {\n      if (this._description) {\n        return this._description[chrSetNumber].ancestors[chrNumber];\n      } else {\n        return '';\n      }\n    }\n\n    // Check if chromosome's arm should be rendered.\n    // If no description was provided, method returns true and\n    // something another depending on user provided description.\n\n  }, {\n    key: 'exists',\n    value: function exists(chrSetNumber, chrNumber, armNumber) {\n      if (this._description) {\n        var desc = this._description[chrSetNumber].existence[chrNumber][armNumber];\n        return Number(desc) > 0;\n      } else {\n        return true;\n      }\n    }\n  }]);\n\n  return Ploidy;\n}();\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__core__ = __webpack_require__(3);\n\n\n// Enable references to Ideogram when loaded via traditional script tag\nwindow.Ideogram = __WEBPACK_IMPORTED_MODULE_0__core__[\"a\" /* default */];\n\n// Enable references to Ideogram when imported as an ES6 module\n/* harmony default export */ __webpack_exports__[\"default\"] = (__WEBPACK_IMPORTED_MODULE_0__core__[\"a\" /* default */]);\n\n/***/ }),\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_d3__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_d3_promise__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_d3_promise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_d3_promise__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_es6_promise__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_es6_promise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_es6_promise__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__ploidy__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__layouts_layout__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__model_adapter__ = __webpack_require__(15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__views_chromosome__ = __webpack_require__(16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__parsers_bed_parser__ = __webpack_require__(19);\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// Developed by Eric Weitz (https://github.com/eweitz)\n\n\n\n\n\n\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_0_d3__[\"promise\"] = __WEBPACK_IMPORTED_MODULE_1_d3_promise__;\n\nvar Ideogram = function () {\n  function Ideogram(config) {\n    _classCallCheck(this, Ideogram);\n\n    var orientation, chrWidth, chrHeight, container, rect;\n\n    // Clone the config object, to allow multiple instantiations\n    // without picking up prior ideogram's settings\n    this.config = JSON.parse(JSON.stringify(config));\n\n    // TODO: Document this\n    this._bandsXOffset = 30;\n\n    this.debug = false;\n\n    if (!this.config.dataDir) {\n      this.config.dataDir = '../data/bands/native/';\n    }\n\n    if (!this.config.ploidy) {\n      this.config.ploidy = 1;\n    }\n\n    if (this.config.ploidy > 1) {\n      this.sexChromosomes = {};\n      if (!this.config.sex) {\n        // Default to 'male' per human, mouse reference genomes.\n        // TODO: The default sex value should probably be the heterogametic sex,\n        // i.e. whichever sex has allosomes that differ in morphology.\n        // In mammals and most insects that is the male.\n        // However, in birds and reptiles, that is female.\n        this.config.sex = 'male';\n      }\n      if (this.config.ploidy === 2 && !this.config.ancestors) {\n        this.config.ancestors = { M: '#ffb6c1', P: '#add8e6' };\n        this.config.ploidyDesc = 'MP';\n      }\n    }\n\n    if (!this.config.container) {\n      this.config.container = 'body';\n    }\n\n    this.selector = this.config.container + ' #_ideogram';\n\n    if (!this.config.resolution) {\n      this.config.resolution = 850;\n    }\n\n    if ('showChromosomeLabels' in this.config === false) {\n      this.config.showChromosomeLabels = true;\n    }\n\n    if (!this.config.orientation) {\n      orientation = 'vertical';\n      this.config.orientation = orientation;\n    }\n\n    if (!this.config.chrHeight) {\n      container = this.config.container;\n      rect = document.querySelector(container).getBoundingClientRect();\n\n      if (orientation === 'vertical') {\n        chrHeight = rect.height;\n      } else {\n        chrHeight = rect.width;\n      }\n\n      if (container === 'body') {\n        chrHeight = 400;\n      }\n      this.config.chrHeight = chrHeight;\n    }\n\n    if (!this.config.chrWidth) {\n      chrWidth = 10;\n      chrHeight = this.config.chrHeight;\n\n      if (chrHeight < 900 && chrHeight > 500) {\n        chrWidth = Math.round(chrHeight / 40);\n      } else if (chrHeight >= 900) {\n        chrWidth = Math.round(chrHeight / 45);\n      }\n      this.config.chrWidth = chrWidth;\n    }\n\n    if (!this.config.chrMargin) {\n      if (this.config.ploidy === 1) {\n        this.config.chrMargin = 10;\n      } else {\n        // Defaults polyploid chromosomes to relatively small interchromatid gap\n        this.config.chrMargin = Math.round(this.config.chrWidth / 4);\n      }\n    }\n\n    if (!this.config.showBandLabels) {\n      this.config.showBandLabels = false;\n    }\n\n    if ('showFullyBanded' in this.config) {\n      this.config.showFullyBanded = this.config.showFullyBanded;\n    } else {\n      this.config.showFullyBanded = true;\n    }\n\n    if (!this.config.brush) {\n      this.config.brush = false;\n    }\n\n    if (!this.config.rows) {\n      this.config.rows = 1;\n    }\n\n    this.bump = Math.round(this.config.chrHeight / 125);\n    this.adjustedBump = false;\n    if (this.config.chrHeight < 200) {\n      this.adjustedBump = true;\n      this.bump = 4;\n    }\n\n    if (config.showBandLabels) {\n      this.config.chrMargin += 20;\n    }\n\n    if (config.chromosome) {\n      this.config.chromosomes = [config.chromosome];\n      if ('showBandLabels' in config === false) {\n        this.config.showBandLabels = true;\n      }\n      if ('rotatable' in config === false) {\n        this.config.rotatable = false;\n      }\n    }\n\n    if (!this.config.showNonNuclearChromosomes) {\n      this.config.showNonNuclearChromosomes = false;\n    }\n\n    this.initAnnotSettings();\n\n    this.config.chrMargin = this.config.chrMargin + this.config.chrWidth + this.config.annotTracksHeight * 2;\n\n    if (config.onLoad) {\n      this.onLoadCallback = config.onLoad;\n    }\n\n    if (config.onDrawAnnots) {\n      this.onDrawAnnotsCallback = config.onDrawAnnots;\n    }\n\n    if (config.onBrushMove) {\n      this.onBrushMoveCallback = config.onBrushMove;\n    }\n\n    this.coordinateSystem = 'iscn';\n\n    this.maxLength = {\n      bp: 0,\n      iscn: 0\n    };\n\n    // The E-Utilies In Depth: Parameters, Syntax and More:\n    // https://www.ncbi.nlm.nih.gov/books/NBK25499/\n    this.eutils = 'https://eutils.ncbi.nlm.nih.gov/entrez/eutils/';\n    this.esearch = this.eutils + 'esearch.fcgi?retmode=json';\n    this.esummary = this.eutils + 'esummary.fcgi?retmode=json';\n    this.elink = this.eutils + 'elink.fcgi?retmode=json';\n\n    this.organisms = {\n      9606: {\n        commonName: 'Human',\n        scientificName: 'Homo sapiens',\n        scientificNameAbbr: 'H. sapiens',\n        assemblies: {\n          default: 'GCF_000001405.26', // GRCh38\n          GRCh38: 'GCF_000001405.26',\n          GRCh37: 'GCF_000001405.13'\n        }\n      },\n      10090: {\n        commonName: 'Mouse',\n        scientificName: 'Mus musculus',\n        scientificNameAbbr: 'M. musculus',\n        assemblies: {\n          default: 'GCF_000001635.20'\n        }\n      },\n      4641: {\n        commonName: 'banana',\n        scientificName: 'Musa acuminata',\n        scientificNameAbbr: 'M. acuminata',\n        assemblies: {\n          default: 'mock'\n        }\n      }\n    };\n\n    // A flat array of chromosomes\n    // (this.chromosomes is an object of\n    // arrays of chromosomes, keyed by organism)\n    this.chromosomesArray = [];\n\n    this.bandsToShow = [];\n\n    this.chromosomes = {};\n    this.numChromosomes = 0;\n    this.bandData = {};\n\n    this.init();\n  }\n\n  /**\n  * Enable use of D3 in client apps, via \"d3 = Ideogram.d3\"\n  */\n\n\n  _createClass(Ideogram, [{\n    key: 'getBands',\n\n\n    /**\n    * Gets chromosome band data from a\n    * TSV file, or, if band data is prefetched, from an array\n    *\n    * UCSC: #chrom chromStart  chromEnd  name  gieStain\n    * http://genome.ucsc.edu/cgi-bin/hgTables\n    *  - group: Mapping and Sequencing\n    *  - track: Chromosome Band (Ideogram)\n    *\n    * NCBI: #chromosome  arm band  iscn_start  iscn_stop bp_start  bp_stop stain density\n    * ftp://ftp.ncbi.nlm.nih.gov/pub/gdp/ideogram_9606_GCF_000001305.14_550_V1\n    */\n    value: function getBands(content, taxid, chromosomes) {\n      var lines = {},\n          delimiter,\n          tsvLines,\n          columns,\n          line,\n          stain,\n          chr,\n          i,\n          init,\n          tsvLinesLength,\n          source,\n          start,\n          stop,\n          firstColumn,\n          tmp;\n\n      if (content.slice(0, 8) === 'chrBands') {\n        source = 'native';\n      }\n\n      if (chromosomes instanceof Array && _typeof(chromosomes[0]) === 'object') {\n        tmp = [];\n        for (i = 0; i < chromosomes.length; i++) {\n          tmp.push(chromosomes[i].name);\n        }\n        chromosomes = tmp;\n      }\n\n      if (typeof chrBands === 'undefined' && source !== 'native') {\n        delimiter = /\\t/;\n        tsvLines = content.split(/\\r\\n|\\n/);\n        init = 1;\n      } else {\n        delimiter = / /;\n        if (source === 'native') {\n          tsvLines = eval(content);\n        } else {\n          tsvLines = content;\n        }\n        init = 0;\n      }\n\n      firstColumn = tsvLines[0].split(delimiter)[0];\n      if (firstColumn === '#chromosome') {\n        source = 'ncbi';\n      } else if (firstColumn === '#chrom') {\n        source = 'ucsc';\n      } else {\n        source = 'native';\n      }\n\n      tsvLinesLength = tsvLines.length;\n\n      if (source === 'ncbi' || source === 'native') {\n        for (i = init; i < tsvLinesLength; i++) {\n          columns = tsvLines[i].split(delimiter);\n\n          chr = columns[0];\n\n          if (\n          // If a specific set of chromosomes has been requested, and\n          // the current chromosome\n          typeof chromosomes !== 'undefined' && chromosomes.indexOf(chr) === -1) {\n            continue;\n          }\n\n          if (chr in lines === false) {\n            lines[chr] = [];\n          }\n\n          stain = columns[7];\n          if (columns[8]) {\n            // For e.g. acen and gvar, columns[8] (density) is undefined\n            stain += columns[8];\n          }\n\n          line = {\n            chr: chr,\n            bp: {\n              start: parseInt(columns[5], 10),\n              stop: parseInt(columns[6], 10)\n            },\n            iscn: {\n              start: parseInt(columns[3], 10),\n              stop: parseInt(columns[4], 10)\n            },\n            px: {\n              start: -1,\n              stop: -1,\n              width: -1\n            },\n            name: columns[1] + columns[2],\n            stain: stain,\n            taxid: taxid\n          };\n\n          lines[chr].push(line);\n        }\n      } else if (source === 'ucsc') {\n        for (i = init; i < tsvLinesLength; i++) {\n          // #chrom chromStart  chromEnd  name  gieStain\n          // e.g. for fly:\n          // chr4\t69508\t108296\t102A1\tn/a\n          columns = tsvLines[i].split(delimiter);\n\n          if (columns[0] !== 'chr' + chromosomeName) {\n            continue;\n          }\n\n          stain = columns[4];\n          if (stain === 'n/a') {\n            stain = 'gpos100';\n          }\n          start = parseInt(columns[1], 10);\n          stop = parseInt(columns[2], 10);\n\n          line = {\n            chr: columns[0].split('chr')[1],\n            bp: {\n              start: start,\n              stop: stop\n            },\n            iscn: {\n              start: start,\n              stop: stop\n            },\n            px: {\n              start: -1,\n              stop: -1,\n              width: -1\n            },\n            name: columns[3],\n            stain: stain,\n            taxid: taxid\n          };\n\n          lines[chr].push(line);\n        }\n      }\n\n      return lines;\n    }\n\n    /**\n    * Generates a model object for each chromosome\n    * containing information on its name, DOM ID,\n    * length in base pairs or ISCN coordinates,\n    * cytogenetic bands, centromere position, etc.\n    */\n\n  }, {\n    key: 'getChromosomeModel',\n    value: function getChromosomeModel(bands, chromosome, taxid, chrIndex) {\n      var chr = {},\n          band,\n          width,\n          pxStop,\n          chrHeight = this.config.chrHeight,\n          maxLength = this.maxLength,\n          chrLength,\n          cs,\n          hasBands;\n\n      cs = this.coordinateSystem;\n      hasBands = typeof bands !== 'undefined';\n\n      if (hasBands) {\n        chr.name = chromosome;\n        chr.length = bands[bands.length - 1][cs].stop;\n        chr.type = 'nuclear';\n      } else {\n        chr = chromosome;\n      }\n\n      chr.chrIndex = chrIndex;\n\n      chr.id = 'chr' + chr.name + '-' + taxid;\n\n      if (this.config.fullChromosomeLabels === true) {\n        var orgName = this.organisms[taxid].scientificNameAbbr;\n        chr.name = orgName + ' chr' + chr.name;\n      }\n\n      chrLength = chr.length;\n\n      pxStop = 0;\n\n      if (hasBands) {\n        for (var i = 0; i < bands.length; i++) {\n          band = bands[i];\n          var csLength = band[cs].stop - band[cs].start;\n          width = chrHeight * chr.length / maxLength[cs] * csLength / chrLength;\n\n          bands[i].px = { start: pxStop, stop: pxStop + width, width: width };\n\n          pxStop = bands[i].px.stop;\n\n          if (hasBands && band.stain === 'acen' && band.name[0] === 'p') {\n            chr.pcenIndex = i;\n          }\n        }\n      } else {\n        pxStop = chrHeight * chr.length / maxLength[cs];\n      }\n\n      chr.width = pxStop;\n\n      chr.scale = {};\n\n      // TODO:\n      //\n      // A chromosome-level scale property is likely\n      // nonsensical for any chromosomes that have cytogenetic band data.\n      // Different bands tend to have ratios between number of base pairs\n      // and physical length.\n      //\n      // However, a chromosome-level scale property is likely\n      // necessary for chromosomes that do not have band data.\n      //\n      // This needs further review.\n      if (this.config.multiorganism === true) {\n        chr.scale.bp = 1;\n        // chr.scale.bp = band.iscn.stop / band.bp.stop;\n        chr.scale.iscn = chrHeight * chrLength / maxLength.bp;\n      } else {\n        chr.scale.bp = chrHeight / maxLength.bp;\n        if (hasBands) {\n          chr.scale.iscn = chrHeight / maxLength.iscn;\n        }\n      }\n      chr.bands = bands;\n\n      chr.centromerePosition = '';\n      if (hasBands && bands[0].name[0] === 'p' && bands[1].name[0] === 'q' && bands[0].bp.stop - bands[0].bp.start < 2E6) {\n        // As with almost all mouse chromosome, chimpanzee chr22\n        chr.centromerePosition = 'telocentric';\n\n        // Remove placeholder pter band\n        chr.bands = chr.bands.slice(1);\n      }\n\n      if (hasBands && chr.bands.length === 1) {\n        // Encountered when processing an assembly that has chromosomes with\n        // centromere data, but this chromosome does not.\n        // Example: chromosome F1 in Felis catus.\n        delete chr.bands;\n      }\n\n      return chr;\n    }\n\n    /**\n    * Draws labels for each chromosome, e.g. \"1\", \"2\", \"X\".\n    * If ideogram configuration has 'fullChromosomeLabels: True',\n    * then labels includes name of taxon, which can help when\n    * depicting orthologs.\n    */\n\n  }, {\n    key: 'drawChromosomeLabels',\n    value: function drawChromosomeLabels() {\n      var ideo = this;\n\n      var chromosomeLabelClass = ideo._layout.getChromosomeLabelClass();\n\n      var chrSetLabelXPosition = ideo._layout.getChromosomeSetLabelXPosition();\n      var chrSetLabelTranslate = ideo._layout.getChromosomeSetLabelTranslate();\n\n      // Append chromosomes set's labels\n      __WEBPACK_IMPORTED_MODULE_0_d3__[\"selectAll\"](ideo.selector + ' .chromosome-set-container').append('text').data(ideo.chromosomesArray).attr('class', 'chromosome-set-label ' + chromosomeLabelClass).attr('transform', chrSetLabelTranslate).attr('x', chrSetLabelXPosition).attr('y', function (d, i) {\n        return ideo._layout.getChromosomeSetLabelYPosition(i);\n      }).attr('text-anchor', ideo._layout.getChromosomeSetLabelAnchor()).each(function (d, i) {\n        // Get label lines\n        var lines;\n        if (d.name.indexOf(' ') === -1) {\n          lines = [d.name];\n        } else {\n          lines = d.name.match(/^(.*)\\s+([^\\s]+)$/).slice(1).reverse();\n        }\n\n        if ('sex' in ideo.config && ideo.config.ploidy === 2 && i === ideo.sexChromosomes.index) {\n          if (ideo.config.sex === 'male') {\n            lines = ['XY'];\n          } else {\n            lines = ['XX'];\n          }\n        }\n\n        // Render label lines\n        __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](this).selectAll('tspan').data(lines).enter().append('tspan').attr('dy', function (d, i) {\n          return i * -1.2 + 'em';\n        }).attr('x', ideo._layout.getChromosomeSetLabelXPosition()).attr('class', function (a, i) {\n          var fullLabels = ideo.config.fullChromosomeLabels;\n          return i === 1 && fullLabels ? 'italic' : null;\n        }).text(String);\n      });\n\n      var setLabelTranslate = ideo._layout.getChromosomeSetLabelTranslate();\n\n      // Append chromosomes labels\n      __WEBPACK_IMPORTED_MODULE_0_d3__[\"selectAll\"](ideo.selector + ' .chromosome-set-container').each(function (a, chrSetNumber) {\n        __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](this).selectAll('.chromosome').append('text').attr('class', 'chrLabel').attr('transform', setLabelTranslate).attr('x', function (d, i) {\n          return ideo._layout.getChromosomeLabelXPosition(i);\n        }).attr('y', function (d, i) {\n          return ideo._layout.getChromosomeLabelYPosition(i);\n        }).text(function (d, chrNumber) {\n          return ideo._ploidy.getAncestor(chrSetNumber, chrNumber);\n        }).attr('text-anchor', 'middle');\n      });\n    }\n\n    /**\n    * Draws labels and stalks for cytogenetic bands.\n    *\n    * Band labels are text like \"p11.11\".\n    * Stalks are small lines that visually connect labels to their bands.\n    */\n\n  }, {\n    key: 'drawBandLabels',\n    value: function drawBandLabels(chromosomes) {\n      var i, chr, chrs, taxid, ideo, chrModel, chrIndex, textOffsets;\n\n      ideo = this;\n\n      chrs = [];\n\n      for (taxid in chromosomes) {\n        for (chr in chromosomes[taxid]) {\n          chrs.push(chromosomes[taxid][chr]);\n        }\n      }\n\n      textOffsets = {};\n\n      chrIndex = 0;\n      for (i = 0; i < chrs.length; i++) {\n        chrIndex += 1;\n\n        chrModel = chrs[i];\n\n        chr = __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](ideo.selector + ' #' + chrModel.id);\n\n        // var chrMargin = this.config.chrMargin * chrIndex,\n        //   lineY1, lineY2;\n        //\n        // lineY1 = chrMargin;\n        // lineY2 = chrMargin - 8;\n        //\n        // if (\n        //   chrIndex === 1 &&\n        //   \"perspective\" in this.config && this.config.perspective === \"comparative\"\n        // ) {\n        //   lineY1 += 18;\n        //   lineY2 += 18;\n        // }\n\n        textOffsets[chrModel.id] = [];\n\n        chr.selectAll('text').data(chrModel.bands).enter().append('g').attr('class', function (d, i) {\n          return 'bandLabel bsbsl-' + i;\n        }).attr('transform', function (d) {\n          var transform = ideo._layout.getChromosomeBandLabelTranslate(d, i);\n\n          var x = transform.x;\n          // var y = transform.y;\n\n          textOffsets[chrModel.id].push(x + 13);\n\n          return transform.translate;\n        }).append('text').attr('text-anchor', ideo._layout.getChromosomeBandLabelAnchor(i)).text(function (d) {\n          return d.name;\n        });\n\n        // var adapter = ModelAdapter.getInstance(ideo.chromosomesArray[i]);\n        // var view = Chromosome.getInstance(adapter, ideo.config, ideo);\n\n        chr.selectAll('line.bandLabelStalk').data(chrModel.bands).enter().append('g').attr('class', function (d, i) {\n          return 'bandLabelStalk bsbsl-' + i;\n        }).attr('transform', function (d) {\n          var x, y;\n\n          x = ideo.round(d.px.start + d.px.width / 2);\n\n          textOffsets[chrModel.id].push(x + 13);\n          y = -10;\n\n          return 'translate(' + x + ',' + y + ')';\n        }).append('line').attr('x1', 0).attr('y1', function () {\n          return ideo._layout.getChromosomeBandTickY1(i);\n        }).attr('x2', 0).attr('y2', function () {\n          return ideo._layout.getChromosomeBandTickY2(i);\n        });\n      }\n\n      for (i = 0; i < chrs.length; i++) {\n        chrModel = chrs[i];\n\n        var textsLength = textOffsets[chrModel.id].length,\n            overlappingLabelXRight,\n            index,\n            indexesToShow = [],\n            prevHiddenBoxIndex,\n            xLeft,\n            prevLabelXRight,\n            prevTextBoxLeft,\n            prevTextBoxWidth,\n            textPadding;\n\n        overlappingLabelXRight = 0;\n\n        textPadding = 5;\n\n        for (index = 0; index < textsLength; index++) {\n          // Ensures band labels don't overlap\n\n          xLeft = textOffsets[chrModel.id][index];\n\n          if (xLeft < overlappingLabelXRight + textPadding === false) {\n            indexesToShow.push(index);\n          } else {\n            prevHiddenBoxIndex = index;\n            overlappingLabelXRight = prevLabelXRight;\n            continue;\n          }\n\n          if (prevHiddenBoxIndex !== index) {\n            // This getBoundingClientRect() forces Chrome's\n            // 'Recalculate Style' and 'Layout', which takes 30-40 ms on Chrome.\n            // TODO: This forced synchronous layout would be nice to eliminate.\n            // prevTextBox = texts[index].getBoundingClientRect();\n            // prevLabelXRight = prevTextBox.left + prevTextBox.width;\n\n            // TODO: Account for number of characters in prevTextBoxWidth,\n            // maybe also zoom.\n            prevTextBoxLeft = textOffsets[chrModel.id][index];\n            prevTextBoxWidth = 36;\n\n            prevLabelXRight = prevTextBoxLeft + prevTextBoxWidth;\n          }\n\n          if (xLeft < prevLabelXRight + textPadding) {\n            prevHiddenBoxIndex = index;\n            overlappingLabelXRight = prevLabelXRight;\n          } else {\n            indexesToShow.push(index);\n          }\n        }\n\n        var selectorsToShow = [],\n            ithLength = indexesToShow.length,\n            j;\n\n        for (j = 0; j < ithLength; j++) {\n          index = indexesToShow[j];\n          selectorsToShow.push('#' + chrModel.id + ' .bsbsl-' + index);\n        }\n\n        this.bandsToShow = this.bandsToShow.concat(selectorsToShow);\n      }\n    }\n\n    // Rotates chromosome labels by 90 degrees, e.g. upon clicking a chromosome to focus.\n\n  }, {\n    key: 'rotateChromosomeLabels',\n    value: function rotateChromosomeLabels(chr, chrIndex, orientation, scale) {\n      var chrMargin, chrWidth, ideo, x, y, numAnnotTracks, scaleSvg, tracksHeight, chrMargin2;\n\n      chrWidth = this.config.chrWidth;\n      chrMargin = this.config.chrMargin * chrIndex;\n      numAnnotTracks = this.config.numAnnotTracks;\n\n      ideo = this;\n\n      if (typeof scale !== 'undefined' && scale.hasOwnProperty('x') && !(scale.x === 1 && scale.y === 1)) {\n        scaleSvg = 'scale(' + scale.x + ',' + scale.y + ')';\n        x = -6;\n        y = scale === '' ? -16 : -14;\n      } else {\n        x = -8;\n        y = -16;\n        scale = { x: 1, y: 1 };\n        scaleSvg = '';\n      }\n\n      if (orientation === 'vertical' || orientation === '') {\n        var ci = chrIndex - 1;\n\n        if (numAnnotTracks > 1 || orientation === '') {\n          ci -= 1;\n        }\n\n        chrMargin2 = -4;\n        if (ideo.config.showBandLabels === true) {\n          chrMargin2 = ideo.config.chrMargin + chrWidth + 26;\n        }\n\n        chrMargin = ideo.config.chrMargin * ci;\n\n        if (numAnnotTracks > 1 === false) {\n          chrMargin += 1;\n        }\n\n        y = chrMargin + chrMargin2;\n\n        chr.selectAll('text.chrLabel').attr('transform', scaleSvg).selectAll('tspan').attr('x', x).attr('y', y);\n      } else {\n        chrIndex -= 1;\n\n        chrMargin2 = -chrWidth - 2;\n        if (ideo.config.showBandLabels === true) {\n          chrMargin2 = ideo.config.chrMargin + 8;\n        }\n\n        tracksHeight = ideo.config.annotTracksHeight;\n        if (ideo.config.annotationsLayout !== 'overlay') {\n          tracksHeight *= 2;\n        }\n\n        chrMargin = ideo.config.chrMargin * chrIndex;\n        x = -(chrMargin + chrMargin2) + 3 + tracksHeight;\n        x /= scale.x;\n\n        chr.selectAll('text.chrLabel').attr('transform', 'rotate(-90)' + scaleSvg).selectAll('tspan').attr('x', x).attr('y', y);\n      }\n    }\n\n    /**\n    * Rotates band labels by 90 degrees, e.g. upon clicking a chromosome to focus.\n    *\n    * This method includes proportional scaling, which ensures that\n    * while the parent chromosome group is scaled strongly in one dimension to fill\n    * available space, the text in the chromosome's band labels is\n    * not similarly distorted, and remains readable.\n    */\n\n  }, {\n    key: 'rotateBandLabels',\n    value: function rotateBandLabels(chr, chrIndex, scale) {\n      var chrMargin,\n          scaleSvg,\n          orientation,\n          bandLabels,\n          ideo = this;\n\n      bandLabels = chr.selectAll('.bandLabel');\n\n      chrWidth = this.config.chrWidth;\n      chrMargin = this.config.chrMargin * chrIndex;\n\n      orientation = chr.attr('data-orientation');\n\n      if (typeof scale === 'undefined') {\n        scale = { x: 1, y: 1 };\n        scaleSvg = '';\n      } else {\n        scaleSvg = 'scale(' + scale.x + ',' + scale.y + ')';\n      }\n\n      if (chrIndex === 1 && 'perspective' in this.config && this.config.perspective === 'comparative') {\n        bandLabels.attr('transform', function (d) {\n          var x, y;\n          x = 8 - chrMargin - 26;\n          y = ideo.round(2 + d.px.start + d.px.width / 2);\n          return 'rotate(-90)translate(' + x + ',' + y + ')';\n        }).selectAll('text').attr('text-anchor', 'end');\n      } else if (orientation === 'vertical') {\n        bandLabels.attr('transform', function (d) {\n          var x, y;\n          x = 8 - chrMargin;\n          y = ideo.round(2 + d.px.start + d.px.width / 2);\n          return 'rotate(-90)translate(' + x + ',' + y + ')';\n        }).selectAll('text').attr('transform', scaleSvg);\n      } else {\n        bandLabels.attr('transform', function (d) {\n          var x, y;\n          x = ideo.round(-8 * scale.x + d.px.start + d.px.width / 2);\n          y = chrMargin - 10;\n          return 'translate(' + x + ',' + y + ')';\n        }).selectAll('text').attr('transform', scaleSvg);\n\n        chr.selectAll('.bandLabelStalk line').attr('transform', scaleSvg);\n      }\n    }\n  }, {\n    key: 'round',\n    value: function round(coord) {\n      // Rounds an SVG coordinates to two decimal places\n      // e.g. 42.1234567890 -> 42.12\n      // Per http://stackoverflow.com/a/9453447, below method is fastest\n      return Math.round(coord * 100) / 100;\n    }\n\n    /**\n    * Renders all the bands and outlining boundaries of a chromosome.\n    */\n\n  }, {\n    key: 'drawChromosome',\n    value: function drawChromosome(chrModel, chrIndex, container, k) {\n      var chrMargin = this.config.chrMargin;\n\n      // Get chromosome model adapter class\n      var adapter = __WEBPACK_IMPORTED_MODULE_5__model_adapter__[\"a\" /* ModelAdapter */].getInstance(chrModel);\n\n      // Append chromosome's container\n      var chromosome = container.append('g').attr('id', chrModel.id).attr('class', 'chromosome ' + adapter.getCssClass()).attr('transform', 'translate(0, ' + k * chrMargin + ')');\n\n      // Render chromosome\n      return __WEBPACK_IMPORTED_MODULE_6__views_chromosome__[\"a\" /* Chromosome */].getInstance(adapter, this.config, this).render(chromosome, chrIndex, k);\n    }\n\n    /**\n    * Rotates a chromosome 90 degrees and shows or hides all other chromosomes\n    * Useful for focusing or defocusing a particular chromosome\n    */\n\n  }, {\n    key: 'rotateAndToggleDisplay',\n    value: function rotateAndToggleDisplay(chromosome) {\n      // Do nothing if taxId not defined. But it should be defined.\n      // To fix that bug we should have a way to find chromosome set number.\n      if (!this.config.taxid) {\n        return;\n      }\n\n      var chrSetNumber = Number(__WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](chromosome.parentNode).attr('data-set-number'));\n\n      var chrNumber = Array.prototype.slice.call(__WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](chromosome.parentNode).selectAll('g.chromosome')._groups[0]).indexOf(chromosome);\n\n      return this._layout.rotate(chrSetNumber, chrNumber, chromosome);\n    }\n\n    /**\n    * Converts base pair coordinates to pixel offsets.\n    * Bp-to-pixel scales differ among cytogenetic bands.\n    */\n\n  }, {\n    key: 'convertBpToPx',\n    value: function convertBpToPx(chr, bp) {\n      var i, band, bpToIscnScale, iscn, px, offset, pxStart, pxLength, iscnStart, iscnStop, iscnLength, bpStart, bpStop, bpLength;\n\n      for (i = 0; i < chr.bands.length; i++) {\n        band = chr.bands[i];\n\n        offset = this._bandsXOffset;\n        bpStart = band.bp.start;\n        bpStop = band.bp.stop;\n        bpLength = bpStop - bpStart;\n        iscnStart = band.iscn.start;\n        iscnStop = band.iscn.stop;\n        iscnLength = iscnStop - iscnStart;\n        pxStart = band.px.start;\n        pxLength = band.px.width;\n\n        if (bp >= bpStart && bp <= bpStop) {\n          bpToIscnScale = iscnLength / bpLength;\n          iscn = iscnStart + (bp - bpStart) * bpToIscnScale;\n\n          px = offset + pxStart + pxLength * (iscn - iscnStart) / iscnLength;\n\n          return px;\n        }\n      }\n\n      throw new Error('Base pair out of range.  ' + 'bp: ' + bp + '; length of chr' + chr.name + ': ' + band.bp.stop);\n    }\n\n    /**\n    * Converts base pair coordinates to pixel offsets.\n    * Bp-to-pixel scales differ among cytogenetic bands.\n    */\n\n  }, {\n    key: 'convertPxToBp',\n    value: function convertPxToBp(chr, px) {\n      var i, band, pxToIscnScale, iscn, bp, pxLength, pxStart, pxStop, iscnStart, iscnStop, bpLength, iscnLength;\n\n      if (px === 0) {\n        px = chr.bands[0].px.start;\n      }\n\n      for (i = 0; i < chr.bands.length; i++) {\n        band = chr.bands[i];\n\n        pxStart = band.px.start;\n        pxStop = band.px.stop;\n        iscnStart = band.iscn.start;\n        iscnStop = band.iscn.stop;\n\n        if (px >= pxStart && px <= pxStop) {\n          iscnLength = iscnStop - iscnStart;\n          pxLength = pxStop - pxStart;\n          bpLength = band.bp.stop - band.bp.start;\n\n          pxToIscnScale = iscnLength / pxLength;\n          iscn = iscnStart + (px - pxStart) * pxToIscnScale;\n\n          bp = band.bp.start + bpLength * (iscn - iscnStart) / iscnLength;\n\n          return Math.round(bp);\n        }\n      }\n\n      throw new Error('Pixel out of range.  ' + 'px: ' + px + '; length of chr' + chr.name + ': ' + pxStop);\n    }\n\n    /**\n    * Draws a trapezoid connecting a genomic range on\n    * one chromosome to a genomic range on another chromosome;\n    * a syntenic region.\n    */\n\n  }, {\n    key: 'drawSynteny',\n    value: function drawSynteny(syntenicRegions) {\n      var t0 = new Date().getTime();\n\n      var r1,\n          r2,\n          syntenies,\n          i,\n          color,\n          opacity,\n          regionID,\n          regions,\n          syntenicRegion,\n          ideo = this;\n\n      syntenies = __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](ideo.selector).insert('g', ':first-child').attr('class', 'synteny');\n\n      for (i = 0; i < syntenicRegions.length; i++) {\n        regions = syntenicRegions[i];\n\n        r1 = regions.r1;\n        r2 = regions.r2;\n\n        color = '#CFC';\n        if ('color' in regions) {\n          color = regions.color;\n        }\n\n        opacity = 1;\n        if ('opacity' in regions) {\n          opacity = regions.opacity;\n        }\n\n        r1.startPx = this.convertBpToPx(r1.chr, r1.start);\n        r1.stopPx = this.convertBpToPx(r1.chr, r1.stop);\n        r2.startPx = this.convertBpToPx(r2.chr, r2.start);\n        r2.stopPx = this.convertBpToPx(r2.chr, r2.stop);\n\n        regionID = r1.chr.id + '_' + r1.start + '_' + r1.stop + '_' + '__' + r2.chr.id + '_' + r2.start + '_' + r2.stop;\n\n        syntenicRegion = syntenies.append('g').attr('class', 'syntenicRegion').attr('id', regionID).on('click', function () {\n          var activeRegion = this;\n          var others = __WEBPACK_IMPORTED_MODULE_0_d3__[\"selectAll\"](ideo.selector + ' .syntenicRegion').filter(function () {\n            return this !== activeRegion;\n          });\n\n          others.classed('hidden', !others.classed('hidden'));\n        }).on('mouseover', function () {\n          var activeRegion = this;\n          __WEBPACK_IMPORTED_MODULE_0_d3__[\"selectAll\"](ideo.selector + ' .syntenicRegion').filter(function () {\n            return this !== activeRegion;\n          }).classed('ghost', true);\n        }).on('mouseout', function () {\n          __WEBPACK_IMPORTED_MODULE_0_d3__[\"selectAll\"](ideo.selector + ' .syntenicRegion').classed('ghost', false);\n        });\n        var chrWidth = ideo.config.chrWidth;\n        var x1 = this._layout.getChromosomeSetYTranslate(0);\n        var x2 = this._layout.getChromosomeSetYTranslate(1) - chrWidth;\n\n        syntenicRegion.append('polygon').attr('points', x1 + ', ' + r1.startPx + ' ' + x1 + ', ' + r1.stopPx + ' ' + x2 + ', ' + r2.stopPx + ' ' + x2 + ', ' + r2.startPx).attr('style', 'fill: ' + color + '; fill-opacity: ' + opacity);\n\n        syntenicRegion.append('line').attr('class', 'syntenyBorder').attr('x1', x1).attr('x2', x2).attr('y1', r1.startPx).attr('y2', r2.startPx);\n\n        syntenicRegion.append('line').attr('class', 'syntenyBorder').attr('x1', x1).attr('x2', x2).attr('y1', r1.stopPx).attr('y2', r2.stopPx);\n      }\n\n      var t1 = new Date().getTime();\n      if (ideo.debug) {\n        console.log('Time in drawSyntenicRegions: ' + (t1 - t0) + ' ms');\n      }\n    }\n\n    /**\n    * Initializes various annotation settings.  Constructor help function.\n    */\n\n  }, {\n    key: 'initAnnotSettings',\n    value: function initAnnotSettings() {\n      if (this.config.annotationsPath || this.config.localAnnotationsPath || this.annots || this.config.annotations) {\n        if (!this.config.annotationHeight) {\n          var annotHeight = Math.round(this.config.chrHeight / 100);\n          this.config.annotationHeight = annotHeight;\n        }\n\n        if (this.config.annotationTracks) {\n          this.config.numAnnotTracks = this.config.annotationTracks.length;\n        } else {\n          this.config.numAnnotTracks = 1;\n        }\n        this.config.annotTracksHeight = this.config.annotationHeight * this.config.numAnnotTracks;\n\n        if (typeof this.config.barWidth === 'undefined') {\n          this.config.barWidth = 3;\n        }\n      } else {\n        this.config.annotTracksHeight = 0;\n      }\n\n      if (typeof this.config.annotationsColor === 'undefined') {\n        this.config.annotationsColor = '#F00';\n      }\n    }\n  }, {\n    key: 'fetchAnnots',\n    value: function fetchAnnots(annotsUrl) {\n\n      var ideo = this;\n\n      if (annotsUrl.slice(0, 4) !== 'http') {\n        __WEBPACK_IMPORTED_MODULE_0_d3__[\"json\"](ideo.config.annotationsPath, function (data) {\n          ideo.rawAnnots = data;\n        });\n        return;\n      }\n\n      var tmp = annotsUrl.split('.');\n      var extension = tmp[tmp.length - 1];\n\n      if (extension !== 'bed') {\n        extension = extension.toUpperCase();\n        alert('This Ideogram.js feature is very new, and only supports BED at the ' + 'moment.  Sorry, check back soon for ' + extension + ' support!');\n        return;\n      }\n\n      __WEBPACK_IMPORTED_MODULE_0_d3__[\"request\"](annotsUrl, function (data) {\n        ideo.rawAnnots = new __WEBPACK_IMPORTED_MODULE_7__parsers_bed_parser__[\"a\" /* BedParser */](data.response, ideo).rawAnnots;\n      });\n    }\n\n    /**\n    * Draws annotations defined by user\n    */\n\n  }, {\n    key: 'drawAnnots',\n    value: function drawAnnots(friendlyAnnots) {\n      var ideo = this,\n          i,\n          j,\n          annot,\n          rawAnnots = [],\n          rawAnnot,\n          keys,\n          chr,\n          chrs = ideo.chromosomes[ideo.config.taxid]; // TODO: multiorganism\n\n      // Occurs when filtering\n      if ('annots' in friendlyAnnots[0]) {\n        return ideo.drawProcessedAnnots(friendlyAnnots);\n      }\n\n      for (chr in chrs) {\n        rawAnnots.push({ chr: chr, annots: [] });\n      }\n\n      for (i = 0; i < friendlyAnnots.length; i++) {\n        annot = friendlyAnnots[i];\n\n        for (j = 0; j < rawAnnots.length; j++) {\n          if (annot.chr === rawAnnots[j].chr) {\n            rawAnnot = [annot.name, annot.start, annot.stop - annot.start];\n            if ('color' in annot) {\n              rawAnnot.push(annot.color);\n            }\n            if ('shape' in annot) {\n              rawAnnot.push(annot.shape);\n            }\n            rawAnnots[j].annots.push(rawAnnot);\n            break;\n          }\n        }\n      }\n\n      keys = ['name', 'start', 'length'];\n      if ('color' in friendlyAnnots[0]) {\n        keys.push('color');\n      }\n      if ('shape' in friendlyAnnots[0]) {\n        keys.push('shape');\n      }\n      ideo.rawAnnots = { keys: keys, annots: rawAnnots };\n\n      ideo.annots = ideo.processAnnotData(ideo.rawAnnots);\n\n      ideo.drawProcessedAnnots(ideo.annots);\n    }\n\n    /**\n    * Proccesses genome annotation data.\n    * Genome annotations represent features like a gene, SNP, etc. as\n    * a small graphical object on or beside a chromosome.\n    * Converts raw annotation data from server, which is structured as\n    * an array of arrays, into a more verbose data structure consisting\n    * of an array of objects.\n    * Also adds pixel offset information.\n    */\n\n  }, {\n    key: 'processAnnotData',\n    value: function processAnnotData(rawAnnots) {\n      var keys,\n          i,\n          j,\n          k,\n          m,\n          annot,\n          annots,\n          annotsByChr,\n          chr,\n          chrModel,\n          ra,\n          startPx,\n          stopPx,\n          px,\n          color,\n          ideo = this;\n\n      keys = rawAnnots.keys;\n      rawAnnots = rawAnnots.annots;\n\n      annots = [];\n\n      m = -1;\n      for (i = 0; i < rawAnnots.length; i++) {\n\n        annotsByChr = rawAnnots[i];\n\n        chr = annotsByChr.chr;\n        chrModel = ideo.chromosomes[ideo.config.taxid][chr];\n\n        if (typeof chrModel === 'undefined') {\n          console.warn('Chromosome \"' + chr + '\" undefined in ideogram; ' + annotsByChr.annots.length + ' annotations not shown');\n          continue;\n        }\n\n        m++;\n        annots.push({ chr: annotsByChr.chr, annots: [] });\n\n        for (j = 0; j < annotsByChr.annots.length; j++) {\n          ra = annotsByChr.annots[j];\n          annot = {};\n\n          for (var k = 0; k < keys.length; k++) {\n            annot[keys[k]] = ra[k];\n          }\n\n          annot.stop = annot.start + annot.length;\n\n          startPx = ideo.convertBpToPx(chrModel, annot.start);\n          stopPx = ideo.convertBpToPx(chrModel, annot.stop);\n\n          px = Math.round((startPx + stopPx) / 2) - 28;\n\n          color = ideo.config.annotationsColor;\n          if (ideo.config.annotationTracks) {\n            annot.trackIndex = ra[3];\n            color = ideo.config.annotationTracks[annot.trackIndex].color;\n          } else {\n            annot.trackIndex = 0;\n          }\n\n          if ('color' in annot) {\n            color = annot.color;\n          }\n\n          annot.chr = chr;\n          annot.chrIndex = i;\n          annot.px = px;\n          annot.startPx = startPx - 30;\n          annot.stopPx = stopPx - 30;\n          annot.color = color;\n\n          annots[m].annots.push(annot);\n        }\n      }\n\n      return annots;\n    }\n\n    /*\n    * Can be used for bar chart or sparkline\n    */\n\n  }, {\n    key: 'getHistogramBars',\n    value: function getHistogramBars(annots) {\n      var t0 = new Date().getTime();\n\n      var i,\n          j,\n          chr,\n          chrModel,\n          chrModels,\n          chrPxStop,\n          px,\n          bp,\n          chrAnnots,\n          chrName,\n          chrIndex,\n          annot,\n          bars,\n          bar,\n          barPx,\n          nextBarPx,\n          barWidth,\n          maxAnnotsPerBar,\n          color,\n          lastBand,\n          numBins,\n          barAnnots,\n          barCount,\n          height,\n          firstGet = false,\n          histogramScaling,\n          ideo = this;\n\n      bars = [];\n\n      barWidth = ideo.config.barWidth;\n      chrModels = ideo.chromosomes[ideo.config.taxid];\n      color = ideo.config.annotationsColor;\n\n      if ('histogramScaling' in ideo.config) {\n        histogramScaling = ideo.config.histogramScaling;\n      } else {\n        histogramScaling = 'relative';\n      }\n\n      if (typeof ideo.maxAnnotsPerBar === 'undefined') {\n        ideo.maxAnnotsPerBar = {};\n        firstGet = true;\n      }\n\n      for (chr in chrModels) {\n        chrModel = chrModels[chr];\n        chrIndex = chrModel.chrIndex;\n        lastBand = chrModel.bands[chrModel.bands.length - 1];\n        chrPxStop = lastBand.px.stop;\n        numBins = Math.round(chrPxStop / barWidth);\n        bar = { chr: chr, annots: [] };\n        for (i = 0; i < numBins; i++) {\n          px = i * barWidth - ideo.bump;\n          bp = ideo.convertPxToBp(chrModel, px + ideo.bump);\n          bar.annots.push({\n            bp: bp,\n            px: px - ideo.bump,\n            count: 0,\n            chrIndex: chrIndex,\n            chrName: chr,\n            color: color,\n            annots: []\n          });\n        }\n        bars.push(bar);\n      }\n\n      for (chr in annots) {\n        chrAnnots = annots[chr].annots;\n        chrName = annots[chr].chr;\n        chrModel = chrModels[chrName];\n        chrIndex = chrModel.chrIndex - 1;\n        barAnnots = bars[chrIndex].annots;\n        for (i = 0; i < chrAnnots.length; i++) {\n          annot = chrAnnots[i];\n          px = annot.px - ideo.bump;\n          for (j = 0; j < barAnnots.length; j++) {\n            barPx = barAnnots[j].px;\n            nextBarPx = barPx + barWidth;\n            if (j === barAnnots.length - 1) {\n              nextBarPx += barWidth;\n            }\n            if (px >= barPx && px < nextBarPx) {\n              bars[chrIndex].annots[j].count += 1;\n              bars[chrIndex].annots[j].annots.push(annot);\n              break;\n            }\n          }\n        }\n      }\n\n      if (firstGet === true || histogramScaling === 'relative') {\n        maxAnnotsPerBar = 0;\n        for (i = 0; i < bars.length; i++) {\n          annots = bars[i].annots;\n          for (j = 0; j < annots.length; j++) {\n            barCount = annots[j].count;\n            if (barCount > maxAnnotsPerBar) {\n              maxAnnotsPerBar = barCount;\n            }\n          }\n        }\n        ideo.maxAnnotsPerBar[chr] = maxAnnotsPerBar;\n      }\n\n      // Set each bar's height to be proportional to\n      // the height of the bar with the most annotations\n      for (i = 0; i < bars.length; i++) {\n        annots = bars[i].annots;\n        for (j = 0; j < annots.length; j++) {\n          barCount = annots[j].count;\n          height = barCount / ideo.maxAnnotsPerBar[chr] * ideo.config.chrMargin;\n          // console.log(height)\n          bars[i].annots[j].height = height;\n        }\n      }\n\n      var t1 = new Date().getTime();\n      if (ideo.debug) {\n        console.log('Time spent in getHistogramBars: ' + (t1 - t0) + ' ms');\n      }\n\n      ideo.bars = bars;\n\n      return bars;\n    }\n\n    /**\n    * Fills out annotations data structure such that its top-level list of arrays\n    * matches that of this ideogram's chromosomes list in order and number\n    * Fixes https://github.com/eweitz/ideogram/issues/66\n    */\n\n  }, {\n    key: 'fillAnnots',\n    value: function fillAnnots(annots) {\n      var filledAnnots, chrs, chrArray, i, chr, annot, chrIndex;\n\n      filledAnnots = [];\n      chrs = [];\n      chrArray = this.chromosomesArray;\n\n      for (i = 0; i < chrArray.length; i++) {\n        chr = chrArray[i].name;\n        chrs.push(chr);\n        filledAnnots.push({ chr: chr, annots: [] });\n      }\n\n      for (i = 0; i < annots.length; i++) {\n        annot = annots[i];\n        chrIndex = chrs.indexOf(annot.chr);\n        if (chrIndex !== -1) {\n          filledAnnots[chrIndex] = annot;\n        }\n      }\n\n      return filledAnnots;\n    }\n\n    /**\n    * Draws genome annotations on chromosomes.\n    * Annotations can be rendered as either overlaid directly\n    * on a chromosome, or along one or more \"tracks\"\n    * running parallel to each chromosome.\n    */\n\n  }, {\n    key: 'drawProcessedAnnots',\n    value: function drawProcessedAnnots(annots) {\n      var chrMargin,\n          chrWidth,\n          layout,\n          annotHeight,\n          triangle,\n          circle,\n          r,\n          chrAnnot,\n          x1,\n          x2,\n          y1,\n          y2,\n          filledAnnots,\n          ideo = this;\n\n      chrMargin = this.config.chrMargin;\n      chrWidth = this.config.chrWidth;\n\n      layout = 'tracks';\n      if (this.config.annotationsLayout) {\n        layout = this.config.annotationsLayout;\n      }\n\n      if (layout === 'histogram') {\n        annots = ideo.getHistogramBars(annots);\n      }\n\n      annotHeight = ideo.config.annotationHeight;\n\n      triangle = 'l -' + annotHeight + ' ' + 2 * annotHeight + ' l ' + 2 * annotHeight + ' 0 z';\n\n      // From http://stackoverflow.com/a/10477334, with a minor change (\"m -r, r\")\n      // Circles are supported natively via <circle>, but having it as a path\n      // simplifies handling triangles, circles and other shapes in the same\n      // D3 call\n      r = annotHeight;\n      circle = 'm -' + r + ', ' + r + 'a ' + r + ',' + r + ' 0 1,0 ' + r * 2 + ',0' + 'a ' + r + ',' + r + ' 0 1,0 -' + r * 2 + ',0';\n\n      filledAnnots = ideo.fillAnnots(annots);\n\n      chrAnnot = __WEBPACK_IMPORTED_MODULE_0_d3__[\"selectAll\"](ideo.selector + ' .chromosome').data(filledAnnots).selectAll('path.annot').data(function (d) {\n        return d.annots;\n      }).enter();\n\n      if (layout === 'tracks') {\n        chrAnnot.append('g').attr('id', function (d) {\n          return d.id;\n        }).attr('class', 'annot').attr('transform', function (d) {\n          var y = ideo.config.chrWidth + d.trackIndex * annotHeight * 2;\n          return 'translate(' + d.px + ',' + y + ')';\n        }).append('path').attr('d', function (d) {\n          if (!d.shape || d.shape === 'triangle') {\n            return 'm0,0' + triangle;\n          } else if (d.shape === 'circle') {\n            return circle;\n          }\n        }).attr('fill', function (d) {\n          return d.color;\n        });\n      } else if (layout === 'overlay') {\n        // Overlaid annotations appear directly on chromosomes\n\n        chrAnnot.append('polygon').attr('id', function (d) {\n          return d.id;\n        }).attr('class', 'annot').attr('points', function (d) {\n          if (d.stopPx - d.startPx > 1) {\n            x1 = d.startPx;\n            x2 = d.stopPx;\n          } else {\n            x1 = d.px - 0.5;\n            x2 = d.px + 0.5;\n          }\n          y1 = chrWidth;\n          y2 = 0;\n\n          return x1 + ',' + y1 + ' ' + x2 + ',' + y1 + ' ' + x2 + ',' + y2 + ' ' + x1 + ',' + y2;\n        }).attr('fill', function (d) {\n          return d.color;\n        });\n      } else if (layout === 'histogram') {\n        chrAnnot.append('polygon')\n        // .attr('id', function(d, i) { return d.id; })\n        .attr('class', 'annot').attr('points', function (d) {\n          x1 = d.px + ideo.bump;\n          x2 = d.px + ideo.config.barWidth + ideo.bump;\n          y1 = chrWidth;\n          y2 = chrWidth + d.height;\n\n          var thisChrWidth = ideo.chromosomesArray[d.chrIndex - 1].width;\n\n          if (x2 > thisChrWidth) {\n            x2 = thisChrWidth;\n          }\n\n          return x1 + ',' + y1 + ' ' + x2 + ',' + y1 + ' ' + x2 + ',' + y2 + ' ' + x1 + ',' + y2;\n        }).attr('fill', function (d) {\n          return d.color;\n        });\n      }\n\n      if (ideo.onDrawAnnotsCallback) {\n        ideo.onDrawAnnotsCallback();\n      }\n    }\n  }, {\n    key: 'onBrushMove',\n    value: function onBrushMove() {\n      call(this.onBrushMoveCallback);\n    }\n  }, {\n    key: 'createBrush',\n    value: function createBrush(from, to) {\n      var ideo = this,\n          width = ideo.config.chrWidth + 6.5,\n          length = ideo.config.chrHeight,\n          chr = ideo.chromosomesArray[0],\n          chrLengthBp = chr.bands[chr.bands.length - 1].bp.stop,\n          x0,\n          x1,\n          xOffset = this._layout.getMargin().left,\n          xScale = __WEBPACK_IMPORTED_MODULE_0_d3__[\"scaleLinear\"]().domain([0, __WEBPACK_IMPORTED_MODULE_0_d3__[\"max\"](chr.bands, function (band) {\n        return band.bp.stop;\n      })]).range([xOffset, __WEBPACK_IMPORTED_MODULE_0_d3__[\"max\"](chr.bands, function (band) {\n        return band.px.stop;\n      }) + xOffset]);\n\n      if (typeof from === 'undefined') {\n        from = Math.floor(chrLengthBp / 10);\n      }\n\n      if (typeof right === 'undefined') {\n        to = Math.ceil(from * 2);\n      }\n\n      x0 = ideo.convertBpToPx(chr, from);\n      x1 = ideo.convertBpToPx(chr, to);\n\n      ideo.selectedRegion = { from: from, to: to, extent: to - from };\n\n      ideo.brush = __WEBPACK_IMPORTED_MODULE_0_d3__[\"brushX\"]().extent([[xOffset, 0], [length + xOffset, width]]).on('brush', onBrushMove);\n\n      var yTranslate = this._layout.getChromosomeSetYTranslate(0);\n      var yOffset = yTranslate + (ideo.config.chrWidth - width) / 2;\n      __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](ideo.selector).append('g').attr('class', 'brush').attr('transform', 'translate(0, ' + yOffset + ')').call(ideo.brush).call(ideo.brush.move, [x0, x1]);\n\n      function onBrushMove() {\n        var extent = __WEBPACK_IMPORTED_MODULE_0_d3__[\"event\"].selection.map(xScale.invert),\n            from = Math.floor(extent[0]),\n            to = Math.ceil(extent[1]);\n\n        ideo.selectedRegion = { from: from, to: to, extent: to - from };\n\n        if (ideo.onBrushMove) {\n          ideo.onBrushMoveCallback();\n        }\n      }\n    }\n\n    /**\n    * Called when Ideogram has finished initializing.\n    * Accounts for certain ideogram properties not being set until\n    * asynchronous requests succeed, etc.\n    */\n\n  }, {\n    key: 'onLoad',\n    value: function onLoad() {\n      call(this.onLoadCallback);\n    }\n  }, {\n    key: 'onDrawAnnots',\n    value: function onDrawAnnots() {\n      call(this.onDrawAnnotsCallback);\n    }\n\n    /*\n    * Returns SVG gradients that give chromosomes a polished look\n    */\n\n  }, {\n    key: 'getBandColorGradients',\n    value: function getBandColorGradients() {\n      var colors,\n          stain,\n          color1,\n          color2,\n          color3,\n          css,\n          gradients = '';\n\n      colors = [['gneg', '#FFF', '#FFF', '#DDD'], ['gpos25', '#C8C8C8', '#DDD', '#BBB'], ['gpos33', '#BBB', '#BBB', '#AAA'], ['gpos50', '#999', '#AAA', '#888'], ['gpos66', '#888', '#888', '#666'], ['gpos75', '#777', '#777', '#444'], ['gpos100', '#444', '#666', '#000'], ['acen', '#FEE', '#FEE', '#FDD'], ['noBands', '#BBB', '#BBB', '#AAA']];\n\n      for (var i = 0; i < colors.length; i++) {\n        stain = colors[i][0];\n        color1 = colors[i][1];\n        color2 = colors[i][2];\n        color3 = colors[i][3];\n        gradients += '<linearGradient id=\"' + stain + '\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">';\n        if (stain === \"gneg\") {\n          gradients += '<stop offset=\"70%\" stop-color=\"' + color2 + '\" />' + '<stop offset=\"95%\" stop-color=\"' + color3 + '\" />' + '<stop offset=\"100%\" stop-color=\"' + color1 + '\" />';\n        } else {\n          gradients += '<stop offset=\"5%\" stop-color=\"' + color1 + '\" />' + '<stop offset=\"15%\" stop-color=\"' + color2 + '\" />' + '<stop offset=\"60%\" stop-color=\"' + color3 + '\" />';\n        }\n        gradients += '</linearGradient>';\n      }\n\n      gradients += '<pattern id=\"stalk\" width=\"2\" height=\"1\" patternUnits=\"userSpaceOnUse\" ' + 'patternTransform=\"rotate(30 0 0)\">' + '<rect x=\"0\" y=\"0\" width=\"10\" height=\"2\" fill=\"#CCE\" /> ' + '<line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"100%\" style=\"stroke:#88B; ' + 'stroke-width:0.7;\" />' + '</pattern>' + '<pattern id=\"gvar\" width=\"2\" height=\"1\" patternUnits=\"userSpaceOnUse\" ' + 'patternTransform=\"rotate(-30 0 0)\">' + '<rect x=\"0\" y=\"0\" width=\"10\" height=\"2\" fill=\"#DDF\" /> ' + '<line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"100%\" style=\"stroke:#99C; ' + 'stroke-width:0.7;\" />' + '</pattern>';\n\n      gradients = \"<defs>\" + gradients + \"</defs>\";\n      css = \"<style>\" + '.gneg {fill: url(\"#gneg\")} ' + '.gpos25 {fill: url(\"#gpos25\")} ' + '.gpos33 {fill: url(\"#gpos33\")} ' + '.gpos50 {fill: url(\"#gpos50\")} ' + '.gpos66 {fill: url(\"#gpos66\")} ' + '.gpos75 {fill: url(\"#gpos75\")} ' + '.gpos100 {fill: url(\"#gpos100\")} ' + '.gpos {fill: url(\"#gpos100\")} ' + '.acen {fill: url(\"#acen\")} ' + '.stalk {fill: url(\"#stalk\")} ' + '.gvar {fill: url(\"#gvar\")} ' + '.noBands {fill: url(\"#noBands\")} ' + '.chromosome {fill: url(\"#noBands\")} ' + '</style>';\n      gradients = css + gradients;\n\n      // alert(gradients)\n\n      return gradients;\n    }\n\n    /*\n    *  Returns an NCBI taxonomy identifier (taxid) for the configured organism\n    */\n\n  }, {\n    key: 'getTaxidFromEutils',\n    value: function getTaxidFromEutils(callback) {\n      var organism,\n          taxonomySearch,\n          taxid,\n          ideo = this;\n\n      organism = ideo.config.organism;\n\n      taxonomySearch = ideo.esearch + '&db=taxonomy&term=' + organism;\n\n      __WEBPACK_IMPORTED_MODULE_0_d3__[\"json\"](taxonomySearch, function (data) {\n        taxid = data.esearchresult.idlist[0];\n        return callback(taxid);\n      });\n    }\n\n    /**\n    * Returns an array of taxids for the current ideogram\n    * Also sets configuration parameters related to taxid(s), whether ideogram is\n    * multiorganism, and adjusts chromosomes parameters as needed\n    **/\n\n  }, {\n    key: 'getTaxids',\n    value: function getTaxids(callback) {\n      var ideo = this,\n          taxid,\n          taxids,\n          org,\n          orgs,\n          i,\n          taxidInit,\n          tmpChrs,\n          assembly,\n          chromosomes,\n          multiorganism,\n          promise;\n\n      taxidInit = 'taxid' in ideo.config;\n\n      ideo.config.multiorganism = 'organism' in ideo.config && ideo.config.organism instanceof Array || taxidInit && ideo.config.taxid instanceof Array;\n\n      multiorganism = ideo.config.multiorganism;\n\n      if ('organism' in ideo.config) {\n        // Ideogram instance was constructed using common organism name(s)\n        if (multiorganism) {\n          orgs = ideo.config.organism;\n        } else {\n          orgs = [ideo.config.organism];\n        }\n\n        taxids = [];\n        tmpChrs = {};\n        for (i = 0; i < orgs.length; i++) {\n          // Gets a list of taxids from common organism names\n          org = orgs[i];\n          for (taxid in ideo.organisms) {\n            if (ideo.organisms[taxid].commonName.toLowerCase() === org) {\n              taxids.push(taxid);\n              if (multiorganism) {\n                // Adjusts 'chromosomes' configuration parameter to make object\n                // keys use taxid instead of common organism name\n                tmpChrs[taxid] = ideo.config.chromosomes[org];\n              }\n            }\n          }\n        }\n\n        if (taxids.length === 0) {\n          promise = new __WEBPACK_IMPORTED_MODULE_2_es6_promise__[\"Promise\"](function (resolve) {\n            ideo.getTaxidFromEutils(resolve);\n          });\n\n          promise.then(function (data) {\n            var organism = ideo.config.organism,\n                dataDir = ideo.config.dataDir,\n                urlOrg = organism.replace(' ', '-');\n\n            taxid = data;\n            taxids.push(taxid);\n\n            ideo.config.taxids = taxids;\n            ideo.organisms[taxid] = {\n              commonName: '',\n              scientificName: ideo.config.organism,\n              scientificNameAbbr: ''\n            };\n\n            var fullyBandedTaxids = ['9606', '10090', '10116'];\n            if (fullyBandedTaxids.indexOf(taxid) !== -1 && ideo.config.showFullyBanded === false) {\n              urlOrg += '-no-bands';\n            }\n            var chromosomesUrl = dataDir + urlOrg + '.js';\n\n            var promise = new __WEBPACK_IMPORTED_MODULE_2_es6_promise__[\"Promise\"](function (resolve, reject) {\n              __WEBPACK_IMPORTED_MODULE_0_d3__[\"request\"](chromosomesUrl).get(function (error, data) {\n                if (error) {\n                  reject(Error(error));\n                }\n                resolve(data);\n              });\n            });\n\n            return promise.then(function (data) {\n              // Check if chromosome data exists locally.\n              // This is used for pre-processed centromere data,\n              // which is not accessible via EUtils.  See get_chromosomes.py.\n\n              var asmAndChrArray = [],\n                  chromosomes = [],\n                  seenChrs = {},\n                  chr;\n\n              eval(data.response);\n\n              asmAndChrArray.push('');\n\n              for (var i = 0; i < chrBands.length; i++) {\n                chr = chrBands[i].split(' ')[0];\n                if (chr in seenChrs) {\n                  continue;\n                } else {\n                  chromosomes.push({ name: chr, type: 'nuclear' });\n                  seenChrs[chr] = 1;\n                }\n              }\n              chromosomes = chromosomes.sort(ideo.sortChromosomes);\n              asmAndChrArray.push(chromosomes);\n              ideo.coordinateSystem = 'iscn';\n              return asmAndChrArray;\n            }, function () {\n              return new __WEBPACK_IMPORTED_MODULE_2_es6_promise__[\"Promise\"](function (resolve) {\n                ideo.coordinateSystem = 'bp';\n                ideo.getAssemblyAndChromosomesFromEutils(resolve);\n              });\n            });\n          }).then(function (asmChrArray) {\n            assembly = asmChrArray[0];\n            chromosomes = asmChrArray[1];\n\n            ideo.config.chromosomes = chromosomes;\n            ideo.organisms[taxid].assemblies = {\n              default: assembly\n            };\n\n            callback(taxids);\n          });\n        } else {\n          ideo.config.taxids = taxids;\n          if (multiorganism) {\n            ideo.config.chromosomes = tmpChrs;\n          }\n\n          callback(taxids);\n        }\n      } else {\n        if (multiorganism) {\n          ideo.coordinateSystem = 'bp';\n          if (taxidInit) {\n            taxids = ideo.config.taxid;\n          }\n        } else {\n          if (taxidInit) {\n            taxids = [ideo.config.taxid];\n          }\n          ideo.config.taxids = taxids;\n        }\n\n        callback(taxids);\n      }\n    }\n  }, {\n    key: 'sortChromosomes',\n    value: function sortChromosomes(a, b) {\n      var aIsNuclear = a.type === 'nuclear',\n          bIsNuclear = b.type === 'nuclear',\n          aIsCP = a.type === 'chloroplast',\n          bIsCP = b.type === 'chloroplast',\n          aIsMT = a.type === 'mitochondrion',\n          bIsMT = b.type === 'mitochondrion';\n      // aIsPlastid = aIsMT && a.name !== 'MT', // e.g. B1 in rice genome GCF_001433935.1\n      // bIsPlastid = bIsMT && b.name !== 'MT';\n\n      if (aIsNuclear && bIsNuclear) {\n        return Ideogram.naturalSort(a.name, b.name);\n      } else if (!aIsNuclear && bIsNuclear) {\n        return 1;\n      } else if (aIsMT && bIsCP) {\n        return 1;\n      } else if (aIsCP && bIsMT) {\n        return -1;\n      } else if (!aIsMT && !aIsCP && (bIsMT || bIsCP)) {\n        return -1;\n      }\n    }\n\n    /*\n    *  Returns names and lengths of chromosomes for an organism's best-known\n    *  genome assembly.  Gets data from NCBI EUtils web API.\n    */\n\n  }, {\n    key: 'getAssemblyAndChromosomesFromEutils',\n    value: function getAssemblyAndChromosomesFromEutils(callback) {\n      var asmAndChrArray,\n          // [assembly_accession, chromosome_objects_array]\n      organism,\n          assemblyAccession,\n          chromosomes,\n          asmSearch,\n          asmUid,\n          asmSummary,\n          rsUid,\n          nuccoreLink,\n          links,\n          ntSummary,\n          results,\n          result,\n          cnIndex,\n          chrName,\n          chrLength,\n          chromosome,\n          type,\n          ideo = this;\n\n      organism = ideo.config.organism;\n\n      asmAndChrArray = [];\n      chromosomes = [];\n\n      asmSearch = ideo.esearch + '&db=assembly' + '&term=%22' + organism + '%22[organism]' + 'AND%20(%22latest%20refseq%22[filter])%20' + 'AND%20(%22chromosome%20level%22[filter]%20' + 'OR%20%22complete%20genome%22[filter])';\n\n      var promise = __WEBPACK_IMPORTED_MODULE_0_d3__[\"promise\"].json(asmSearch);\n\n      promise.then(function (data) {\n        // NCBI Assembly database's internal identifier (uid) for this assembly\n        asmUid = data.esearchresult.idlist[0];\n        asmSummary = ideo.esummary + '&db=assembly&id=' + asmUid;\n\n        return __WEBPACK_IMPORTED_MODULE_0_d3__[\"promise\"].json(asmSummary);\n      }).then(function (data) {\n        // RefSeq UID for this assembly\n        rsUid = data.result[asmUid].rsuid;\n        assemblyAccession = data.result[asmUid].assemblyaccession;\n\n        asmAndChrArray.push(assemblyAccession);\n\n        // Get a list of IDs for the chromosomes in this genome.\n        //\n        // This information does not seem to be available from well-known\n        // NCBI databases like Assembly or Nucleotide, so we use GenColl,\n        // a lesser-known NCBI database.\n        var qs = '&db=nuccore&linkname=gencoll_nuccore_chr&from_uid=' + rsUid;\n        nuccoreLink = ideo.elink + qs;\n\n        return __WEBPACK_IMPORTED_MODULE_0_d3__[\"promise\"].json(nuccoreLink);\n      }).then(function (data) {\n        links = data.linksets[0].linksetdbs[0].links.join(',');\n        ntSummary = ideo.esummary + '&db=nucleotide&id=' + links;\n\n        return __WEBPACK_IMPORTED_MODULE_0_d3__[\"promise\"].json(ntSummary);\n      }).then(function (data) {\n        results = data.result;\n\n        for (var x in results) {\n          result = results[x];\n\n          // omit list of reult uids\n          if (x === 'uids') {\n            continue;\n          }\n\n          if (result.genome === 'mitochondrion') {\n            if (ideo.config.showNonNuclearChromosomes) {\n              type = result.genome;\n              cnIndex = result.subtype.split('|').indexOf('plasmid');\n              if (cnIndex === -1) {\n                chrName = 'MT';\n              } else {\n                // Seen in e.g. rice genome IRGSP-1.0 (GCF_001433935.1),\n                // From https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?retmode=json&db=nucleotide&id=996703432,996703431,996703430,996703429,996703428,996703427,996703426,996703425,996703424,996703423,996703422,996703421,194033210,11466763,7524755\n                // genome: 'mitochondrion',\n                // subtype: 'cell_line|plasmid',\n                // subname: 'A-58 CMS|B1',\n                chrName = result.subname.split('|')[cnIndex];\n              }\n            } else {\n              continue;\n            }\n          } else if (result.genome === 'chloroplast' || result.genome === 'plastid') {\n            type = 'chloroplast';\n            // Plastid encountered with rice genome IRGSP-1.0 (GCF_001433935.1)\n            if (ideo.config.showNonNuclearChromosomes) {\n              chrName = 'CP';\n            } else {\n              continue;\n            }\n          } else {\n            type = 'nuclear';\n            cnIndex = result.subtype.split('|').indexOf('chromosome');\n\n            chrName = result.subname.split('|')[cnIndex];\n\n            if (typeof chrName !== 'undefined' && chrName.substr(0, 3) === 'chr') {\n              // Convert \"chr12\" to \"12\", e.g. for banana (GCF_000313855.2)\n              chrName = chrName.substr(3);\n            }\n          }\n\n          chrLength = result.slen;\n\n          chromosome = {\n            name: chrName,\n            length: chrLength,\n            type: type\n          };\n\n          chromosomes.push(chromosome);\n        }\n\n        chromosomes = chromosomes.sort(ideo.sortChromosomes);\n        asmAndChrArray.push(chromosomes);\n\n        ideo.coordinateSystem = 'bp';\n\n        return callback(asmAndChrArray);\n      });\n    }\n  }, {\n    key: 'drawSexChromosomes',\n    value: function drawSexChromosomes(bandsArray, taxid, container, defs, j, chrs) {\n      var chromosome,\n          bands,\n          chrModel,\n          shape,\n          sci,\n          k,\n          sexChromosomeIndexes,\n          ideo = this;\n\n      if (ideo.config.sex === 'male') {\n        sexChromosomeIndexes = [1, 0];\n      } else {\n        sexChromosomeIndexes = [0, 0];\n      }\n\n      for (k = 0; k < sexChromosomeIndexes.length; k++) {\n        sci = sexChromosomeIndexes[k] + j;\n        chromosome = chrs[sci];\n        bands = bandsArray[sci];\n        chrModel = ideo.getChromosomeModel(bands, chromosome, taxid, sci);\n        shape = ideo.drawChromosome(chrModel, j, container, k);\n        defs.append('clipPath').attr('id', chrModel.id + '-chromosome-set-clippath').selectAll('path').data(shape).enter().append('path').attr('d', function (d) {\n          return d.path;\n        }).attr('class', function (d) {\n          return d.class;\n        });\n      }\n    }\n\n    /*\n    * Configures chromosome data and calls downstream chromosome drawing functions\n    */\n\n  }, {\n    key: 'initDrawChromosomes',\n    value: function initDrawChromosomes(bandsArray) {\n      var ideo = this,\n          taxids = ideo.config.taxids,\n          ploidy = ideo.config.ploidy,\n          taxid,\n          chrIndex = 0,\n          chrSetNumber = 0,\n          bands,\n          i,\n          j,\n          chrs,\n          chromosome,\n          chrModel,\n          defs,\n          transform;\n\n      defs = __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](ideo.selector + ' defs');\n\n      for (i = 0; i < taxids.length; i++) {\n        taxid = taxids[i];\n        chrs = ideo.config.chromosomes[taxid];\n\n        ideo.chromosomes[taxid] = {};\n\n        ideo.setSexChromosomes(chrs);\n\n        for (j = 0; j < chrs.length; j++) {\n          chromosome = chrs[j];\n          bands = bandsArray[chrIndex];\n          chrIndex += 1;\n\n          chrModel = ideo.getChromosomeModel(bands, chromosome, taxid, chrIndex);\n\n          ideo.chromosomes[taxid][chromosome] = chrModel;\n          ideo.chromosomesArray.push(chrModel);\n\n          if ('sex' in ideo.config && (ploidy === 2 && ideo.sexChromosomes.index + 2 === chrIndex || ideo.config.sex === 'female' && chrModel.name === 'Y')) {\n            continue;\n          }\n\n          transform = ideo._layout.getChromosomeSetTranslate(chrSetNumber);\n          chrSetNumber += 1;\n\n          // Append chromosome set container\n          var container = __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](ideo.selector).append('g').attr('class', 'chromosome-set-container').attr('data-set-number', j).attr('transform', transform).attr('id', chrModel.id + '-chromosome-set');\n\n          if ('sex' in ideo.config && ploidy === 2 && ideo.sexChromosomes.index + 1 === chrIndex) {\n            ideo.drawSexChromosomes(bandsArray, taxid, container, defs, j, chrs);\n            continue;\n          }\n\n          var shape;\n          var numChrsInSet = 1;\n          if (ploidy > 1) {\n            numChrsInSet = this._ploidy.getChromosomesNumber(j);\n          }\n          for (var k = 0; k < numChrsInSet; k++) {\n            shape = ideo.drawChromosome(chrModel, chrIndex - 1, container, k);\n          }\n\n          defs.append('clipPath').attr('id', chrModel.id + '-chromosome-set-clippath').selectAll('path').data(shape).enter().append('path').attr('d', function (d) {\n            return d.path;\n          }).attr('class', function (d) {\n            return d.class;\n          });\n        }\n\n        if (ideo.config.showBandLabels === true) {\n          ideo.drawBandLabels(ideo.chromosomes);\n        }\n      }\n    }\n\n    // Get ideogram SVG container\n\n  }, {\n    key: 'getSvg',\n    value: function getSvg() {\n      return __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](this.selector).node();\n    }\n\n    /*\n    * Sets instance properties regarding sex chromosomes.\n    * Currently only supported for mammals.\n    * TODO: Support all sexually reproducing taxa\n    *   XY sex-determination (mammals):\n    *     - Male: XY <- heterogametic\n    *     - Female: XX\n    *   ZW sex-determination (birds):\n    *     - Male: ZZ\n    *     - Female: ZW <- heterogametic\n    *   X0 sex-determination (some insects):\n    *     - Male: X0, i.e. only X <- heterogametic?\n    *     - Female: XX\n    * TODO: Support sex chromosome aneuploidies in mammals\n    *     - Turner syndrome: X0\n    *     - Klinefelter syndome: XXY\n    *  More types:\n    *  https:*en.wikipedia.org/wiki/Category:Sex_chromosome_aneuploidies\n    */\n\n  }, {\n    key: 'setSexChromosomes',\n    value: function setSexChromosomes(chrs) {\n      if (this.config.ploidy !== 2 || !this.config.sex) {\n        return;\n      }\n\n      var ideo = this,\n          sexChrs = { X: 1, Y: 1 },\n          chr,\n          i;\n\n      ideo.sexChromosomes.list = [];\n\n      for (i = 0; i < chrs.length; i++) {\n        chr = chrs[i];\n\n        if (ideo.config.sex === 'male' && chr in sexChrs) {\n          ideo.sexChromosomes.list.push(chr);\n          if (!ideo.sexChromosomes.index) {\n            ideo.sexChromosomes.index = i;\n          }\n        } else if (chr === 'X') {\n          ideo.sexChromosomes.list.push(chr, chr);\n          ideo.sexChromosomes.index = i;\n        }\n      }\n    }\n\n    /*\n    * Completes default ideogram initialization\n    * by calling downstream functions to\n    * process raw band data into full JSON objects,\n    * render chromosome and cytoband figures and labels,\n    * apply initial graphical transformations,\n    * hide overlapping band labels, and\n    * execute callbacks defined by client code\n    */\n\n  }, {\n    key: 'processBandData',\n    value: function processBandData() {\n      var bandsArray,\n          maxLength,\n          i,\n          j,\n          k,\n          chromosome,\n          bands,\n          chrLength,\n          chr,\n          bandData,\n          bandsByChr,\n          taxid,\n          taxids,\n          chrs,\n          chrsByTaxid,\n          ideo = this;\n\n      bandsArray = [];\n      maxLength = 0;\n\n      if (ideo.config.multiorganism === true) {\n        ideo.coordinateSystem = 'bp';\n        taxids = ideo.config.taxids;\n        for (i = 0; i < taxids.length; i++) {\n          taxid = taxids[i];\n        }\n      } else {\n        if (typeof ideo.config.taxid === 'undefined') {\n          ideo.config.taxid = ideo.config.taxids[0];\n        }\n        taxid = ideo.config.taxid;\n        taxids = [taxid];\n        ideo.config.taxids = taxids;\n      }\n\n      if ('chromosomes' in ideo.config) {\n        chrs = ideo.config.chromosomes;\n      }\n      if (ideo.config.multiorganism) {\n        chrsByTaxid = chrs;\n      }\n\n      ideo.config.chromosomes = {};\n\n      var t0B = new Date().getTime();\n\n      for (j = 0; j < taxids.length; j++) {\n        taxid = taxids[j];\n\n        if (ideo.config.multiorganism) {\n          chrs = chrsByTaxid[taxid];\n        }\n\n        if (ideo.coordinateSystem === 'iscn' || ideo.config.multiorganism) {\n          bandData = ideo.bandData[taxid];\n\n          bandsByChr = ideo.getBands(bandData, taxid, chrs);\n\n          chrs = Object.keys(bandsByChr).sort(function (a, b) {\n            return Ideogram.naturalSort(a, b);\n          });\n\n          ideo.config.chromosomes[taxid] = chrs.slice();\n          ideo.numChromosomes += ideo.config.chromosomes[taxid].length;\n\n          for (k = 0; k < chrs.length; k++) {\n            chromosome = chrs[k];\n            bands = bandsByChr[chromosome];\n            bandsArray.push(bands);\n\n            chrLength = {\n              iscn: bands[bands.length - 1].iscn.stop,\n              bp: bands[bands.length - 1].bp.stop\n            };\n\n            if (chrLength.iscn > ideo.maxLength.iscn) {\n              ideo.maxLength.iscn = chrLength.iscn;\n            }\n\n            if (chrLength.bp > ideo.maxLength.bp) {\n              ideo.maxLength.bp = chrLength.bp;\n            }\n          }\n        } else if (ideo.coordinateSystem === 'bp') {\n          // If lacking band-level data\n\n          ideo.config.chromosomes[taxid] = chrs.slice();\n          ideo.numChromosomes += ideo.config.chromosomes[taxid].length;\n\n          for (k = 0; k < chrs.length; k++) {\n            chr = chrs[k];\n            if (chr.length > ideo.maxLength.bp) {\n              ideo.maxLength.bp = chr.length;\n            }\n          }\n        }\n      }\n\n      var t1B = new Date().getTime();\n      if (ideo.debug) {\n        console.log('Time in processBandData: ' + (t1B - t0B) + ' ms');\n      }\n\n      return bandsArray;\n    }\n\n    /**\n    * Initializes an ideogram.\n    * Sets some high-level properties based on instance configuration,\n    * fetches band and annotation data if needed, and\n    * writes an SVG element to the document to contain the ideogram\n    */\n\n  }, {\n    key: 'init',\n    value: function init() {\n      var taxid, i, svgClass;\n\n      var ideo = this;\n\n      var t0 = new Date().getTime();\n\n      var bandsArray = [],\n          numBandDataResponses = 0,\n          resolution = this.config.resolution,\n          accession;\n\n      var promise = new __WEBPACK_IMPORTED_MODULE_2_es6_promise__[\"Promise\"](function (resolve) {\n        ideo.getTaxids(resolve);\n      });\n\n      promise.then(function (taxids) {\n        taxid = taxids[0];\n        ideo.config.taxid = taxid;\n        ideo.config.taxids = taxids;\n\n        var assemblies, bandFileName;\n\n        var bandDataFileNames = {\n          9606: '',\n          10090: ''\n        };\n\n        for (i = 0; i < taxids.length; i++) {\n          taxid = String(taxids[i]);\n\n          if (!ideo.config.assembly) {\n            ideo.config.assembly = 'default';\n          }\n          assemblies = ideo.organisms[taxid].assemblies;\n          accession = assemblies[ideo.config.assembly];\n\n          bandFileName = [];\n          bandFileName.push(Ideogram.slugify(ideo.organisms[taxid].scientificName));\n          if (accession !== assemblies.default) {\n            bandFileName.push(accession);\n          }\n          if (taxid === '9606' && (accession !== assemblies.default || resolution !== 850)) {\n            bandFileName.push(resolution);\n          }\n          bandFileName = bandFileName.join('-') + '.js';\n\n          if (taxid === '9606' || taxid === '10090') {\n            bandDataFileNames[taxid] = bandFileName;\n          }\n\n          if (typeof chrBands === 'undefined' && taxid in bandDataFileNames) {\n            __WEBPACK_IMPORTED_MODULE_0_d3__[\"request\"](ideo.config.dataDir + bandDataFileNames[taxid]).on('beforesend', function (data) {\n              // Ensures correct taxid is processed in response callback; using\n              // simply 'taxid' variable gives the last *requested* taxid, which\n              // fails when dealing with multiple taxa.\n              data.taxid = taxid;\n            }).get(function (error, data) {\n              eval(data.response);\n\n              ideo.bandData[data.taxid] = chrBands;\n              numBandDataResponses += 1;\n\n              if (numBandDataResponses === taxids.length) {\n                bandsArray = ideo.processBandData();\n                writeContainer();\n              }\n            });\n          } else {\n            if (typeof chrBands !== 'undefined') {\n              // If bands already available,\n              // e.g. via <script> tag in initial page load\n              ideo.bandData[taxid] = chrBands;\n            }\n            bandsArray = ideo.processBandData();\n            writeContainer();\n          }\n        }\n      });\n\n      function writeContainer() {\n\n        if (ideo.config.annotationsPath) {\n          ideo.fetchAnnots(ideo.config.annotationsPath);\n        }\n\n        // If ploidy description is a string, then convert it to the canonical\n        // array format.  String ploidyDesc is used when depicting e.g. parental\n        // origin each member of chromosome pair in a human genome.\n        // See ploidy_basic.html for usage example.\n        if ('ploidyDesc' in ideo.config && typeof ideo.config.ploidyDesc === 'string') {\n          var tmp = [];\n          for (var i = 0; i < ideo.numChromosomes; i++) {\n            tmp.push(ideo.config.ploidyDesc);\n          }\n          ideo.config.ploidyDesc = tmp;\n        }\n        // Organism ploidy description\n        ideo._ploidy = new __WEBPACK_IMPORTED_MODULE_3__ploidy__[\"a\" /* Ploidy */](ideo.config);\n\n        // Chromosome's layout\n        ideo._layout = __WEBPACK_IMPORTED_MODULE_4__layouts_layout__[\"a\" /* Layout */].getInstance(ideo.config, ideo);\n\n        svgClass = '';\n        if (ideo.config.showChromosomeLabels) {\n          if (ideo.config.orientation === 'horizontal') {\n            svgClass += 'labeledLeft ';\n          } else {\n            svgClass += 'labeled ';\n          }\n        }\n\n        if (ideo.config.annotationsLayout && ideo.config.annotationsLayout === 'overlay') {\n          svgClass += 'faint';\n        }\n\n        var gradients = ideo.getBandColorGradients();\n        var svgWidth = ideo._layout.getWidth(taxid);\n        var svgHeight = ideo._layout.getHeight(taxid);\n\n        __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](ideo.config.container).append('div').append('svg').attr('id', '_ideogram').attr('class', svgClass).attr('width', svgWidth).attr('height', svgHeight).html(gradients);\n\n        finishInit();\n      }\n\n      function finishInit() {\n        try {\n          var t0A = new Date().getTime();\n\n          var i;\n\n          ideo.initDrawChromosomes(bandsArray);\n\n          // Waits for potentially large annotation dataset\n          // to be received by the client, then triggers annotation processing\n          if (ideo.config.annotationsPath) {\n            var pa = function pa() {\n              if (typeof ideo.timeout !== 'undefined') {\n                window.clearTimeout(ideo.timeout);\n              }\n\n              ideo.annots = ideo.processAnnotData(ideo.rawAnnots);\n              ideo.drawProcessedAnnots(ideo.annots);\n\n              if (typeof crossfilter !== 'undefined' && ideo.initCrossFilter) {\n                ideo.initCrossFilter();\n              }\n            };\n\n            if (ideo.rawAnnots) {\n              pa();\n            } else {\n              (function checkAnnotData() {\n                ideo.timeout = setTimeout(function () {\n                  if (!ideo.rawAnnots) {\n                    checkAnnotData();\n                  } else {\n                    pa();\n                  }\n                }, 50);\n              })();\n            }\n          }\n\n          if (ideo.config.showBandLabels === true) {\n            var bandsToShow = ideo.bandsToShow.join(',');\n\n            // d3.selectAll resolves to querySelectorAll (QSA).\n            // QSA takes a surprisingly long time to complete,\n            // and scales with the number of selectors.\n            // Most bands are hidden, so we can optimize by\n            // Hiding all bands, then QSA'ing and displaying the\n            // relatively few bands that are shown.\n            var t0C = new Date().getTime();\n            __WEBPACK_IMPORTED_MODULE_0_d3__[\"selectAll\"](ideo.selector + ' .bandLabel, .bandLabelStalk').style('display', 'none');\n            __WEBPACK_IMPORTED_MODULE_0_d3__[\"selectAll\"](bandsToShow).style('display', '');\n            var t1C = new Date().getTime();\n            if (ideo.debug) {\n              console.log('Time in showing bands: ' + (t1C - t0C) + ' ms');\n            }\n\n            if (ideo.config.orientation === 'vertical') {\n              var chrID;\n              for (i = 0; i < ideo.chromosomesArray.length; i++) {\n                chrID = '#' + ideo.chromosomesArray[i].id;\n                ideo.rotateChromosomeLabels(__WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](chrID), i);\n              }\n            }\n          }\n\n          if (ideo.config.showChromosomeLabels === true) {\n            ideo.drawChromosomeLabels(ideo.chromosomes);\n          }\n\n          if (ideo.config.brush === true) {\n            ideo.createBrush();\n          }\n\n          if (ideo.config.annotations) {\n            ideo.drawAnnots(ideo.config.annotations);\n          }\n\n          var t1A = new Date().getTime();\n          if (ideo.debug) {\n            console.log('Time in drawChromosome: ' + (t1A - t0A) + ' ms');\n          }\n\n          var t1 = new Date().getTime();\n          if (ideo.debug) {\n            console.log('Time constructing ideogram: ' + (t1 - t0) + ' ms');\n          }\n\n          if (ideo.onLoadCallback) {\n            ideo.onLoadCallback();\n          }\n\n          if (!('rotatable' in ideo.config && ideo.config.rotatable === false)) {\n            __WEBPACK_IMPORTED_MODULE_0_d3__[\"selectAll\"](ideo.selector + ' .chromosome').on('click', function () {\n              ideo.rotateAndToggleDisplay(this);\n            });\n          } else {\n            __WEBPACK_IMPORTED_MODULE_0_d3__[\"selectAll\"](ideo.selector + ' .chromosome').style('cursor', 'default');\n          }\n        } catch (e) {\n          // console.log(e);\n          throw e;\n        }\n      }\n    }\n  }], [{\n    key: 'slugify',\n\n\n    /**\n    * e.g. \"Homo sapiens\" -> \"homo-sapiens\"\n    */\n    value: function slugify(value) {\n      return value.toLowerCase().replace(' ', '-');\n    }\n  }, {\n    key: 'naturalSort',\n    value: function naturalSort(a, b) {\n      // https://github.com/overset/javascript-natural-sort\n      var q,\n          r,\n          c = /(^([+\\-]?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?(?=\\D|\\s|$))|^0x[\\da-fA-F]+$|\\d+)/g,\n          d = /^\\s+|\\s+$/g,\n          e = /\\s+/g,\n          f = /(^([\\w ]+,?[\\w ]+)?[\\w ]+,?[\\w ]+\\d+:\\d+(:\\d+)?[\\w ]?|^\\d{1,4}[\\/\\-]\\d{1,4}[\\/\\-]\\d{1,4}|^\\w+, \\w+ \\d+, \\d{4})/,\n          g = /^0x[0-9a-f]+$/i,\n          h = /^0/,\n          i = function i(a) {\n        return (Ideogram.naturalSort.insensitive && (\"\" + a).toLowerCase() || \"\" + a).replace(d, \"\");\n      },\n          j = i(a),\n          k = i(b),\n          l = j.replace(c, \"\\0$1\\0\").replace(/\\0$/, \"\").replace(/^\\0/, \"\").split(\"\\0\"),\n          m = k.replace(c, \"\\0$1\\0\").replace(/\\0$/, \"\").replace(/^\\0/, \"\").split(\"\\0\"),\n          n = parseInt(j.match(g), 16) || 1 !== l.length && Date.parse(j),\n          o = parseInt(k.match(g), 16) || n && k.match(f) && Date.parse(k) || null,\n          p = function p(a, b) {\n        return (!a.match(h) || 1 == b) && parseFloat(a) || a.replace(e, \" \").replace(d, \"\") || 0;\n      };if (o) {\n        if (n < o) return -1;if (n > o) return 1;\n      }for (var s = 0, t = l.length, u = m.length, v = Math.max(t, u); s < v; s++) {\n        if (q = p(l[s] || \"\", t), r = p(m[s] || \"\", u), isNaN(q) !== isNaN(r)) return isNaN(q) ? 1 : -1;if (/[^\\x00-\\x80]/.test(q + r) && q.localeCompare) {\n          var w = q.localeCompare(r);return w / Math.abs(w);\n        }if (q < r) return -1;if (q > r) return 1;\n      }\n    }\n  }, {\n    key: 'd3',\n    get: function get() {\n      return __WEBPACK_IMPORTED_MODULE_0_d3__;\n    }\n  }]);\n\n  return Ideogram;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Ideogram);\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n!function(e,n){ true?module.exports=n(__webpack_require__(5)):\"function\"==typeof define&&define.amd?define([\"d3-request\"],n):(e.d3=e.d3||{},e.d3.promise=n(e.d3))}(this,function(e){\"use strict\";function n(e,n){return function(){for(var t=arguments.length,r=Array(t),o=0;t>o;o++)r[o]=arguments[o];return new Promise(function(t,o){var u=function(e,n){return e?void o(Error(e)):void t(n)};n.apply(e,r.concat(u))})}}var t={};return[\"csv\",\"tsv\",\"json\",\"xml\",\"text\",\"html\"].forEach(function(r){t[r]=n(e,e[r])}),t});\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// https://d3js.org/d3-request/ Version 1.0.5. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\t true ? factory(exports, __webpack_require__(6), __webpack_require__(7), __webpack_require__(8)) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-collection', 'd3-dispatch', 'd3-dsv'], factory) :\n\t(factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3));\n}(this, (function (exports,d3Collection,d3Dispatch,d3Dsv) { 'use strict';\n\nvar request = function(url, callback) {\n  var request,\n      event = d3Dispatch.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = d3Collection.map(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv = dsv(\"text/csv\", d3Dsv.csvParse);\n\nvar tsv = dsv(\"text/tab-separated-values\", d3Dsv.tsvParse);\n\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv;\nexports.tsv = tsv;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// https://d3js.org/d3-collection/ Version 1.0.0. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n   true ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  var prefix = \"$\";\n\n  function Map() {}\n\n  Map.prototype = map.prototype = {\n    constructor: Map,\n    has: function(key) {\n      return (prefix + key) in this;\n    },\n    get: function(key) {\n      return this[prefix + key];\n    },\n    set: function(key, value) {\n      this[prefix + key] = value;\n      return this;\n    },\n    remove: function(key) {\n      var property = prefix + key;\n      return property in this && delete this[property];\n    },\n    clear: function() {\n      for (var property in this) if (property[0] === prefix) delete this[property];\n    },\n    keys: function() {\n      var keys = [];\n      for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n      return keys;\n    },\n    values: function() {\n      var values = [];\n      for (var property in this) if (property[0] === prefix) values.push(this[property]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n      return entries;\n    },\n    size: function() {\n      var size = 0;\n      for (var property in this) if (property[0] === prefix) ++size;\n      return size;\n    },\n    empty: function() {\n      for (var property in this) if (property[0] === prefix) return false;\n      return true;\n    },\n    each: function(f) {\n      for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n    }\n  };\n\n  function map(object, f) {\n    var map = new Map;\n\n    // Copy constructor.\n    if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n    // Index array by numeric index or specified key function.\n    else if (Array.isArray(object)) {\n      var i = -1,\n          n = object.length,\n          o;\n\n      if (f == null) while (++i < n) map.set(i, object[i]);\n      else while (++i < n) map.set(f(o = object[i], i, object), o);\n    }\n\n    // Convert object to map.\n    else if (object) for (var key in object) map.set(key, object[key]);\n\n    return map;\n  }\n\n  function nest() {\n    var keys = [],\n        sortKeys = [],\n        sortValues,\n        rollup,\n        nest;\n\n    function apply(array, depth, createResult, setResult) {\n      if (depth >= keys.length) return rollup != null\n          ? rollup(array) : (sortValues != null\n          ? array.sort(sortValues)\n          : array);\n\n      var i = -1,\n          n = array.length,\n          key = keys[depth++],\n          keyValue,\n          value,\n          valuesByKey = map(),\n          values,\n          result = createResult();\n\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n          values.push(value);\n        } else {\n          valuesByKey.set(keyValue, [value]);\n        }\n      }\n\n      valuesByKey.each(function(values, key) {\n        setResult(result, key, apply(values, depth, createResult, setResult));\n      });\n\n      return result;\n    }\n\n    function entries(map, depth) {\n      if (++depth > keys.length) return map;\n      var array, sortKey = sortKeys[depth - 1];\n      if (rollup != null && depth >= keys.length) array = map.entries();\n      else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n      return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n    }\n\n    return nest = {\n      object: function(array) { return apply(array, 0, createObject, setObject); },\n      map: function(array) { return apply(array, 0, createMap, setMap); },\n      entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n      key: function(d) { keys.push(d); return nest; },\n      sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n      sortValues: function(order) { sortValues = order; return nest; },\n      rollup: function(f) { rollup = f; return nest; }\n    };\n  }\n\n  function createObject() {\n    return {};\n  }\n\n  function setObject(object, key, value) {\n    object[key] = value;\n  }\n\n  function createMap() {\n    return map();\n  }\n\n  function setMap(map, key, value) {\n    map.set(key, value);\n  }\n\n  function Set() {}\n\n  var proto = map.prototype;\n\n  Set.prototype = set.prototype = {\n    constructor: Set,\n    has: proto.has,\n    add: function(value) {\n      value += \"\";\n      this[prefix + value] = value;\n      return this;\n    },\n    remove: proto.remove,\n    clear: proto.clear,\n    values: proto.keys,\n    size: proto.size,\n    empty: proto.empty,\n    each: proto.each\n  };\n\n  function set(object, f) {\n    var set = new Set;\n\n    // Copy constructor.\n    if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n    // Otherwise, assume it’s an array.\n    else if (object) {\n      var i = -1, n = object.length;\n      if (f == null) while (++i < n) set.add(object[i]);\n      else while (++i < n) set.add(f(object[i], i, object));\n    }\n\n    return set;\n  }\n\n  function keys(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  }\n\n  function values(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  }\n\n  function entries(map) {\n    var entries = [];\n    for (var key in map) entries.push({key: key, value: map[key]});\n    return entries;\n  }\n\n  exports.nest = nest;\n  exports.set = set;\n  exports.map = map;\n  exports.keys = keys;\n  exports.values = values;\n  exports.entries = entries;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// https://d3js.org/d3-dispatch/ Version 1.0.0. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n   true ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  var noop = {value: function() {}};\n\n  function dispatch() {\n    for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n      if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n      _[t] = [];\n    }\n    return new Dispatch(_);\n  }\n\n  function Dispatch(_) {\n    this._ = _;\n  }\n\n  function parseTypenames(typenames, types) {\n    return typenames.trim().split(/^|\\s+/).map(function(t) {\n      var name = \"\", i = t.indexOf(\".\");\n      if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n      if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n      return {type: t, name: name};\n    });\n  }\n\n  Dispatch.prototype = dispatch.prototype = {\n    constructor: Dispatch,\n    on: function(typename, callback) {\n      var _ = this._,\n          T = parseTypenames(typename + \"\", _),\n          t,\n          i = -1,\n          n = T.length;\n\n      // If no callback was specified, return the callback of the given type and name.\n      if (arguments.length < 2) {\n        while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n        return;\n      }\n\n      // If a type was specified, set the callback for the given type and name.\n      // Otherwise, if a null callback was specified, remove callbacks of the given name.\n      if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      while (++i < n) {\n        if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n        else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n      }\n\n      return this;\n    },\n    copy: function() {\n      var copy = {}, _ = this._;\n      for (var t in _) copy[t] = _[t].slice();\n      return new Dispatch(copy);\n    },\n    call: function(type, that) {\n      if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n      if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n      for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n    },\n    apply: function(type, that, args) {\n      if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n      for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n    }\n  };\n\n  function get(type, name) {\n    for (var i = 0, n = type.length, c; i < n; ++i) {\n      if ((c = type[i]).name === name) {\n        return c.value;\n      }\n    }\n  }\n\n  function set(type, name, callback) {\n    for (var i = 0, n = type.length; i < n; ++i) {\n      if (type[i].name === name) {\n        type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n        break;\n      }\n    }\n    if (callback != null) type.push({name: name, value: callback});\n    return type;\n  }\n\n  exports.dispatch = dispatch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// https://d3js.org/d3-dsv/ Version 1.0.0. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n   true ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  function objectConverter(columns) {\n    return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n      return JSON.stringify(name) + \": d[\" + i + \"]\";\n    }).join(\",\") + \"}\");\n  }\n\n  function customConverter(columns, f) {\n    var object = objectConverter(columns);\n    return function(row, i) {\n      return f(object(row), i, columns);\n    };\n  }\n\n  // Compute unique columns in order of discovery.\n  function inferColumns(rows) {\n    var columnSet = Object.create(null),\n        columns = [];\n\n    rows.forEach(function(row) {\n      for (var column in row) {\n        if (!(column in columnSet)) {\n          columns.push(columnSet[column] = column);\n        }\n      }\n    });\n\n    return columns;\n  }\n\n  function dsv(delimiter) {\n    var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n        delimiterCode = delimiter.charCodeAt(0);\n\n    function parse(text, f) {\n      var convert, columns, rows = parseRows(text, function(row, i) {\n        if (convert) return convert(row, i - 1);\n        columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n      });\n      rows.columns = columns;\n      return rows;\n    }\n\n    function parseRows(text, f) {\n      var EOL = {}, // sentinel value for end-of-line\n          EOF = {}, // sentinel value for end-of-file\n          rows = [], // output rows\n          N = text.length,\n          I = 0, // current character index\n          n = 0, // the current line number\n          t, // the current token\n          eol; // is the current token followed by EOL?\n\n      function token() {\n        if (I >= N) return EOF; // special case: end of file\n        if (eol) return eol = false, EOL; // special case: end of line\n\n        // special case: quotes\n        var j = I, c;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n        }\n\n        // common case: find next delimiter or newline\n        while (I < N) {\n          var k = 1;\n          c = text.charCodeAt(I++);\n          if (c === 10) eol = true; // \\n\n          else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n          else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n\n        // special case: last token before EOF\n        return text.slice(j);\n      }\n\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n\n      return rows;\n    }\n\n    function format(rows, columns) {\n      if (columns == null) columns = inferColumns(rows);\n      return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n        return columns.map(function(column) {\n          return formatValue(row[column]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    }\n\n    function formatRows(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    }\n\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n\n    function formatValue(text) {\n      return text == null ? \"\"\n          : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n          : text;\n    }\n\n    return {\n      parse: parse,\n      parseRows: parseRows,\n      format: format,\n      formatRows: formatRows\n    };\n  }\n\n  var csv = dsv(\",\");\n\n  var csvParse = csv.parse;\n  var csvParseRows = csv.parseRows;\n  var csvFormat = csv.format;\n  var csvFormatRows = csv.formatRows;\n\n  var tsv = dsv(\"\\t\");\n\n  var tsvParse = tsv.parse;\n  var tsvParseRows = tsv.parseRows;\n  var tsvFormat = tsv.format;\n  var tsvFormatRows = tsv.formatRows;\n\n  exports.dsvFormat = dsv;\n  exports.csvParse = csvParse;\n  exports.csvParseRows = csvParseRows;\n  exports.csvFormat = csvFormat;\n  exports.csvFormatRows = csvFormatRows;\n  exports.tsvParse = tsvParse;\n  exports.tsvParseRows = tsvParseRows;\n  exports.tsvFormat = tsvFormat;\n  exports.tsvFormatRows = tsvFormatRows;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(process, global) {var require;/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n * @version   4.1.1\n */\n\n(function (global, factory) {\n\t true ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.ES6Promise = factory());\n}(this, (function () { 'use strict';\n\nfunction objectOrFunction(x) {\n  var type = typeof x;\n  return x !== null && (type === 'object' || type === 'function');\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\nvar _isArray = undefined;\nif (Array.isArray) {\n  _isArray = Array.isArray;\n} else {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n}\n\nvar isArray = _isArray;\n\nvar len = 0;\nvar vertxNext = undefined;\nvar customSchedulerFn = undefined;\n\nvar asap = function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 2, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    if (customSchedulerFn) {\n      customSchedulerFn(flush);\n    } else {\n      scheduleFlush();\n    }\n  }\n};\n\nfunction setScheduler(scheduleFn) {\n  customSchedulerFn = scheduleFn;\n}\n\nfunction setAsap(asapFn) {\n  asap = asapFn;\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && ({}).toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // see https://github.com/cujojs/when/issues/410 for details\n  return function () {\n    return process.nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  if (typeof vertxNext !== 'undefined') {\n    return function () {\n      vertxNext(flush);\n    };\n  }\n\n  return useSetTimeout();\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  // Store setTimeout reference so es6-promise will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var globalSetTimeout = setTimeout;\n  return function () {\n    return globalSetTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue[i];\n    var arg = queue[i + 1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertx() {\n  try {\n    var r = require;\n    var vertx = __webpack_require__(12);\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush = undefined;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && \"function\" === 'function') {\n  scheduleFlush = attemptVertx();\n} else {\n  scheduleFlush = useSetTimeout();\n}\n\nfunction then(onFulfillment, onRejection) {\n  var _arguments = arguments;\n\n  var parent = this;\n\n  var child = new this.constructor(noop);\n\n  if (child[PROMISE_ID] === undefined) {\n    makePromise(child);\n  }\n\n  var _state = parent._state;\n\n  if (_state) {\n    (function () {\n      var callback = _arguments[_state - 1];\n      asap(function () {\n        return invokeCallback(_state, child, callback, parent._result);\n      });\n    })();\n  } else {\n    subscribe(parent, child, onFulfillment, onRejection);\n  }\n\n  return child;\n}\n\n/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {Any} value value that the returned promise will be resolved with\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve$1(object) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop);\n  resolve(promise, object);\n  return promise;\n}\n\nvar PROMISE_ID = Math.random().toString(36).substring(16);\n\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nvar GET_THEN_ERROR = new ErrorObject();\n\nfunction selfFulfillment() {\n  return new TypeError(\"You cannot resolve a promise with itself\");\n}\n\nfunction cannotReturnOwn() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction getThen(promise) {\n  try {\n    return promise.then;\n  } catch (error) {\n    GET_THEN_ERROR.error = error;\n    return GET_THEN_ERROR;\n  }\n}\n\nfunction tryThen(then$$1, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then$$1.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then$$1) {\n  asap(function (promise) {\n    var sealed = false;\n    var error = tryThen(then$$1, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        resolve(promise, value);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      return resolve(promise, value);\n    }, function (reason) {\n      return reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then$$1) {\n  if (maybeThenable.constructor === promise.constructor && then$$1 === then && maybeThenable.constructor.resolve === resolve$1) {\n    handleOwnThenable(promise, maybeThenable);\n  } else {\n    if (then$$1 === GET_THEN_ERROR) {\n      reject(promise, GET_THEN_ERROR.error);\n      GET_THEN_ERROR.error = null;\n    } else if (then$$1 === undefined) {\n      fulfill(promise, maybeThenable);\n    } else if (isFunction(then$$1)) {\n      handleForeignThenable(promise, maybeThenable, then$$1);\n    } else {\n      fulfill(promise, maybeThenable);\n    }\n  }\n}\n\nfunction resolve(promise, value) {\n  if (promise === value) {\n    reject(promise, selfFulfillment());\n  } else if (objectOrFunction(value)) {\n    handleMaybeThenable(promise, value, getThen(value));\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onerror) {\n    promise._onerror(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length !== 0) {\n    asap(publish, promise);\n  }\n}\n\nfunction reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n\n  asap(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var _subscribers = parent._subscribers;\n  var length = _subscribers.length;\n\n  parent._onerror = null;\n\n  _subscribers[length] = child;\n  _subscribers[length + FULFILLED] = onFulfillment;\n  _subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    asap(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = undefined,\n      callback = undefined,\n      detail = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, detail);\n    } else {\n      callback(detail);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction ErrorObject() {\n  this.error = null;\n}\n\nvar TRY_CATCH_ERROR = new ErrorObject();\n\nfunction tryCatch(callback, detail) {\n  try {\n    return callback(detail);\n  } catch (e) {\n    TRY_CATCH_ERROR.error = e;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction invokeCallback(settled, promise, callback, detail) {\n  var hasCallback = isFunction(callback),\n      value = undefined,\n      error = undefined,\n      succeeded = undefined,\n      failed = undefined;\n\n  if (hasCallback) {\n    value = tryCatch(callback, detail);\n\n    if (value === TRY_CATCH_ERROR) {\n      failed = true;\n      error = value.error;\n      value.error = null;\n    } else {\n      succeeded = true;\n    }\n\n    if (promise === value) {\n      reject(promise, cannotReturnOwn());\n      return;\n    }\n  } else {\n    value = detail;\n    succeeded = true;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && succeeded) {\n      resolve(promise, value);\n    } else if (failed) {\n      reject(promise, error);\n    } else if (settled === FULFILLED) {\n      fulfill(promise, value);\n    } else if (settled === REJECTED) {\n      reject(promise, value);\n    }\n}\n\nfunction initializePromise(promise, resolver) {\n  try {\n    resolver(function resolvePromise(value) {\n      resolve(promise, value);\n    }, function rejectPromise(reason) {\n      reject(promise, reason);\n    });\n  } catch (e) {\n    reject(promise, e);\n  }\n}\n\nvar id = 0;\nfunction nextId() {\n  return id++;\n}\n\nfunction makePromise(promise) {\n  promise[PROMISE_ID] = id++;\n  promise._state = undefined;\n  promise._result = undefined;\n  promise._subscribers = [];\n}\n\nfunction Enumerator$1(Constructor, input) {\n  this._instanceConstructor = Constructor;\n  this.promise = new Constructor(noop);\n\n  if (!this.promise[PROMISE_ID]) {\n    makePromise(this.promise);\n  }\n\n  if (isArray(input)) {\n    this.length = input.length;\n    this._remaining = input.length;\n\n    this._result = new Array(this.length);\n\n    if (this.length === 0) {\n      fulfill(this.promise, this._result);\n    } else {\n      this.length = this.length || 0;\n      this._enumerate(input);\n      if (this._remaining === 0) {\n        fulfill(this.promise, this._result);\n      }\n    }\n  } else {\n    reject(this.promise, validationError());\n  }\n}\n\nfunction validationError() {\n  return new Error('Array Methods must be provided an Array');\n}\n\nEnumerator$1.prototype._enumerate = function (input) {\n  for (var i = 0; this._state === PENDING && i < input.length; i++) {\n    this._eachEntry(input[i], i);\n  }\n};\n\nEnumerator$1.prototype._eachEntry = function (entry, i) {\n  var c = this._instanceConstructor;\n  var resolve$$1 = c.resolve;\n\n  if (resolve$$1 === resolve$1) {\n    var _then = getThen(entry);\n\n    if (_then === then && entry._state !== PENDING) {\n      this._settledAt(entry._state, i, entry._result);\n    } else if (typeof _then !== 'function') {\n      this._remaining--;\n      this._result[i] = entry;\n    } else if (c === Promise$2) {\n      var promise = new c(noop);\n      handleMaybeThenable(promise, entry, _then);\n      this._willSettleAt(promise, i);\n    } else {\n      this._willSettleAt(new c(function (resolve$$1) {\n        return resolve$$1(entry);\n      }), i);\n    }\n  } else {\n    this._willSettleAt(resolve$$1(entry), i);\n  }\n};\n\nEnumerator$1.prototype._settledAt = function (state, i, value) {\n  var promise = this.promise;\n\n  if (promise._state === PENDING) {\n    this._remaining--;\n\n    if (state === REJECTED) {\n      reject(promise, value);\n    } else {\n      this._result[i] = value;\n    }\n  }\n\n  if (this._remaining === 0) {\n    fulfill(promise, this._result);\n  }\n};\n\nEnumerator$1.prototype._willSettleAt = function (promise, i) {\n  var enumerator = this;\n\n  subscribe(promise, undefined, function (value) {\n    return enumerator._settledAt(FULFILLED, i, value);\n  }, function (reason) {\n    return enumerator._settledAt(REJECTED, i, reason);\n  });\n};\n\n/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all$1(entries) {\n  return new Enumerator$1(this, entries).promise;\n}\n\n/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} promises array of promises to observe\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race$1(entries) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (!isArray(entries)) {\n    return new Constructor(function (_, reject) {\n      return reject(new TypeError('You must pass an array to race.'));\n    });\n  } else {\n    return new Constructor(function (resolve, reject) {\n      var length = entries.length;\n      for (var i = 0; i < length; i++) {\n        Constructor.resolve(entries[i]).then(resolve, reject);\n      }\n    });\n  }\n}\n\n/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {Any} reason value that the returned promise will be rejected with.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject$1(reason) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop);\n  reject(promise, reason);\n  return promise;\n}\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise's eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @param {function} resolver\n  Useful for tooling.\n  @constructor\n*/\nfunction Promise$2(resolver) {\n  this[PROMISE_ID] = nextId();\n  this._result = this._state = undefined;\n  this._subscribers = [];\n\n  if (noop !== resolver) {\n    typeof resolver !== 'function' && needsResolver();\n    this instanceof Promise$2 ? initializePromise(this, resolver) : needsNew();\n  }\n}\n\nPromise$2.all = all$1;\nPromise$2.race = race$1;\nPromise$2.resolve = resolve$1;\nPromise$2.reject = reject$1;\nPromise$2._setScheduler = setScheduler;\nPromise$2._setAsap = setAsap;\nPromise$2._asap = asap;\n\nPromise$2.prototype = {\n  constructor: Promise$2,\n\n  /**\n    The primary way of interacting with a promise is through its `then` method,\n    which registers callbacks to receive either a promise's eventual value or the\n    reason why the promise cannot be fulfilled.\n  \n    ```js\n    findUser().then(function(user){\n      // user is available\n    }, function(reason){\n      // user is unavailable, and you are given the reason why\n    });\n    ```\n  \n    Chaining\n    --------\n  \n    The return value of `then` is itself a promise.  This second, 'downstream'\n    promise is resolved with the return value of the first promise's fulfillment\n    or rejection handler, or rejected if the handler throws an exception.\n  \n    ```js\n    findUser().then(function (user) {\n      return user.name;\n    }, function (reason) {\n      return 'default name';\n    }).then(function (userName) {\n      // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n      // will be `'default name'`\n    });\n  \n    findUser().then(function (user) {\n      throw new Error('Found user, but still unhappy');\n    }, function (reason) {\n      throw new Error('`findUser` rejected and we're unhappy');\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n      // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n    });\n    ```\n    If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n  \n    ```js\n    findUser().then(function (user) {\n      throw new PedagogicalException('Upstream error');\n    }).then(function (value) {\n      // never reached\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // The `PedgagocialException` is propagated all the way down to here\n    });\n    ```\n  \n    Assimilation\n    ------------\n  \n    Sometimes the value you want to propagate to a downstream promise can only be\n    retrieved asynchronously. This can be achieved by returning a promise in the\n    fulfillment or rejection handler. The downstream promise will then be pending\n    until the returned promise is settled. This is called *assimilation*.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // The user's comments are now available\n    });\n    ```\n  \n    If the assimliated promise rejects, then the downstream promise will also reject.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // If `findCommentsByAuthor` fulfills, we'll have the value here\n    }, function (reason) {\n      // If `findCommentsByAuthor` rejects, we'll have the reason here\n    });\n    ```\n  \n    Simple Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let result;\n  \n    try {\n      result = findResult();\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n    findResult(function(result, err){\n      if (err) {\n        // failure\n      } else {\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findResult().then(function(result){\n      // success\n    }, function(reason){\n      // failure\n    });\n    ```\n  \n    Advanced Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let author, books;\n  \n    try {\n      author = findAuthor();\n      books  = findBooksByAuthor(author);\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n  \n    function foundBooks(books) {\n  \n    }\n  \n    function failure(reason) {\n  \n    }\n  \n    findAuthor(function(author, err){\n      if (err) {\n        failure(err);\n        // failure\n      } else {\n        try {\n          findBoooksByAuthor(author, function(books, err) {\n            if (err) {\n              failure(err);\n            } else {\n              try {\n                foundBooks(books);\n              } catch(reason) {\n                failure(reason);\n              }\n            }\n          });\n        } catch(error) {\n          failure(err);\n        }\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findAuthor().\n      then(findBooksByAuthor).\n      then(function(books){\n        // found books\n    }).catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method then\n    @param {Function} onFulfilled\n    @param {Function} onRejected\n    Useful for tooling.\n    @return {Promise}\n  */\n  then: then,\n\n  /**\n    `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n    as the catch block of a try/catch statement.\n  \n    ```js\n    function findAuthor(){\n      throw new Error('couldn't find that author');\n    }\n  \n    // synchronous\n    try {\n      findAuthor();\n    } catch(reason) {\n      // something went wrong\n    }\n  \n    // async with promises\n    findAuthor().catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method catch\n    @param {Function} onRejection\n    Useful for tooling.\n    @return {Promise}\n  */\n  'catch': function _catch(onRejection) {\n    return this.then(null, onRejection);\n  }\n};\n\n/*global self*/\nfunction polyfill$1() {\n    var local = undefined;\n\n    if (typeof global !== 'undefined') {\n        local = global;\n    } else if (typeof self !== 'undefined') {\n        local = self;\n    } else {\n        try {\n            local = Function('return this')();\n        } catch (e) {\n            throw new Error('polyfill failed because global object is unavailable in this environment');\n        }\n    }\n\n    var P = local.Promise;\n\n    if (P) {\n        var promiseToString = null;\n        try {\n            promiseToString = Object.prototype.toString.call(P.resolve());\n        } catch (e) {\n            // silently ignored\n        }\n\n        if (promiseToString === '[object Promise]' && !P.cast) {\n            return;\n        }\n    }\n\n    local.Promise = Promise$2;\n}\n\n// Strange compat..\nPromise$2.polyfill = polyfill$1;\nPromise$2.Promise = Promise$2;\n\nreturn Promise$2;\n\n})));\n\n//# sourceMappingURL=es6-promise.map\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10), __webpack_require__(11)))\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\n/* (ignored) */\n\n/***/ }),\n/* 13 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Layout; });\n/* unused harmony export HorizontalLayout */\n/* unused harmony export PairedLayout */\n/* unused harmony export SmallLayout */\n/* unused harmony export VerticalLayout */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_d3__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__views_chromosome_util__ = __webpack_require__(14);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// import {VerticalLayout} from './vertical-layout';\n// import {HorizontalLayout} from './horizontal-layout';\n// import {PairedLayout} from './paired-layout';\n// import {SmallLayout} from './small-layout';\n\n\n\n\n\nvar Layout = function () {\n  function Layout(config, ideo) {\n    _classCallCheck(this, Layout);\n\n    this._config = config;\n    this._ideo = ideo;\n    this._ploidy = this._ideo._ploidy;\n    this._translate = undefined;\n\n    if ('chrSetMargin' in config) {\n      this.chrSetMargin = config.chrSetMargin;\n    } else {\n      var k = this._config.chrMargin;\n      this.chrSetMargin = this._config.ploidy > 1 ? k : 0;\n    }\n\n    // Chromosome band's size.\n    this._tickSize = 8;\n\n    // Chromosome rotation state.\n    this._isRotated = false;\n  }\n\n  // Factory method\n\n\n  _createClass(Layout, [{\n    key: '_getLeftMargin',\n\n\n    // Get chart left margin\n    value: function _getLeftMargin() {\n      return this._margin.left;\n    }\n\n    // Get rotated chromosome y scale\n\n  }, {\n    key: '_getYScale',\n    value: function _getYScale() {\n      // 20 is width of rotated chromosome.\n      return 20 / this._config.chrWidth;\n    }\n\n    // Get chromosome labels\n\n  }, {\n    key: 'getChromosomeLabels',\n    value: function getChromosomeLabels(chrElement) {\n      var util = new __WEBPACK_IMPORTED_MODULE_1__views_chromosome_util__[\"a\" /* ChromosomeUtil */](chrElement);\n\n      return [util.getSetLabel(), util.getLabel()].filter(function (d) {\n        return d.length > 0;\n      });\n    }\n\n    // Rotate chromosome to original position\n\n  }, {\n    key: 'rotateBack',\n    value: function rotateBack() {\n      throw new Error(this._class + '#rotateBack not implemented');\n    }\n\n    // Rotate chromosome to opposite position\n\n  }, {\n    key: 'rotateForward',\n    value: function rotateForward() {\n      throw new Error(this._class + '#rotateForward not implemented');\n    }\n  }, {\n    key: 'rotate',\n    value: function rotate(chrSetNumber, chrNumber, chrElement) {\n      var ideo = this._ideo;\n\n      // Find chromosomes which should be hidden\n      var otherChrs = __WEBPACK_IMPORTED_MODULE_0_d3__[\"selectAll\"](ideo.selector + ' g.chromosome').filter(function () {\n        return this !== chrElement;\n      });\n\n      if (this._isRotated) {\n        // Reset _isRotated flag\n        this._isRotated = false;\n        // Rotate chromosome back\n        this.rotateBack(chrSetNumber, chrNumber, chrElement, function () {\n          // Show all other chromosomes and chromosome labels\n          otherChrs.style('display', null);\n          __WEBPACK_IMPORTED_MODULE_0_d3__[\"selectAll\"](ideo.selector + ' .chrSetLabel, .chrLabel').style('display', null);\n        });\n      } else {\n        // Set _isRotated flag\n        this._isRotated = true;\n\n        // Hide all other chromosomes and chromosome labels\n        otherChrs.style('display', 'none');\n        __WEBPACK_IMPORTED_MODULE_0_d3__[\"selectAll\"](ideo.selector + ' .chrSetLabel, .chrLabel').style('display', 'none');\n\n        // Rotate chromosome\n        this.rotateForward(chrSetNumber, chrNumber, chrElement);\n      }\n    }\n  }, {\n    key: 'getChromosomeLabelClass',\n    value: function getChromosomeLabelClass() {\n      if (this._config.ploidy === 1) {\n        return 'chrLabel';\n      } else {\n        return 'chrSetLabel';\n      }\n    }\n  }, {\n    key: '_getAdditionalOffset',\n    value: function _getAdditionalOffset() {\n      return (this._config.annotationHeight || 0) * (this._config.numAnnotTracks || 1);\n    }\n  }, {\n    key: '_getChromosomeSetSize',\n    value: function _getChromosomeSetSize(chrSetNumber) {\n      // Get last chromosome set size.\n      var setSize = this._ploidy.getSetSize(chrSetNumber);\n\n      // Increase offset by last chromosome set size\n      return setSize * this._config.chrWidth * 2 + this.chrSetMargin;\n    }\n\n    // Get layout margin\n\n  }, {\n    key: 'getMargin',\n    value: function getMargin() {\n      return this._margin;\n    }\n\n    // Get SVG element height\n\n  }, {\n    key: 'getHeight',\n    value: function getHeight() {\n      throw new Error(this._class + '#getHeight not implemented');\n    }\n  }, {\n    key: 'getChromosomeBandTickY1',\n    value: function getChromosomeBandTickY1() {\n      throw new Error(this._class + '#getChromosomeBandTickY1 not implemented');\n    }\n  }, {\n    key: 'getChromosomeBandTickY2',\n    value: function getChromosomeBandTickY2() {\n      throw new Error(this._class + '#getChromosomeBandTickY2 not implemented');\n    }\n\n    // Get chromosome's band translate attribute\n\n  }, {\n    key: 'getChromosomeBandLabelTranslate',\n    value: function getChromosomeBandLabelTranslate() {\n      throw new Error(this._class + '#getChromosomeBandLabelTranslate not implemented');\n    }\n\n    // Get chromosome set label anchor property\n\n  }, {\n    key: 'getChromosomeSetLabelAnchor',\n    value: function getChromosomeSetLabelAnchor() {\n      return 'middle';\n    }\n\n    // Get chromosome's band label text-anchor value\n\n  }, {\n    key: 'getChromosomeBandLabelAnchor',\n    value: function getChromosomeBandLabelAnchor() {\n      throw new Error(this._class + '#getChromosomeBandLabelAnchor not implemented');\n    }\n  }, {\n    key: 'getChromosomeLabelXPosition',\n    value: function getChromosomeLabelXPosition() {\n      throw new Error(this._class + '#getChromosomeLabelXPosition not implemented');\n    }\n\n    // Get chromosome label y position.\n\n  }, {\n    key: 'getChromosomeLabelYPosition',\n    value: function getChromosomeLabelYPosition() {\n      return -5.5;\n    }\n\n    // \"i\" is chromosome number\n\n  }, {\n    key: 'getChromosomeSetLabelYPosition',\n    value: function getChromosomeSetLabelYPosition(i) {\n      if (this._config.ploidy === 1) {\n        return this.getChromosomeLabelYPosition(i);\n      } else {\n        return -2 * this._config.chrWidth;\n      }\n    }\n  }, {\n    key: 'getChromosomeSetLabelXPosition',\n    value: function getChromosomeSetLabelXPosition() {\n      throw new Error(this._class + '#getChromosomeSetLabelXPosition not implemented');\n    }\n  }, {\n    key: 'getChromosomeSetLabelTranslate',\n    value: function getChromosomeSetLabelTranslate() {\n      throw new Error(this._class + '#getChromosomeSetLabelTranslate not implemented');\n    }\n\n    // Get chromosome set translate attribute\n\n  }, {\n    key: 'getChromosomeSetTranslate',\n    value: function getChromosomeSetTranslate() {\n      throw new Error(this._class + '#getChromosomeSetTranslate not implemented');\n    }\n\n    // Get chromosome set translate's y offset\n\n  }, {\n    key: 'getChromosomeSetYTranslate',\n    value: function getChromosomeSetYTranslate() {\n      throw new Error(this._class + '#getChromosomeSetYTranslate not implemented');\n    }\n  }], [{\n    key: 'getInstance',\n    value: function getInstance(config, ideo) {\n      if ('perspective' in config && config.perspective === 'comparative') {\n        return new PairedLayout(config, ideo);\n      } else if ('rows' in config && config.rows > 1) {\n        return new SmallLayout(config, ideo);\n      } else if (config.orientation === 'vertical') {\n        return new VerticalLayout(config, ideo);\n      } else if (config.orientation === 'horizontal') {\n        return new HorizontalLayout(config, ideo);\n      } else {\n        return new VerticalLayout(config, ideo);\n      }\n    }\n  }]);\n\n  return Layout;\n}();\n\nvar HorizontalLayout = function (_Layout) {\n  _inherits(HorizontalLayout, _Layout);\n\n  function HorizontalLayout(config, ideo) {\n    _classCallCheck(this, HorizontalLayout);\n\n    var _this = _possibleConstructorReturn(this, (HorizontalLayout.__proto__ || Object.getPrototypeOf(HorizontalLayout)).call(this, config, ideo));\n\n    _this._class = 'HorizontalLayout';\n    _this._margin = {\n      left: 20,\n      top: 30\n    };\n    return _this;\n  }\n\n  _createClass(HorizontalLayout, [{\n    key: '_getLeftMargin',\n    value: function _getLeftMargin() {\n      var margin = Layout.prototype._getLeftMargin.call(this);\n      if (this._config.ploidy > 1) {\n        margin *= 1.8;\n      }\n\n      return margin;\n    }\n  }, {\n    key: 'rotateForward',\n    value: function rotateForward(setNumber, chrNumber, chrElement, callback) {\n      var xOffset = 30;\n\n      var ideoBox = __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](this._ideo.selector).node().getBoundingClientRect();\n      var chrBox = chrElement.getBoundingClientRect();\n\n      var scaleX = ideoBox.height / (chrBox.width + xOffset / 2) * 0.9;\n      var scaleY = this._getYScale();\n\n      var yOffset = (chrNumber + 1) * (this._config.chrWidth * 2 * scaleY);\n\n      var transform = 'rotate(90) ' + 'translate(' + xOffset + ', -' + yOffset + ') ' + 'scale(' + scaleX + ', ' + scaleY + ')';\n\n      __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](chrElement.parentNode).transition().attr(\"transform\", transform).on('end', callback);\n\n      // Append new chromosome labels\n      var labels = this.getChromosomeLabels(chrElement);\n      __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](this._ideo.getSvg()).append('g').attr('class', 'tmp').selectAll('text').data(labels).enter().append('text').attr('class', function (d, i) {\n        return i === 0 && labels.length === 2 ? 'chrSetLabel' : null;\n      }).attr('x', 30).attr('y', function (d, i) {\n        return (i + 1 + labels.length % 2) * 12;\n      }).style('text-anchor', 'middle').style('opacity', 0).text(String).transition().style('opacity', 1);\n    }\n  }, {\n    key: 'rotateBack',\n    value: function rotateBack(setNumber, chrNumber, chrElement, callback) {\n      var translate = this.getChromosomeSetTranslate(setNumber);\n\n      __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](chrElement.parentNode).transition().attr(\"transform\", translate).on('end', callback);\n\n      __WEBPACK_IMPORTED_MODULE_0_d3__[\"selectAll\"](this._ideo.selector + ' g.tmp').style('opacity', 0).remove();\n    }\n  }, {\n    key: 'getHeight',\n    value: function getHeight(taxId) {\n      // Get last chromosome set offset.\n      var numChromosomes = this._config.chromosomes[taxId].length;\n      var lastSetOffset = this.getChromosomeSetYTranslate(numChromosomes - 1);\n\n      // Get last chromosome set size.\n      var lastSetSize = this._getChromosomeSetSize(numChromosomes - 1);\n\n      // Increase offset by last chromosome set size\n      lastSetOffset += lastSetSize;\n\n      return lastSetOffset + this._getAdditionalOffset() * 2;\n    }\n  }, {\n    key: 'getWidth',\n    value: function getWidth() {\n      return this._config.chrHeight + this._margin.top * 1.5;\n    }\n  }, {\n    key: 'getChromosomeSetLabelAnchor',\n    value: function getChromosomeSetLabelAnchor() {\n      return 'end';\n    }\n  }, {\n    key: 'getChromosomeBandLabelAnchor',\n    value: function getChromosomeBandLabelAnchor() {\n      return null;\n    }\n  }, {\n    key: 'getChromosomeBandTickY1',\n    value: function getChromosomeBandTickY1() {\n      return 2;\n    }\n  }, {\n    key: 'getChromosomeBandTickY2',\n    value: function getChromosomeBandTickY2() {\n      return 10;\n    }\n  }, {\n    key: 'getChromosomeBandLabelTranslate',\n    value: function getChromosomeBandLabelTranslate(band) {\n      var x = this._ideo.round(-this._tickSize + band.px.start + band.px.width / 2);\n      var y = -10;\n\n      return {\n        x: x,\n        y: y,\n        translate: 'translate(' + x + ',' + y + ')'\n      };\n    }\n  }, {\n    key: 'getChromosomeSetLabelTranslate',\n    value: function getChromosomeSetLabelTranslate() {\n      return null;\n    }\n  }, {\n    key: 'getChromosomeSetTranslate',\n    value: function getChromosomeSetTranslate(setNumber) {\n      var leftMargin = this._getLeftMargin();\n      var chromosomeSetYTranslate = this.getChromosomeSetYTranslate(setNumber);\n      return 'translate(' + leftMargin + ', ' + chromosomeSetYTranslate + ')';\n    }\n  }, {\n    key: 'getChromosomeSetYTranslate',\n    value: function getChromosomeSetYTranslate(setNumber) {\n      // If no detailed description provided just use one formula for all cases.\n      if (!this._config.ploidyDesc) {\n        return this._config.chrMargin * (setNumber + 1);\n      }\n\n      // Id detailed description provided start to calculate offsets\n      //  for each chromosome set separately. This should be done only once.\n      if (!this._translate) {\n        // First offset equals to zero.\n        this._translate = [1];\n\n        // Loop through description set\n        for (var i = 1; i < this._config.ploidyDesc.length; i++) {\n          this._translate[i] = this._translate[i - 1] + this._getChromosomeSetSize(i - 1);\n        }\n      }\n\n      return this._translate[setNumber];\n    }\n  }, {\n    key: 'getChromosomeSetLabelXPosition',\n    value: function getChromosomeSetLabelXPosition(i) {\n      if (this._config.ploidy === 1) {\n        return this.getChromosomeLabelXPosition(i);\n      } else {\n        return -20;\n      }\n    }\n  }, {\n    key: 'getChromosomeSetLabelYPosition',\n    value: function getChromosomeSetLabelYPosition(i) {\n      var setSize = this._ploidy.getSetSize(i),\n          config = this._config,\n          chrMargin = config.chrMargin,\n          chrWidth = config.chrWidth,\n          y;\n\n      if (config.ploidy === 1) {\n        y = chrWidth / 2 + 3;\n      } else {\n        y = setSize * chrMargin / 2;\n      }\n\n      return y;\n    }\n  }, {\n    key: 'getChromosomeLabelXPosition',\n    value: function getChromosomeLabelXPosition() {\n      return -8;\n    }\n  }, {\n    key: 'getChromosomeLabelYPosition',\n    value: function getChromosomeLabelYPosition() {\n      return this._config.chrWidth;\n    }\n  }]);\n\n  return HorizontalLayout;\n}(Layout);\n\nvar PairedLayout = function (_Layout2) {\n  _inherits(PairedLayout, _Layout2);\n\n  function PairedLayout(config, ideo) {\n    _classCallCheck(this, PairedLayout);\n\n    var _this2 = _possibleConstructorReturn(this, (PairedLayout.__proto__ || Object.getPrototypeOf(PairedLayout)).call(this, config, ideo));\n\n    _this2._class = 'PairedLayout';\n\n    _this2._margin = {\n      left: 30\n    };\n    return _this2;\n  }\n\n  _createClass(PairedLayout, [{\n    key: 'rotateForward',\n    value: function rotateForward(setNumber, chrNumber, chrElement, callback) {\n      var self = this;\n      var ideo = this._ideo;\n\n      // Get ideo container and chromosome set dimensions\n      var ideoBox = __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](ideo.selector).node().getBoundingClientRect();\n      var chrBox = chrElement.getBoundingClientRect();\n\n      // Evaluate dimensions scale coefficients\n      var scaleX = ideoBox.width / chrBox.height * 0.97;\n      var scaleY = this._getYScale();\n\n      // Evaluate y offset of chromosome.\n      // It is different for first and the second one\n      var yOffset = setNumber ? 150 : 25;\n\n      var transform = 'translate(15, ' + yOffset + ') scale(' + scaleX + ', ' + scaleY + ')';\n\n      // Run rotation procedure\n      __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](chrElement.parentNode).transition().attr(\"transform\", transform).on('end', function () {\n        // Run callback function if provided\n        if (callback) {\n          callback();\n        }\n\n        var translateY = 6 * Number(!setNumber);\n\n        // Rotate band labels\n        __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](chrElement.parentNode).selectAll('g.bandLabel text').attr('transform', 'rotate(90) translate(0, ' + translateY + ')').attr('text-anchor', 'middle');\n\n        // Hide syntenic regions\n        __WEBPACK_IMPORTED_MODULE_0_d3__[\"selectAll\"](ideo.selector + ' .syntenicRegion').style('display', 'none');\n      });\n\n      // Append new chromosome labels\n      var labels = this.getChromosomeLabels(chrElement);\n\n      __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](this._ideo.getSvg()).append('g').attr('class', 'tmp').selectAll('text').data(this.getChromosomeLabels(chrElement)).enter().append('text').attr('class', function (d, i) {\n        return i === 0 && labels.length === 2 ? 'chrSetLabel' : null;\n      }).attr('x', 0).attr('y', yOffset + self._config.chrWidth * scaleX / 2 * 1.15).style('opacity', 0).text(String).transition().style('opacity', 1);\n    }\n  }, {\n    key: 'rotateBack',\n    value: function rotateBack(setNumber, chrNumber, chrElement, callback) {\n      var ideo = this._ideo;\n\n      // Get intial transformation string for chromosome set\n      var translate = this.getChromosomeSetTranslate(setNumber);\n\n      // Run rotation procedure\n      __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](chrElement.parentNode).transition().attr('transform', translate).on('end', function () {\n        // Run callback fnuction if provided\n        callback();\n\n        // Show syntenic regions\n        __WEBPACK_IMPORTED_MODULE_0_d3__[\"selectAll\"](ideo.select + ' .syntenicRegion').style('display', null);\n\n        // Reset changed attributes to original state\n        __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](chrElement.parentNode).selectAll('g.bandLabel text').attr('transform', null).attr('text-anchor', setNumber ? null : 'end');\n      });\n\n      __WEBPACK_IMPORTED_MODULE_0_d3__[\"selectAll\"](ideo.selector + ' g.tmp').style('opacity', 0).remove();\n    }\n  }, {\n    key: 'getHeight',\n    value: function getHeight() {\n      return this._config.chrHeight + this._margin.left * 1.5;\n    }\n  }, {\n    key: 'getWidth',\n    value: function getWidth() {\n      return '97%';\n    }\n  }, {\n    key: 'getChromosomeBandTickY1',\n    value: function getChromosomeBandTickY1(chrNumber) {\n      return chrNumber % 2 ? this._config.chrWidth : this._config.chrWidth * 2;\n    }\n  }, {\n    key: 'getChromosomeBandTickY2',\n    value: function getChromosomeBandTickY2(chrNumber) {\n      var width = this._config.chrWidth;\n      return chrNumber % 2 ? width - this._tickSize : width * 2 + this._tickSize;\n    }\n  }, {\n    key: 'getChromosomeBandLabelAnchor',\n    value: function getChromosomeBandLabelAnchor(chrNumber) {\n      return chrNumber % 2 ? null : 'end';\n    }\n  }, {\n    key: 'getChromosomeBandLabelTranslate',\n    value: function getChromosomeBandLabelTranslate(band, chrNumber) {\n      var x = chrNumber % 2 ? 10 : -this._config.chrWidth - 10;\n      var y = this._ideo.round(band.px.start + band.px.width / 2) + 3;\n\n      return {\n        x: y,\n        y: y,\n        translate: 'rotate(-90) translate(' + x + ', ' + y + ')'\n      };\n    }\n  }, {\n    key: 'getChromosomeLabelXPosition',\n    value: function getChromosomeLabelXPosition() {\n      return -this._tickSize;\n    }\n  }, {\n    key: 'getChromosomeSetLabelXPosition',\n    value: function getChromosomeSetLabelXPosition() {\n      return this._config.chrWidth / -2;\n    }\n  }, {\n    key: 'getChromosomeSetLabelTranslate',\n    value: function getChromosomeSetLabelTranslate() {\n      return 'rotate(-90)';\n    }\n  }, {\n    key: 'getChromosomeSetTranslate',\n    value: function getChromosomeSetTranslate(setNumber) {\n      var chromosomeSetYTranslate = this.getChromosomeSetYTranslate(setNumber);\n      return 'rotate(90) ' + 'translate(' + this._margin.left + ', -' + chromosomeSetYTranslate + ')';\n    }\n  }, {\n    key: 'getChromosomeSetYTranslate',\n    value: function getChromosomeSetYTranslate(setNumber) {\n      return 200 * (setNumber + 1);\n    }\n  }]);\n\n  return PairedLayout;\n}(Layout);\n\nvar SmallLayout = function (_Layout3) {\n  _inherits(SmallLayout, _Layout3);\n\n  function SmallLayout(config, ideo) {\n    _classCallCheck(this, SmallLayout);\n\n    var _this3 = _possibleConstructorReturn(this, (SmallLayout.__proto__ || Object.getPrototypeOf(SmallLayout)).call(this, config, ideo));\n\n    _this3._class = 'SmallLayout';\n\n    _this3._margin = {\n      left: 36.5,\n      top: 10\n    };\n    return _this3;\n  }\n\n  _createClass(SmallLayout, [{\n    key: 'rotateForward',\n    value: function rotateForward(setNumber, chrNumber, chrElement, callback) {\n      var ideoBox = __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](this._ideo.selector).node().getBoundingClientRect();\n      var chrBox = chrElement.getBoundingClientRect();\n\n      var scaleX = ideoBox.width / chrBox.height * 0.97;\n      var scaleY = this._getYScale();\n\n      transform = 'translate(5, 25) scale(' + scaleX + ', ' + scaleY + ')';\n\n      __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](chrElement.parentNode).transition().attr('transform', transform).on('end', callback);\n    }\n  }, {\n    key: 'rotateBack',\n    value: function rotateBack(setNumber, chrNumber, chrElement, callback) {\n      var translate = this.getChromosomeSetTranslate(setNumber);\n\n      __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](chrElement.parentNode).transition().attr('transform', translate).on('end', callback);\n    }\n  }, {\n    key: 'getHeight',\n    value: function getHeight() {\n      var chrHeight = this._config.chrHeight;\n      return this._config.rows * (chrHeight + this._margin.top * 1.5);\n    }\n  }, {\n    key: 'getWidth',\n    value: function getWidth() {\n      return '97%';\n    }\n  }, {\n    key: 'getChromosomeBandLabelTranslate',\n    value: function getChromosomeBandLabelTranslate() {}\n  }, {\n    key: 'getChromosomeSetLabelTranslate',\n    value: function getChromosomeSetLabelTranslate() {\n      return 'rotate(-90)';\n    }\n  }, {\n    key: 'getChromosomeSetTranslate',\n    value: function getChromosomeSetTranslate(setNumber) {\n      // Get organisms id list\n      var organisms = [];\n      this._ideo.getTaxids(function (taxIdList) {\n        organisms = taxIdList;\n      });\n      // Get first organism chromosomes amount\n      var size = this._ideo.config.chromosomes[organisms[0]].length;\n      // Amount of chromosomes per number\n      var rowSize = size / this._config.rows;\n\n      var xOffset;\n      var yOffset;\n\n      if (setNumber > rowSize - 1) {\n        xOffset = this._margin.left + this._config.chrHeight * 1.4;\n        yOffset = this.getChromosomeSetYTranslate(setNumber - rowSize);\n      } else {\n        xOffset = this._margin.left;\n        yOffset = this.getChromosomeSetYTranslate(setNumber);\n      }\n\n      return 'rotate(90) translate(' + xOffset + ', -' + yOffset + ')';\n    }\n  }, {\n    key: 'getChromosomeSetYTranslate',\n    value: function getChromosomeSetYTranslate(setNumber) {\n      // Get additional padding caused by annotation tracks\n      var additionalPadding = this._getAdditionalOffset();\n      // If no detailed description provided just use one formula for all cases\n      return this._margin.left * setNumber + this._config.chrWidth + additionalPadding * 2 + additionalPadding * setNumber;\n    }\n  }, {\n    key: 'getChromosomeSetLabelXPosition',\n    value: function getChromosomeSetLabelXPosition(setNumber) {\n      return (this._ploidy.getSetSize(setNumber) * this._config.chrWidth + 20) / -2 + (this._config.ploidy > 1 ? 0 : this._config.chrWidth);\n    }\n  }, {\n    key: 'getChromosomeLabelXPosition',\n    value: function getChromosomeLabelXPosition() {\n      return this._config.chrWidth / -2;\n    }\n  }]);\n\n  return SmallLayout;\n}(Layout);\n\nvar VerticalLayout = function (_Layout4) {\n  _inherits(VerticalLayout, _Layout4);\n\n  function VerticalLayout(config, ideo) {\n    _classCallCheck(this, VerticalLayout);\n\n    var _this4 = _possibleConstructorReturn(this, (VerticalLayout.__proto__ || Object.getPrototypeOf(VerticalLayout)).call(this, config, ideo));\n\n    _this4._class = 'VerticalLayout';\n    // Layout margins\n    _this4._margin = {\n      top: 30,\n      left: 15\n    };\n    return _this4;\n  }\n\n  _createClass(VerticalLayout, [{\n    key: 'rotateForward',\n    value: function rotateForward(setNumber, chrNumber, chrElement, callback) {\n      var self = this;\n\n      var xOffset = 20;\n\n      var ideoBox = __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](this._ideo.selector).node().getBoundingClientRect();\n      var chrBox = chrElement.getBoundingClientRect();\n\n      var scaleX = ideoBox.width / chrBox.height * 0.97;\n      var scaleY = this._getYScale();\n\n      var transform = 'translate(' + xOffset + ', 25) scale(' + scaleX + ', ' + scaleY + ')';\n\n      __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](chrElement.parentNode).transition().attr('transform', transform).on('end', callback);\n\n      // Append new chromosome labels\n      var labels = this.getChromosomeLabels(chrElement);\n      var y = (xOffset + self._config.chrWidth) * 1.3;\n      __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](this._ideo.getSvg()).append('g').attr('class', 'tmp').selectAll('text').data(labels).enter().append('text').attr('class', function (d, i) {\n        return i === 0 && labels.length === 2 ? 'chrSetLabel' : null;\n      }).attr('x', 0).attr('y', y).style('opacity', 0).text(String).transition().style('opacity', 1);\n    }\n  }, {\n    key: 'rotateBack',\n    value: function rotateBack(setNumber, chrNumber, chrElement, callback) {\n      var translate = this.getChromosomeSetTranslate(setNumber);\n\n      __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](chrElement.parentNode).transition().attr('transform', translate).on('end', callback);\n\n      __WEBPACK_IMPORTED_MODULE_0_d3__[\"selectAll\"](this._ideo.selector + ' g.tmp').style('opacity', 0).remove();\n    }\n  }, {\n    key: 'getHeight',\n    value: function getHeight() {\n      return this._config.chrHeight + this._margin.top * 1.5;\n    }\n  }, {\n    key: 'getWidth',\n    value: function getWidth() {\n      return '97%';\n    }\n  }, {\n    key: 'getChromosomeBandLabelTranslate',\n    value: function getChromosomeBandLabelTranslate() {}\n  }, {\n    key: 'getChromosomeSetLabelTranslate',\n    value: function getChromosomeSetLabelTranslate() {\n      return 'rotate(-90)';\n    }\n  }, {\n    key: 'getChromosomeSetTranslate',\n    value: function getChromosomeSetTranslate(setNumber) {\n      var marginTop = this._margin.top;\n      var chromosomeSetYTranslate = this.getChromosomeSetYTranslate(setNumber);\n      return 'rotate(90) ' + 'translate(' + marginTop + ', -' + chromosomeSetYTranslate + ')';\n    }\n  }, {\n    key: 'getChromosomeSetYTranslate',\n    value: function getChromosomeSetYTranslate(setNumber) {\n      // Get additional padding caused by annotation/histogram tracks\n      var pad = this._getAdditionalOffset(),\n          margin = this._config.chrMargin,\n          width = this._config.chrWidth,\n          translate;\n\n      // If no detailed description provided just use one formula for all cases\n      if (!this._config.ploidyDesc) {\n        // TODO:\n        // This part of code contains a lot magic numbers and if\n        // statements for exactly corresponing to original ideogram examples.\n        // But all this stuff should be removed. Calculation of translate\n        // should be a simple formula applied for all cases listed below.\n        // Now they are diffirent because of Layout:_getAdditionalOffset do\n        // not meet for cases when no annotation, when annotation exists and\n        // when histogram used\n\n        if (this._config.annotationsLayout === 'histogram') {\n          return margin / 2 + setNumber * (margin + width + 2) + pad * 2 + 1;\n        } else {\n          translate = width + setNumber * (margin + width) + pad * 2;\n          if (pad > 0) {\n            return translate;\n          } else {\n            return translate + 4 + 2 * setNumber;\n          }\n        }\n      }\n\n      // If detailed description provided start to calculate offsets\n      // for each chromosome set separately. This should be done only once\n      if (!this._translate) {\n        // First offset equals to zero\n        this._translate = [this._ploidy.getSetSize(0) * width * 2];\n        var prevTranslate;\n        // Loop through description set\n        for (var i = 1; i < this._config.ploidyDesc.length; i++) {\n          prevTranslate = this._translate[i - 1];\n          this._translate[i] = prevTranslate + this._getChromosomeSetSize(i - 1);\n        }\n      }\n\n      return this._translate[setNumber];\n    }\n  }, {\n    key: 'getChromosomeSetLabelXPosition',\n    value: function getChromosomeSetLabelXPosition() {\n      return this._config.chrWidth * this._config.ploidy / -2;\n    }\n  }, {\n    key: 'getChromosomeLabelXPosition',\n    value: function getChromosomeLabelXPosition() {\n      return this._config.chrWidth / -2;\n    }\n  }]);\n\n  return VerticalLayout;\n}(Layout);\n\n/***/ }),\n/* 14 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ChromosomeUtil; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_d3__);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\n// Chromosome's view utility class\nvar ChromosomeUtil = function () {\n  function ChromosomeUtil(node) {\n    _classCallCheck(this, ChromosomeUtil);\n\n    this._node = node;\n  }\n\n  _createClass(ChromosomeUtil, [{\n    key: 'getLabel',\n    value: function getLabel() {\n      var label = __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](this._node).select('text.chrLabel').text();\n      return label;\n    }\n\n    // Get chromosome set label\n\n  }, {\n    key: 'getSetLabel',\n    value: function getSetLabel() {\n      var setLabel = __WEBPACK_IMPORTED_MODULE_0_d3__[\"select\"](this._node.parentNode).select('text.chromosome-set-label').text();\n      return setLabel;\n    }\n  }]);\n\n  return ChromosomeUtil;\n}();\n\n/***/ }),\n/* 15 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ModelAdapter; });\n/* unused harmony export ModelNoBandsAdapter */\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ModelAdapter = function () {\n  function ModelAdapter(model) {\n    _classCallCheck(this, ModelAdapter);\n\n    this._model = model;\n    this._class = 'ModelAdapter';\n  }\n\n  _createClass(ModelAdapter, [{\n    key: 'getModel',\n    value: function getModel() {\n      return this._model;\n    }\n  }, {\n    key: 'getCssClass',\n    value: function getCssClass() {\n      return '';\n    }\n  }], [{\n    key: 'getInstance',\n    value: function getInstance(model) {\n      if (model.bands) {\n        return new ModelAdapter(model);\n      } else {\n        return new ModelNoBandsAdapter(model);\n      }\n    }\n  }]);\n\n  return ModelAdapter;\n}();\n\nvar ModelNoBandsAdapter = function (_ModelAdapter) {\n  _inherits(ModelNoBandsAdapter, _ModelAdapter);\n\n  function ModelNoBandsAdapter(model) {\n    _classCallCheck(this, ModelNoBandsAdapter);\n\n    var _this = _possibleConstructorReturn(this, (ModelNoBandsAdapter.__proto__ || Object.getPrototypeOf(ModelNoBandsAdapter)).call(this, model));\n\n    _this._class = 'ModelNoBandsAdapter';\n    return _this;\n  }\n\n  _createClass(ModelNoBandsAdapter, [{\n    key: 'getModel',\n    value: function getModel() {\n      this._model.bands = [];\n\n      // If chromosome width more, then 1 add single band to bands array\n      if (this._model.width > 1) {\n        this._model.bands.push({\n          name: 'q',\n          px: {\n            start: 0,\n            stop: this._model.width,\n            width: this._model.width\n          }\n        });\n      }\n\n      return this._model;\n    }\n  }, {\n    key: 'getCssClass',\n    value: function getCssClass() {\n      return 'noBands';\n    }\n  }]);\n\n  return ModelNoBandsAdapter;\n}(ModelAdapter);\n\n/***/ }),\n/* 16 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Chromosome; });\n/* unused harmony export MetacentricChromosome */\n/* unused harmony export TelocentricChromosome */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__color__ = __webpack_require__(17);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__range__ = __webpack_require__(18);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\n\nvar Chromosome = function () {\n  function Chromosome(adapter, config, ideo) {\n    _classCallCheck(this, Chromosome);\n\n    this._adapter = adapter;\n    this._model = this._adapter.getModel();\n    this._config = config;\n    this._ideo = ideo;\n    this._color = new __WEBPACK_IMPORTED_MODULE_0__color__[\"a\" /* Color */](this._config);\n    this._bumpCoefficient = 5;\n  }\n\n  // Factory method\n\n\n  _createClass(Chromosome, [{\n    key: '_addPArmShape',\n    value: function _addPArmShape(clipPath, isPArmRendered) {\n      if (isPArmRendered) {\n        return clipPath.concat(this._getPArmShape());\n      } else {\n        return clipPath;\n      }\n    }\n  }, {\n    key: '_addQArmShape',\n    value: function _addQArmShape(clipPath, isQArmRendered) {\n      if (isQArmRendered) {\n        return clipPath.concat(this._getQArmShape());\n      } else {\n        return clipPath;\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render(container, chrSetNumber, chrNumber) {\n      // Append bands container and apply clip-path on it\n\n      var self = this;\n\n      container = container.append('g').attr('class', 'bands').attr(\"clip-path\", \"url(#\" + this._model.id + \"-chromosome-set-clippath)\");\n\n      // Render chromosome arms\n      var isPArmRendered = this._renderPArm(container, chrSetNumber, chrNumber);\n      var isQArmRendered = this._renderQArm(container, chrSetNumber, chrNumber);\n\n      // Render range set\n      this._renderRangeSet(container, chrSetNumber, chrNumber);\n\n      // Push arms shape string into clipPath array\n      var clipPath = [];\n      clipPath = this._addPArmShape(clipPath, isPArmRendered);\n      clipPath = this._addQArmShape(clipPath, isQArmRendered);\n\n      var opacity = '0';\n      var fill = '';\n      var isFullyBanded = this.isFullyBanded();\n      if ('ancestors' in this._ideo.config && !('rangeSet' in this._ideo.config)) {\n        // E.g. diploid human genome (with translucent overlay)\n        fill = self._color.getArmColor(chrSetNumber, chrNumber, 0);\n        if (isFullyBanded) {\n          opacity = '0.5';\n        }\n      } else if (isFullyBanded) {\n        // E.g. mouse reference genome\n        opacity = null;\n        fill = 'transparent';\n      } else if (!('ancestors' in this._ideo.config)) {\n        // E.g. chimpanzee assembly Pan_tro 3.0\n        opacity = '1';\n      }\n\n      // Render chromosome border\n      container.append('g').attr('class', 'chromosome-border').selectAll('path').data(clipPath).enter().append('path').attr('fill', fill).style('fill-opacity', opacity).attr('stroke', function (d, i) {\n        return self._color.getBorderColor(chrSetNumber, chrNumber, i);\n      }).attr('stroke-width', function (d) {\n        return 'strokeWidth' in d ? d.strokeWidth : 1;\n      }).attr('d', function (d) {\n        return d.path;\n      }).attr('class', function (d) {\n        return d.class;\n      });\n\n      return clipPath;\n    }\n  }, {\n    key: '_renderRangeSet',\n    value: function _renderRangeSet(container, chrSetNumber, chrNumber) {\n      if (!('rangeSet' in this._config)) {\n        return;\n      }\n\n      var rangeSet = this._config.rangeSet.filter(function (range) {\n        return range.chr - 1 === chrSetNumber;\n      }).map(function (range) {\n        return new __WEBPACK_IMPORTED_MODULE_1__range__[\"a\" /* Range */](range);\n      });\n\n      var rangesContainer = container.append('g').attr('class', 'range-set');\n\n      var self = this;\n      var ideo = self._ideo;\n      var bandsXOffset = ideo._bandsXOffset;\n\n      rangesContainer.selectAll('rect.range').data(rangeSet).enter().append('rect').attr('class', 'range').attr('x', function (range) {\n        var startPx = ideo.convertBpToPx(self._model, range.getStart());\n        return startPx - bandsXOffset;\n      }).attr('y', 0).attr('width', function (range) {\n        var lengthPx = ideo.convertBpToPx(self._model, range.getLength());\n        return lengthPx - bandsXOffset;\n      }).attr('height', this._config.chrWidth).style('fill', function (range) {\n        return range.getColor(chrNumber);\n      });\n    }\n  }, {\n    key: '_getShapeData',\n\n\n    // Get chromosome's shape main values\n    value: function _getShapeData() {\n      // First q band from bands sequence\n      var firstQBand;\n      for (var i = 0; i < this._model.bands.length; i++) {\n        if (this._model.bands[i].name[0] === 'q') {\n          firstQBand = this._model.bands[i];\n          break;\n        }\n      }\n\n      // Chromosome's right position\n      var lastBand = this._model.bands.length - 1;\n      var rightTerminalPosition = this._model.bands[lastBand].px.stop;\n\n      // Properties description:\n      // x1 - left terminal start position\n      // x2 - centromere position\n      // x3 - right terminal end position\n      // w - chromosome width\n      // b - bump size\n      return {\n        x1: 0,\n        x2: firstQBand ? firstQBand.px.start : rightTerminalPosition,\n        x3: rightTerminalPosition,\n        w: this._config.chrWidth,\n        b: this._config.chrWidth / this._bumpCoefficient\n      };\n    }\n  }, {\n    key: '_getPArmShape',\n    value: function _getPArmShape() {\n      var d = this._getShapeData(),\n          x = d.x2 - d.b;\n\n      if (this.isFullyBanded() || 'ancestors' in this._ideo.config) {\n        // Encountered when chromosome has any of:\n        //  - One placeholder \"band\", e.g. pig genome GCF_000003025.5\n        //  - Many (> 2) bands, e.g. human reference genome\n        //  - Ancestor colors in ploidy configuration, as in ploidy_basic.html\n        return {\n          class: '',\n          path: 'M' + d.b + ',0 ' + 'L' + x + ',0 ' + 'Q' + (d.x2 + d.b) + ',' + d.w / 2 + ',' + x + ',' + d.w + ' ' + 'L' + d.b + ',' + d.w + ' ' + 'Q-' + d.b + ',' + d.w / 2 + ',' + d.b + ',0'\n        };\n      } else {\n        // e.g. chimpanzee assembly Pan_tro 3.0\n        return [{\n          class: '',\n          path: 'M' + d.b + ',0 ' + 'L' + (x - 2) + ',0 ' + 'L' + (x - 2) + ',' + d.w + ' ' + 'L' + d.b + ',' + d.w + ' ' + 'Q-' + d.b + ',' + d.w / 2 + ',' + d.b + ',0'\n        }, {\n          class: 'acen',\n          path: 'M' + x + ',0 ' + 'Q' + (d.x2 + d.b) + ',' + d.w / 2 + ',' + x + ',' + d.w + ' ' + 'L' + x + ',' + d.w + ' ' + 'L' + (x - 2) + ',' + d.w + ' ' + 'L' + (x - 2) + ',0'\n        }];\n      }\n    }\n  }, {\n    key: '_getQArmShape',\n    value: function _getQArmShape() {\n      var d = this._getShapeData(),\n          x = d.x3 - d.b,\n          x2b = d.x2 + d.b;\n\n      if (this.isFullyBanded() || 'ancestors' in this._ideo.config) {\n        return {\n          class: '',\n          path: 'M' + x2b + ',0 ' + 'L' + x + ',0 ' + 'Q' + (d.x3 + d.b) + ',' + d.w / 2 + ',' + x + ',' + d.w + ' ' + 'L' + x2b + ',' + d.w + ' ' + 'Q' + (d.x2 - d.b) + ',' + d.w / 2 + ',' + x2b + ',0'\n        };\n      } else {\n        // e.g. chimpanzee assembly Pan_tro 3.0\n        return [{\n          path: 'M' + x2b + ',0 ' + 'L' + x + ',0 ' + 'Q' + (d.x3 + d.b) + ',' + d.w / 2 + ',' + x + ',' + d.w + ' ' + 'L' + x2b + ',' + d.w + ' ' + 'L' + x2b + ',0'\n        }, {\n          class: 'acen',\n          path: 'M' + x2b + ',0' + 'Q' + (d.x2 - d.b) + ',' + d.w / 2 + ',' + x2b + ',' + d.w + ' ' + 'L' + x2b + ',' + d.w + 'L' + (x2b + 2) + ',' + d.w + 'L' + (x2b + 2) + ',0'\n        }];\n      }\n    }\n  }, {\n    key: 'isFullyBanded',\n    value: function isFullyBanded() {\n      return this._model.bands && (this._model.bands.length !== 2 || this._model.bands[0].name[0] === 'q');\n    }\n  }, {\n    key: '_renderBands',\n\n\n    // Render arm bands\n    value: function _renderBands(container, chrSetNumber, chrNumber, bands, arm) {\n      var self = this;\n      var armNumber = arm === 'p' ? 0 : 1;\n      var fill = '';\n      if ('ancestors' in this._ideo.config && !this.isFullyBanded()) {\n        fill = self._color.getArmColor(chrSetNumber, chrNumber, armNumber);\n      }\n\n      container.selectAll(\"path.band.\" + arm).data(bands).enter().append(\"path\").attr(\"id\", function (d) {\n        return self._model.id + \"-\" + d.name.replace(\".\", \"-\");\n      }).attr(\"class\", function (d) {\n        return 'band ' + arm + '-band ' + d.stain;\n      }).attr(\"d\", function (d) {\n        var start = self._ideo.round(d.px.start);\n        var length = self._ideo.round(d.px.width);\n\n        var x = start + length;\n\n        return \"M \" + start + \", 0\" + \"l \" + length + \" 0 \" + \"l 0 \" + self._config.chrWidth + \" \" + \"l -\" + length + \" 0 z\";\n      }).style('fill', fill);\n    }\n  }, {\n    key: '_renderPArm',\n\n\n    // Render chromosome's p arm.\n    // Returns boolean which indicates is any bands was rendered\n    value: function _renderPArm(container, chrSetNumber, chrNumber) {\n      var bands = this._model.bands.filter(function (band) {\n        return band.name[0] === 'p';\n      });\n\n      this._renderBands(container, chrSetNumber, chrNumber, bands, 'p');\n\n      return Boolean(bands.length);\n    }\n  }, {\n    key: '_renderQArm',\n\n\n    // Render chromosome's q arm.\n    // Returns boolean which indicates is any bands was rendered\n    value: function _renderQArm(container, chrSetNumber, chrNumber) {\n      var bands = this._model.bands.filter(function (band) {\n        return band.name[0] === 'q';\n      });\n\n      this._renderBands(container, chrSetNumber, chrNumber, bands, 'q');\n\n      return Boolean(bands.length);\n    }\n  }], [{\n    key: 'getInstance',\n    value: function getInstance(adapter, config, ideo) {\n      if (adapter.getModel().centromerePosition === 'telocentric') {\n        return new TelocentricChromosome(adapter, config, ideo);\n      } else {\n        return new MetacentricChromosome(adapter, config, ideo);\n      }\n    }\n  }]);\n\n  return Chromosome;\n}();\n\nvar MetacentricChromosome = function (_Chromosome) {\n  _inherits(MetacentricChromosome, _Chromosome);\n\n  function MetacentricChromosome(model, config, ideo) {\n    _classCallCheck(this, MetacentricChromosome);\n\n    var _this = _possibleConstructorReturn(this, (MetacentricChromosome.__proto__ || Object.getPrototypeOf(MetacentricChromosome)).call(this, model, config, ideo));\n\n    _this._class = 'MetacentricChromosome';\n    return _this;\n  }\n\n  return MetacentricChromosome;\n}(Chromosome);\n\nvar TelocentricChromosome = function (_Chromosome2) {\n  _inherits(TelocentricChromosome, _Chromosome2);\n\n  function TelocentricChromosome(model, config, ideo) {\n    _classCallCheck(this, TelocentricChromosome);\n\n    var _this2 = _possibleConstructorReturn(this, (TelocentricChromosome.__proto__ || Object.getPrototypeOf(TelocentricChromosome)).call(this, model, config, ideo));\n\n    _this2._class = 'TelocentricChromosome';\n    _this2._pArmOffset = 3;\n    return _this2;\n  }\n\n  _createClass(TelocentricChromosome, [{\n    key: '_addPArmShape',\n    value: function _addPArmShape(clipPath) {\n      return clipPath.concat(this._getPArmShape());\n    }\n  }, {\n    key: '_getPArmShape',\n    value: function _getPArmShape() {\n      var d = this._getShapeData();\n      d.o = this._pArmOffset;\n\n      return [{\n        class: 'acen',\n        path: 'M' + (d.x2 + 2) + ',1' + 'L' + (d.x2 + d.o + 3.25) + ',1 ' + 'L' + (d.x2 + d.o + 3.25) + ',' + (d.w - 1) + ' ' + 'L' + (d.x2 + 2) + ',' + (d.w - 1)\n      }, {\n        class: 'gpos66',\n        path: 'M' + (d.x2 - d.o + 5) + ',0' + 'L' + (d.x2 - d.o + 3) + ',0 ' + 'L' + (d.x2 - d.o + 3) + ',' + d.w + ' ' + 'L' + (d.x2 - d.o + 5) + ',' + d.w,\n        strokeWidth: 0.5\n      }];\n    }\n  }, {\n    key: '_getQArmShape',\n    value: function _getQArmShape() {\n      var d = this._getShapeData(),\n          x = d.x3 - d.b,\n          o = this._pArmOffset + 3;\n\n      return {\n        class: '',\n        path: 'M' + (d.x2 + o) + ',0 ' + 'L' + x + ',0 ' + 'Q' + (d.x3 + d.b) + ',' + d.w / 2 + ',' + x + ',' + d.w + ' ' + 'L' + (d.x2 + o) + ',' + d.w\n      };\n    }\n  }]);\n\n  return TelocentricChromosome;\n}(Chromosome);\n\n/***/ }),\n/* 17 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Color; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ploidy__ = __webpack_require__(1);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\n\nvar Color = function () {\n  function Color(config) {\n    _classCallCheck(this, Color);\n\n    // Ideogram config\n    this._config = config;\n    this._ploidy = new __WEBPACK_IMPORTED_MODULE_0__ploidy__[\"a\" /* Ploidy */](this._config);\n  }\n\n  _createClass(Color, [{\n    key: 'getArmColor',\n    value: function getArmColor(chrSetNumber, chrNumber, armNumber) {\n      if (this._config.armColors) {\n        return this._config.armColors[armNumber];\n      } else if (this._config.ancestors) {\n        return this._getPolyploidArmColor(chrSetNumber, chrNumber, armNumber);\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: 'getBorderColor',\n    value: function getBorderColor(chrSetNumber, chrNumber, armNumber) {\n      if (chrNumber < this._config.ploidy) {\n        return '#000';\n      } else if (this._ploidy.exists(chrSetNumber, chrNumber, armNumber)) {\n        return '#000';\n      } else {\n        return '#fff';\n      }\n    }\n  }, {\n    key: '_getPolyploidArmColor',\n    value: function _getPolyploidArmColor(chrSetNumber, chrNumber, armNumber) {\n      if (!this._ploidy.exists(chrSetNumber, chrNumber, armNumber)) {\n        return 'transparent';\n      } else {\n        var ancestor = this._ploidy.getAncestor(chrSetNumber, chrNumber, armNumber);\n        return this._config.ancestors[ancestor];\n      }\n    }\n  }]);\n\n  return Color;\n}();\n\n/***/ }),\n/* 18 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Range; });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Range = function () {\n\n  /**\n  * Chromosome range.\n  * @public\n  * @class\n  * @param {Object} data - range data.\n  * @param {Integer} data.chr - chromosome index.\n  * @param {Integer[]} [data.ploidy] - array which controls on which chromosomes range should appear in case of ploidy.\n  * @param {Integer} data.start - range start.\n  * @param {Integer} data.stop - range end.\n  * @param {String} data.color - range color.\n  */\n  function Range(data) {\n    _classCallCheck(this, Range);\n\n    this._data = data;\n  }\n\n  _createClass(Range, [{\n    key: 'getStart',\n    value: function getStart() {\n      return this._data.start;\n    }\n  }, {\n    key: 'getStop',\n    value: function getStop() {\n      return this._data.stop;\n    }\n  }, {\n    key: 'getLength',\n    value: function getLength() {\n      return this._data.stop - this._data.start;\n    }\n  }, {\n    key: 'getColor',\n    value: function getColor(chrNumber) {\n      if (!('ploidy' in this._data)) {\n        return this._getColor(chrNumber);\n      } else if ('ploidy' in this._data && this._data.ploidy[chrNumber]) {\n        return this._getColor(chrNumber);\n      } else {\n        return 'transparent';\n      }\n    }\n  }, {\n    key: '_getColor',\n    value: function _getColor(chrNumber) {\n      if (Array.isArray(this._data.color)) {\n        return this._data.color[chrNumber];\n      } else {\n        return this._data.color;\n      }\n    }\n  }]);\n\n  return Range;\n}();\n\n/***/ }),\n/* 19 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return BedParser; });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar BedParser = function () {\n  function BedParser(bed, ideo) {\n    _classCallCheck(this, BedParser);\n\n    this.rawAnnots = this.parseBed(bed, ideo);\n  }\n\n  // http://stackoverflow.com/a/5624139\n\n\n  _createClass(BedParser, [{\n    key: \"parseBed\",\n\n\n    /*\n    * Parses a BED file, returns raw annotations\n    * BED documentation: https://genome.ucsc.edu/FAQ/FAQformat#format1\n    */\n    value: function parseBed(bed, ideo) {\n\n      var tsvLines, i, columns, chrs, chr, start, stop, chrIndex, annots, annot, bedStartIndex, ucscStyle, rgb, color, label, keys, rawAnnots;\n\n      annots = [];\n\n      chrs = Object.keys(ideo.chromosomes[ideo.config.taxid]);\n\n      for (i = 0; i < chrs.length; i++) {\n        chr = chrs[i];\n        annots.push({ chr: chr, annots: [] });\n      }\n\n      tsvLines = bed.split(/\\r\\n|\\n/);\n\n      bedStartIndex = 0; // 1 if BED has header (i.e. track line), 0 otherwise\n      ucscStyle = true;\n      if (tsvLines[0].slice(0, 3) === 'chr' || isNaN(parseInt(tsvLines[0], 10))) {\n        bedStartIndex = 1;\n      }\n\n      if (isNaN(parseInt(tsvLines[bedStartIndex], 10)) === false) {\n        ucscStyle = false;\n      }\n\n      for (i = bedStartIndex; i < tsvLines.length; i++) {\n        columns = tsvLines[i].split(/\\s/g);\n\n        // These three columns (i.e. fields) are required\n        chr = columns[0];\n        start = parseInt(columns[1], 10);\n        stop = parseInt(columns[2], 10);\n\n        length = stop - start;\n\n        if (ucscStyle) {\n          chr = chr.slice(3);\n        }\n        chrIndex = chrs.indexOf(chr);\n        if (chrIndex === -1) {\n          continue;\n        }\n        annot = [\"\", start, length, 0];\n\n        if (columns.length >= 4) {\n          label = columns[3];\n          annot[0] = label;\n        }\n\n        if (columns.length >= 8) {\n          rgb = columns[8].split(',');\n          color = BedParser.rgbToHex(rgb[0], rgb[1], rgb[2]);\n          annot.push(color);\n        }\n\n        annots[chrIndex].annots.push(annot);\n      }\n      keys = ['name', 'start', 'length', 'trackIndex'];\n      if (tsvLines[bedStartIndex].length >= 8) {\n        keys.push('color');\n      }\n      rawAnnots = {\n        keys: keys,\n        annots: annots\n      };\n      return rawAnnots;\n    }\n  }], [{\n    key: \"componentToHex\",\n    value: function componentToHex(c) {\n      var hex = parseInt(c, 10).toString(16);\n      return hex.length === 1 ? \"0\" + hex : hex;\n    }\n  }, {\n    key: \"rgbToHex\",\n    value: function rgbToHex(r, g, b) {\n      return \"#\" + BedParser.componentToHex(r) + BedParser.componentToHex(g) + BedParser.componentToHex(b);\n    }\n  }]);\n\n  return BedParser;\n}();\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// ideogram.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 83cf35a37409d33cd29e","// https://d3js.org Version 4.1.1. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  var version = \"4.1.1\";\n\n  function ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  function bisector(compare) {\n    if (compare.length === 1) compare = ascendingComparator(compare);\n    return {\n      left: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1;\n          else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid;\n          else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n\n  function ascendingComparator(f) {\n    return function(d, x) {\n      return ascending(f(d), x);\n    };\n  }\n\n  var ascendingBisect = bisector(ascending);\n  var bisectRight = ascendingBisect.right;\n  var bisectLeft = ascendingBisect.left;\n\n  function descending(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  }\n\n  function number(x) {\n    return x === null ? NaN : +x;\n  }\n\n  function variance(array, f) {\n    var n = array.length,\n        m = 0,\n        a,\n        d,\n        s = 0,\n        i = -1,\n        j = 0;\n\n    if (f == null) {\n      while (++i < n) {\n        if (!isNaN(a = number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    else {\n      while (++i < n) {\n        if (!isNaN(a = number(f(array[i], i, array)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    if (j > 1) return s / (j - 1);\n  }\n\n  function deviation(array, f) {\n    var v = variance(array, f);\n    return v ? Math.sqrt(v) : v;\n  }\n\n  function extent(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b,\n        c;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    return [a, c];\n  }\n\n  var array = Array.prototype;\n\n  var slice = array.slice;\n  var map = array.map;\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function identity(x) {\n    return x;\n  }\n\n  function range(start, stop, step) {\n    start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n    var i = -1,\n        n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n        range = new Array(n);\n\n    while (++i < n) {\n      range[i] = start + i * step;\n    }\n\n    return range;\n  }\n\n  var e10 = Math.sqrt(50);\n  var e5 = Math.sqrt(10);\n  var e2 = Math.sqrt(2);\n  function ticks(start, stop, count) {\n    var step = tickStep(start, stop, count);\n    return range(\n      Math.ceil(start / step) * step,\n      Math.floor(stop / step) * step + step / 2, // inclusive\n      step\n    );\n  }\n\n  function tickStep(start, stop, count) {\n    var step0 = Math.abs(stop - start) / Math.max(0, count),\n        step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n        error = step0 / step1;\n    if (error >= e10) step1 *= 10;\n    else if (error >= e5) step1 *= 5;\n    else if (error >= e2) step1 *= 2;\n    return stop < start ? -step1 : step1;\n  }\n\n  function sturges(values) {\n    return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n  }\n\n  function histogram() {\n    var value = identity,\n        domain = extent,\n        threshold = sturges;\n\n    function histogram(data) {\n      var i,\n          n = data.length,\n          x,\n          values = new Array(n);\n\n      for (i = 0; i < n; ++i) {\n        values[i] = value(data[i], i, data);\n      }\n\n      var xz = domain(values),\n          x0 = xz[0],\n          x1 = xz[1],\n          tz = threshold(values, x0, x1);\n\n      // Convert number of thresholds into uniform thresholds.\n      if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n      // Remove any thresholds outside the domain.\n      var m = tz.length;\n      while (tz[0] <= x0) tz.shift(), --m;\n      while (tz[m - 1] >= x1) tz.pop(), --m;\n\n      var bins = new Array(m + 1),\n          bin;\n\n      // Initialize bins.\n      for (i = 0; i <= m; ++i) {\n        bin = bins[i] = [];\n        bin.x0 = i > 0 ? tz[i - 1] : x0;\n        bin.x1 = i < m ? tz[i] : x1;\n      }\n\n      // Assign data to bins by value, ignoring any outside the domain.\n      for (i = 0; i < n; ++i) {\n        x = values[i];\n        if (x0 <= x && x <= x1) {\n          bins[bisectRight(tz, x, 0, m)].push(data[i]);\n        }\n      }\n\n      return bins;\n    }\n\n    histogram.value = function(_) {\n      return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n    };\n\n    histogram.domain = function(_) {\n      return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n    };\n\n    histogram.thresholds = function(_) {\n      return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n    };\n\n    return histogram;\n  }\n\n  function threshold(array, p, f) {\n    if (f == null) f = number;\n    if (!(n = array.length)) return;\n    if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n    if (p >= 1) return +f(array[n - 1], n - 1, array);\n    var n,\n        h = (n - 1) * p,\n        i = Math.floor(h),\n        a = +f(array[i], i, array),\n        b = +f(array[i + 1], i + 1, array);\n    return a + (b - a) * (h - i);\n  }\n\n  function freedmanDiaconis(values, min, max) {\n    values = map.call(values, number).sort(ascending);\n    return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function scott(values, min, max) {\n    return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function max(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n    }\n\n    return a;\n  }\n\n  function mean(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1,\n        j = n;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n    }\n\n    if (j) return s / j;\n  }\n\n  function median(array, f) {\n    var numbers = [],\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n    }\n\n    return threshold(numbers.sort(ascending), 0.5);\n  }\n\n  function merge(arrays) {\n    var n = arrays.length,\n        m,\n        i = -1,\n        j = 0,\n        merged,\n        array;\n\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n\n    return merged;\n  }\n\n  function min(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n    }\n\n    return a;\n  }\n\n  function pairs(array) {\n    var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [p, p = array[++i]];\n    return pairs;\n  }\n\n  function permute(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  }\n\n  function scan(array, compare) {\n    if (!(n = array.length)) return;\n    var i = 0,\n        n,\n        j = 0,\n        xi,\n        xj = array[j];\n\n    if (!compare) compare = ascending;\n\n    while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n    if (compare(xj, xj) === 0) return j;\n  }\n\n  function shuffle(array, i0, i1) {\n    var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n        t,\n        i;\n\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0];\n      array[m + i0] = array[i + i0];\n      array[i + i0] = t;\n    }\n\n    return array;\n  }\n\n  function sum(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n    }\n\n    else {\n      while (++i < n) if (a = +f(array[i], i, array)) s += a;\n    }\n\n    return s;\n  }\n\n  function transpose(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  }\n\n  function length(d) {\n    return d.length;\n  }\n\n  function zip() {\n    return transpose(arguments);\n  }\n\n  var prefix = \"$\";\n\n  function Map() {}\n\n  Map.prototype = map$1.prototype = {\n    constructor: Map,\n    has: function(key) {\n      return (prefix + key) in this;\n    },\n    get: function(key) {\n      return this[prefix + key];\n    },\n    set: function(key, value) {\n      this[prefix + key] = value;\n      return this;\n    },\n    remove: function(key) {\n      var property = prefix + key;\n      return property in this && delete this[property];\n    },\n    clear: function() {\n      for (var property in this) if (property[0] === prefix) delete this[property];\n    },\n    keys: function() {\n      var keys = [];\n      for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n      return keys;\n    },\n    values: function() {\n      var values = [];\n      for (var property in this) if (property[0] === prefix) values.push(this[property]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n      return entries;\n    },\n    size: function() {\n      var size = 0;\n      for (var property in this) if (property[0] === prefix) ++size;\n      return size;\n    },\n    empty: function() {\n      for (var property in this) if (property[0] === prefix) return false;\n      return true;\n    },\n    each: function(f) {\n      for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n    }\n  };\n\n  function map$1(object, f) {\n    var map = new Map;\n\n    // Copy constructor.\n    if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n    // Index array by numeric index or specified key function.\n    else if (Array.isArray(object)) {\n      var i = -1,\n          n = object.length,\n          o;\n\n      if (f == null) while (++i < n) map.set(i, object[i]);\n      else while (++i < n) map.set(f(o = object[i], i, object), o);\n    }\n\n    // Convert object to map.\n    else if (object) for (var key in object) map.set(key, object[key]);\n\n    return map;\n  }\n\n  function nest() {\n    var keys = [],\n        sortKeys = [],\n        sortValues,\n        rollup,\n        nest;\n\n    function apply(array, depth, createResult, setResult) {\n      if (depth >= keys.length) return rollup != null\n          ? rollup(array) : (sortValues != null\n          ? array.sort(sortValues)\n          : array);\n\n      var i = -1,\n          n = array.length,\n          key = keys[depth++],\n          keyValue,\n          value,\n          valuesByKey = map$1(),\n          values,\n          result = createResult();\n\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n          values.push(value);\n        } else {\n          valuesByKey.set(keyValue, [value]);\n        }\n      }\n\n      valuesByKey.each(function(values, key) {\n        setResult(result, key, apply(values, depth, createResult, setResult));\n      });\n\n      return result;\n    }\n\n    function entries(map, depth) {\n      if (++depth > keys.length) return map;\n      var array, sortKey = sortKeys[depth - 1];\n      if (rollup != null && depth >= keys.length) array = map.entries();\n      else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n      return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n    }\n\n    return nest = {\n      object: function(array) { return apply(array, 0, createObject, setObject); },\n      map: function(array) { return apply(array, 0, createMap, setMap); },\n      entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n      key: function(d) { keys.push(d); return nest; },\n      sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n      sortValues: function(order) { sortValues = order; return nest; },\n      rollup: function(f) { rollup = f; return nest; }\n    };\n  }\n\n  function createObject() {\n    return {};\n  }\n\n  function setObject(object, key, value) {\n    object[key] = value;\n  }\n\n  function createMap() {\n    return map$1();\n  }\n\n  function setMap(map, key, value) {\n    map.set(key, value);\n  }\n\n  function Set() {}\n\n  var proto = map$1.prototype;\n\n  Set.prototype = set.prototype = {\n    constructor: Set,\n    has: proto.has,\n    add: function(value) {\n      value += \"\";\n      this[prefix + value] = value;\n      return this;\n    },\n    remove: proto.remove,\n    clear: proto.clear,\n    values: proto.keys,\n    size: proto.size,\n    empty: proto.empty,\n    each: proto.each\n  };\n\n  function set(object, f) {\n    var set = new Set;\n\n    // Copy constructor.\n    if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n    // Otherwise, assume it’s an array.\n    else if (object) {\n      var i = -1, n = object.length;\n      if (f == null) while (++i < n) set.add(object[i]);\n      else while (++i < n) set.add(f(object[i], i, object));\n    }\n\n    return set;\n  }\n\n  function keys(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  }\n\n  function values(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  }\n\n  function entries(map) {\n    var entries = [];\n    for (var key in map) entries.push({key: key, value: map[key]});\n    return entries;\n  }\n\n  function uniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return Math.random() * max + min;\n    };\n  }\n\n  function normal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = Math.random() * 2 - 1;\n        y = Math.random() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  function logNormal() {\n    var randomNormal = normal.apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  function irwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += Math.random();\n      return sum;\n    };\n  }\n\n  function bates(n) {\n    var randomIrwinHall = irwinHall(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  function exponential(lambda) {\n    return function() {\n      return -Math.log(1 - Math.random()) / lambda;\n    };\n  }\n\n  function linear(t) {\n    return +t;\n  }\n\n  function quadIn(t) {\n    return t * t;\n  }\n\n  function quadOut(t) {\n    return t * (2 - t);\n  }\n\n  function quadInOut(t) {\n    return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n  }\n\n  function cubicIn(t) {\n    return t * t * t;\n  }\n\n  function cubicOut(t) {\n    return --t * t * t + 1;\n  }\n\n  function easeCubicInOut(t) {\n    return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n  }\n\n  var exponent = 3;\n\n  var polyIn = (function custom(e) {\n    e = +e;\n\n    function polyIn(t) {\n      return Math.pow(t, e);\n    }\n\n    polyIn.exponent = custom;\n\n    return polyIn;\n  })(exponent);\n\n  var polyOut = (function custom(e) {\n    e = +e;\n\n    function polyOut(t) {\n      return 1 - Math.pow(1 - t, e);\n    }\n\n    polyOut.exponent = custom;\n\n    return polyOut;\n  })(exponent);\n\n  var polyInOut = (function custom(e) {\n    e = +e;\n\n    function polyInOut(t) {\n      return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n    }\n\n    polyInOut.exponent = custom;\n\n    return polyInOut;\n  })(exponent);\n\n  var pi = Math.PI;\n  var halfPi = pi / 2;\n  function sinIn(t) {\n    return 1 - Math.cos(t * halfPi);\n  }\n\n  function sinOut(t) {\n    return Math.sin(t * halfPi);\n  }\n\n  function sinInOut(t) {\n    return (1 - Math.cos(pi * t)) / 2;\n  }\n\n  function expIn(t) {\n    return Math.pow(2, 10 * t - 10);\n  }\n\n  function expOut(t) {\n    return 1 - Math.pow(2, -10 * t);\n  }\n\n  function expInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n  }\n\n  function circleIn(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n\n  function circleOut(t) {\n    return Math.sqrt(1 - --t * t);\n  }\n\n  function circleInOut(t) {\n    return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n  }\n\n  var b1 = 4 / 11;\n  var b2 = 6 / 11;\n  var b3 = 8 / 11;\n  var b4 = 3 / 4;\n  var b5 = 9 / 11;\n  var b6 = 10 / 11;\n  var b7 = 15 / 16;\n  var b8 = 21 / 22;\n  var b9 = 63 / 64;\n  var b0 = 1 / b1 / b1;\n  function bounceIn(t) {\n    return 1 - bounceOut(1 - t);\n  }\n\n  function bounceOut(t) {\n    return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n  }\n\n  function bounceInOut(t) {\n    return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n  }\n\n  var overshoot = 1.70158;\n\n  var backIn = (function custom(s) {\n    s = +s;\n\n    function backIn(t) {\n      return t * t * ((s + 1) * t - s);\n    }\n\n    backIn.overshoot = custom;\n\n    return backIn;\n  })(overshoot);\n\n  var backOut = (function custom(s) {\n    s = +s;\n\n    function backOut(t) {\n      return --t * t * ((s + 1) * t + s) + 1;\n    }\n\n    backOut.overshoot = custom;\n\n    return backOut;\n  })(overshoot);\n\n  var backInOut = (function custom(s) {\n    s = +s;\n\n    function backInOut(t) {\n      return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n    }\n\n    backInOut.overshoot = custom;\n\n    return backInOut;\n  })(overshoot);\n\n  var tau = 2 * Math.PI;\n  var amplitude = 1;\n  var period = 0.3;\n  var elasticIn = (function custom(a, p) {\n    var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n    function elasticIn(t) {\n      return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n    }\n\n    elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n    elasticIn.period = function(p) { return custom(a, p); };\n\n    return elasticIn;\n  })(amplitude, period);\n\n  var elasticOut = (function custom(a, p) {\n    var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n    function elasticOut(t) {\n      return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n    }\n\n    elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n    elasticOut.period = function(p) { return custom(a, p); };\n\n    return elasticOut;\n  })(amplitude, period);\n\n  var elasticInOut = (function custom(a, p) {\n    var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n    function elasticInOut(t) {\n      return ((t = t * 2 - 1) < 0\n          ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n          : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n    }\n\n    elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n    elasticInOut.period = function(p) { return custom(a, p); };\n\n    return elasticInOut;\n  })(amplitude, period);\n\n  function area(polygon) {\n    var i = -1,\n        n = polygon.length,\n        a,\n        b = polygon[n - 1],\n        area = 0;\n\n    while (++i < n) {\n      a = b;\n      b = polygon[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n\n    return area / 2;\n  }\n\n  function centroid(polygon) {\n    var i = -1,\n        n = polygon.length,\n        x = 0,\n        y = 0,\n        a,\n        b = polygon[n - 1],\n        c,\n        k = 0;\n\n    while (++i < n) {\n      a = b;\n      b = polygon[i];\n      k += c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n\n    return k *= 3, [x / k, y / k];\n  }\n\n  // Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n  // the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n  // right, +y is up). Returns a positive value if ABC is counter-clockwise,\n  // negative if clockwise, and zero if the points are collinear.\n  function cross(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n\n  function lexicographicOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n\n  // Computes the upper convex hull per the monotone chain algorithm.\n  // Assumes points.length >= 3, is sorted by x, unique in y.\n  // Returns an array of indices into points in left-to-right order.\n  function computeUpperHullIndexes(points) {\n    var n = points.length,\n        indexes = [0, 1],\n        size = 2;\n\n    for (var i = 2; i < n; ++i) {\n      while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n      indexes[size++] = i;\n    }\n\n    return indexes.slice(0, size); // remove popped points\n  }\n\n  function hull(points) {\n    if ((n = points.length) < 3) return null;\n\n    var i,\n        n,\n        sortedPoints = new Array(n),\n        flippedPoints = new Array(n);\n\n    for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n    sortedPoints.sort(lexicographicOrder);\n    for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n    var upperIndexes = computeUpperHullIndexes(sortedPoints),\n        lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n    // Construct the hull polygon, removing possible duplicate endpoints.\n    var skipLeft = lowerIndexes[0] === upperIndexes[0],\n        skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n        hull = [];\n\n    // Add upper hull in right-to-l order.\n    // Then add lower hull in left-to-right order.\n    for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n    for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n    return hull;\n  }\n\n  function contains(polygon, point) {\n    var n = polygon.length,\n        p = polygon[n - 1],\n        x = point[0], y = point[1],\n        x0 = p[0], y0 = p[1],\n        x1, y1,\n        inside = false;\n\n    for (var i = 0; i < n; ++i) {\n      p = polygon[i], x1 = p[0], y1 = p[1];\n      if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n      x0 = x1, y0 = y1;\n    }\n\n    return inside;\n  }\n\n  function length$1(polygon) {\n    var i = -1,\n        n = polygon.length,\n        b = polygon[n - 1],\n        xa,\n        ya,\n        xb = b[0],\n        yb = b[1],\n        perimeter = 0;\n\n    while (++i < n) {\n      xa = xb;\n      ya = yb;\n      b = polygon[i];\n      xb = b[0];\n      yb = b[1];\n      xa -= xb;\n      ya -= yb;\n      perimeter += Math.sqrt(xa * xa + ya * ya);\n    }\n\n    return perimeter;\n  }\n\nvar   pi$1 = Math.PI;\nvar   tau$1 = 2 * pi$1;\n  var epsilon = 1e-6;\n  var tauEpsilon = tau$1 - epsilon;\n  function Path() {\n    this._x0 = this._y0 = // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n    this._ = [];\n  }\n\n  function path() {\n    return new Path;\n  }\n\n  Path.prototype = path.prototype = {\n    constructor: Path,\n    moveTo: function(x, y) {\n      this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y);\n    },\n    closePath: function() {\n      if (this._x1 !== null) {\n        this._x1 = this._x0, this._y1 = this._y0;\n        this._.push(\"Z\");\n      }\n    },\n    lineTo: function(x, y) {\n      this._.push(\"L\", this._x1 = +x, \",\", this._y1 = +y);\n    },\n    quadraticCurveTo: function(x1, y1, x, y) {\n      this._.push(\"Q\", +x1, \",\", +y1, \",\", this._x1 = +x, \",\", this._y1 = +y);\n    },\n    bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n      this._.push(\"C\", +x1, \",\", +y1, \",\", +x2, \",\", +y2, \",\", this._x1 = +x, \",\", this._y1 = +y);\n    },\n    arcTo: function(x1, y1, x2, y2, r) {\n      x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n      var x0 = this._x1,\n          y0 = this._y1,\n          x21 = x2 - x1,\n          y21 = y2 - y1,\n          x01 = x0 - x1,\n          y01 = y0 - y1,\n          l01_2 = x01 * x01 + y01 * y01;\n\n      // Is the radius negative? Error.\n      if (r < 0) throw new Error(\"negative radius: \" + r);\n\n      // Is this path empty? Move to (x1,y1).\n      if (this._x1 === null) {\n        this._.push(\n          \"M\", this._x1 = x1, \",\", this._y1 = y1\n        );\n      }\n\n      // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n      else if (!(l01_2 > epsilon));\n\n      // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n      // Equivalently, is (x1,y1) coincident with (x2,y2)?\n      // Or, is the radius zero? Line to (x1,y1).\n      else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n        this._.push(\n          \"L\", this._x1 = x1, \",\", this._y1 = y1\n        );\n      }\n\n      // Otherwise, draw an arc!\n      else {\n        var x20 = x2 - x0,\n            y20 = y2 - y0,\n            l21_2 = x21 * x21 + y21 * y21,\n            l20_2 = x20 * x20 + y20 * y20,\n            l21 = Math.sqrt(l21_2),\n            l01 = Math.sqrt(l01_2),\n            l = r * Math.tan((pi$1 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n            t01 = l / l01,\n            t21 = l / l21;\n\n        // If the start tangent is not coincident with (x0,y0), line to.\n        if (Math.abs(t01 - 1) > epsilon) {\n          this._.push(\n            \"L\", x1 + t01 * x01, \",\", y1 + t01 * y01\n          );\n        }\n\n        this._.push(\n          \"A\", r, \",\", r, \",0,0,\", +(y01 * x20 > x01 * y20), \",\", this._x1 = x1 + t21 * x21, \",\", this._y1 = y1 + t21 * y21\n        );\n      }\n    },\n    arc: function(x, y, r, a0, a1, ccw) {\n      x = +x, y = +y, r = +r;\n      var dx = r * Math.cos(a0),\n          dy = r * Math.sin(a0),\n          x0 = x + dx,\n          y0 = y + dy,\n          cw = 1 ^ ccw,\n          da = ccw ? a0 - a1 : a1 - a0;\n\n      // Is the radius negative? Error.\n      if (r < 0) throw new Error(\"negative radius: \" + r);\n\n      // Is this path empty? Move to (x0,y0).\n      if (this._x1 === null) {\n        this._.push(\n          \"M\", x0, \",\", y0\n        );\n      }\n\n      // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n      else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n        this._.push(\n          \"L\", x0, \",\", y0\n        );\n      }\n\n      // Is this arc empty? We’re done.\n      if (!r) return;\n\n      // Is this a complete circle? Draw two arcs to complete the circle.\n      if (da > tauEpsilon) {\n        this._.push(\n          \"A\", r, \",\", r, \",0,1,\", cw, \",\", x - dx, \",\", y - dy,\n          \"A\", r, \",\", r, \",0,1,\", cw, \",\", this._x1 = x0, \",\", this._y1 = y0\n        );\n      }\n\n      // Otherwise, draw an arc!\n      else {\n        if (da < 0) da = da % tau$1 + tau$1;\n        this._.push(\n          \"A\", r, \",\", r, \",0,\", +(da >= pi$1), \",\", cw, \",\", this._x1 = x + r * Math.cos(a1), \",\", this._y1 = y + r * Math.sin(a1)\n        );\n      }\n    },\n    rect: function(x, y, w, h) {\n      this._.push(\"M\", this._x0 = this._x1 = +x, \",\", this._y0 = this._y1 = +y, \"h\", +w, \"v\", +h, \"h\", -w, \"Z\");\n    },\n    toString: function() {\n      return this._.join(\"\");\n    }\n  };\n\n  function tree_add(d) {\n    var x = +this._x.call(null, d),\n        y = +this._y.call(null, d);\n    return add(this.cover(x, y), x, y, d);\n  }\n\n  function add(tree, x, y, d) {\n    if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n    var parent,\n        node = tree._root,\n        leaf = {data: d},\n        x0 = tree._x0,\n        y0 = tree._y0,\n        x1 = tree._x1,\n        y1 = tree._y1,\n        xm,\n        ym,\n        xp,\n        yp,\n        right,\n        bottom,\n        i,\n        j;\n\n    // If the tree is empty, initialize the root as a leaf.\n    if (!node) return tree._root = leaf, tree;\n\n    // Find the existing leaf for the new point, or add it.\n    while (node.length) {\n      if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n      if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n      if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n    }\n\n    // Is the new point is exactly coincident with the existing point?\n    xp = +tree._x.call(null, node.data);\n    yp = +tree._y.call(null, node.data);\n    if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n    // Otherwise, split the leaf node until the old and new point are separated.\n    do {\n      parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n      if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n      if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n    return parent[j] = node, parent[i] = leaf, tree;\n  }\n\n  function addAll(data) {\n    var d, i, n = data.length,\n        x,\n        y,\n        xz = new Array(n),\n        yz = new Array(n),\n        x0 = Infinity,\n        y0 = Infinity,\n        x1 = -Infinity,\n        y1 = -Infinity;\n\n    // Compute the points and their extent.\n    for (i = 0; i < n; ++i) {\n      if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n      xz[i] = x;\n      yz[i] = y;\n      if (x < x0) x0 = x;\n      if (x > x1) x1 = x;\n      if (y < y0) y0 = y;\n      if (y > y1) y1 = y;\n    }\n\n    // If there were no (valid) points, inherit the existing extent.\n    if (x1 < x0) x0 = this._x0, x1 = this._x1;\n    if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n    // Expand the tree to cover the new points.\n    this.cover(x0, y0).cover(x1, y1);\n\n    // Add the new points.\n    for (i = 0; i < n; ++i) {\n      add(this, xz[i], yz[i], data[i]);\n    }\n\n    return this;\n  }\n\n  function tree_cover(x, y) {\n    if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n    var x0 = this._x0,\n        y0 = this._y0,\n        x1 = this._x1,\n        y1 = this._y1;\n\n    // If the quadtree has no extent, initialize them.\n    // Integer extent are necessary so that if we later double the extent,\n    // the existing quadrant boundaries don’t change due to floating point error!\n    if (isNaN(x0)) {\n      x1 = (x0 = Math.floor(x)) + 1;\n      y1 = (y0 = Math.floor(y)) + 1;\n    }\n\n    // Otherwise, double repeatedly to cover.\n    else if (x0 > x || x > x1 || y0 > y || y > y1) {\n      var z = x1 - x0,\n          node = this._root,\n          parent,\n          i;\n\n      switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n        case 0: {\n          do parent = new Array(4), parent[i] = node, node = parent;\n          while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n          break;\n        }\n        case 1: {\n          do parent = new Array(4), parent[i] = node, node = parent;\n          while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n          break;\n        }\n        case 2: {\n          do parent = new Array(4), parent[i] = node, node = parent;\n          while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n          break;\n        }\n        case 3: {\n          do parent = new Array(4), parent[i] = node, node = parent;\n          while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n          break;\n        }\n      }\n\n      if (this._root && this._root.length) this._root = node;\n    }\n\n    // If the quadtree covers the point already, just return.\n    else return this;\n\n    this._x0 = x0;\n    this._y0 = y0;\n    this._x1 = x1;\n    this._y1 = y1;\n    return this;\n  }\n\n  function tree_data() {\n    var data = [];\n    this.visit(function(node) {\n      if (!node.length) do data.push(node.data); while (node = node.next)\n    });\n    return data;\n  }\n\n  function tree_extent(_) {\n    return arguments.length\n        ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n        : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n  }\n\n  function Quad(node, x0, y0, x1, y1) {\n    this.node = node;\n    this.x0 = x0;\n    this.y0 = y0;\n    this.x1 = x1;\n    this.y1 = y1;\n  }\n\n  function tree_find(x, y, radius) {\n    var data,\n        x0 = this._x0,\n        y0 = this._y0,\n        x1,\n        y1,\n        x2,\n        y2,\n        x3 = this._x1,\n        y3 = this._y1,\n        quads = [],\n        node = this._root,\n        q,\n        i;\n\n    if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n    if (radius == null) radius = Infinity;\n    else {\n      x0 = x - radius, y0 = y - radius;\n      x3 = x + radius, y3 = y + radius;\n      radius *= radius;\n    }\n\n    while (q = quads.pop()) {\n\n      // Stop searching if this quadrant can’t contain a closer node.\n      if (!(node = q.node)\n          || (x1 = q.x0) > x3\n          || (y1 = q.y0) > y3\n          || (x2 = q.x1) < x0\n          || (y2 = q.y1) < y0) continue;\n\n      // Bisect the current quadrant.\n      if (node.length) {\n        var xm = (x1 + x2) / 2,\n            ym = (y1 + y2) / 2;\n\n        quads.push(\n          new Quad(node[3], xm, ym, x2, y2),\n          new Quad(node[2], x1, ym, xm, y2),\n          new Quad(node[1], xm, y1, x2, ym),\n          new Quad(node[0], x1, y1, xm, ym)\n        );\n\n        // Visit the closest quadrant first.\n        if (i = (y >= ym) << 1 | (x >= xm)) {\n          q = quads[quads.length - 1];\n          quads[quads.length - 1] = quads[quads.length - 1 - i];\n          quads[quads.length - 1 - i] = q;\n        }\n      }\n\n      // Visit this point. (Visiting coincident points isn’t necessary!)\n      else {\n        var dx = x - +this._x.call(null, node.data),\n            dy = y - +this._y.call(null, node.data),\n            d2 = dx * dx + dy * dy;\n        if (d2 < radius) {\n          var d = Math.sqrt(radius = d2);\n          x0 = x - d, y0 = y - d;\n          x3 = x + d, y3 = y + d;\n          data = node.data;\n        }\n      }\n    }\n\n    return data;\n  }\n\n  function tree_remove(d) {\n    if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n    var parent,\n        node = this._root,\n        retainer,\n        previous,\n        next,\n        x0 = this._x0,\n        y0 = this._y0,\n        x1 = this._x1,\n        y1 = this._y1,\n        x,\n        y,\n        xm,\n        ym,\n        right,\n        bottom,\n        i,\n        j;\n\n    // If the tree is empty, initialize the root as a leaf.\n    if (!node) return this;\n\n    // Find the leaf node for the point.\n    // While descending, also retain the deepest parent with a non-removed sibling.\n    if (node.length) while (true) {\n      if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n      if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n      if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n      if (!node.length) break;\n      if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n    }\n\n    // Find the point to remove.\n    while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n    if (next = node.next) delete node.next;\n\n    // If there are multiple coincident points, remove just the point.\n    if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n    // If this is the root point, remove it.\n    if (!parent) return this._root = next, this;\n\n    // Remove this leaf.\n    next ? parent[i] = next : delete parent[i];\n\n    // If the parent now contains exactly one leaf, collapse superfluous parents.\n    if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n        && node === (parent[3] || parent[2] || parent[1] || parent[0])\n        && !node.length) {\n      if (retainer) retainer[j] = node;\n      else this._root = node;\n    }\n\n    return this;\n  }\n\n  function removeAll(data) {\n    for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n    return this;\n  }\n\n  function tree_root() {\n    return this._root;\n  }\n\n  function tree_size() {\n    var size = 0;\n    this.visit(function(node) {\n      if (!node.length) do ++size; while (node = node.next)\n    });\n    return size;\n  }\n\n  function tree_visit(callback) {\n    var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n    if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n    while (q = quads.pop()) {\n      if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n        var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n        if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n        if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n        if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n        if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      }\n    }\n    return this;\n  }\n\n  function tree_visitAfter(callback) {\n    var quads = [], next = [], q;\n    if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n    while (q = quads.pop()) {\n      var node = q.node;\n      if (node.length) {\n        var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n        if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n        if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n        if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n        if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      }\n      next.push(q);\n    }\n    while (q = next.pop()) {\n      callback(q.node, q.x0, q.y0, q.x1, q.y1);\n    }\n    return this;\n  }\n\n  function defaultX(d) {\n    return d[0];\n  }\n\n  function tree_x(_) {\n    return arguments.length ? (this._x = _, this) : this._x;\n  }\n\n  function defaultY(d) {\n    return d[1];\n  }\n\n  function tree_y(_) {\n    return arguments.length ? (this._y = _, this) : this._y;\n  }\n\n  function quadtree(nodes, x, y) {\n    var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n    return nodes == null ? tree : tree.addAll(nodes);\n  }\n\n  function Quadtree(x, y, x0, y0, x1, y1) {\n    this._x = x;\n    this._y = y;\n    this._x0 = x0;\n    this._y0 = y0;\n    this._x1 = x1;\n    this._y1 = y1;\n    this._root = undefined;\n  }\n\n  function leaf_copy(leaf) {\n    var copy = {data: leaf.data}, next = copy;\n    while (leaf = leaf.next) next = next.next = {data: leaf.data};\n    return copy;\n  }\n\n  var treeProto = quadtree.prototype = Quadtree.prototype;\n\n  treeProto.copy = function() {\n    var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n        node = this._root,\n        nodes,\n        child;\n\n    if (!node) return copy;\n\n    if (!node.length) return copy._root = leaf_copy(node), copy;\n\n    nodes = [{source: node, target: copy._root = new Array(4)}];\n    while (node = nodes.pop()) {\n      for (var i = 0; i < 4; ++i) {\n        if (child = node.source[i]) {\n          if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n          else node.target[i] = leaf_copy(child);\n        }\n      }\n    }\n\n    return copy;\n  };\n\n  treeProto.add = tree_add;\n  treeProto.addAll = addAll;\n  treeProto.cover = tree_cover;\n  treeProto.data = tree_data;\n  treeProto.extent = tree_extent;\n  treeProto.find = tree_find;\n  treeProto.remove = tree_remove;\n  treeProto.removeAll = removeAll;\n  treeProto.root = tree_root;\n  treeProto.size = tree_size;\n  treeProto.visit = tree_visit;\n  treeProto.visitAfter = tree_visitAfter;\n  treeProto.x = tree_x;\n  treeProto.y = tree_y;\n\n  var slice$1 = [].slice;\n\n  var noabort = {};\n\n  function Queue(size) {\n    if (!(size >= 1)) throw new Error;\n    this._size = size;\n    this._call =\n    this._error = null;\n    this._tasks = [];\n    this._data = [];\n    this._waiting =\n    this._active =\n    this._ended =\n    this._start = 0; // inside a synchronous task callback?\n  }\n\n  Queue.prototype = queue.prototype = {\n    constructor: Queue,\n    defer: function(callback) {\n      if (typeof callback !== \"function\" || this._call) throw new Error;\n      if (this._error != null) return this;\n      var t = slice$1.call(arguments, 1);\n      t.push(callback);\n      ++this._waiting, this._tasks.push(t);\n      poke(this);\n      return this;\n    },\n    abort: function() {\n      if (this._error == null) abort(this, new Error(\"abort\"));\n      return this;\n    },\n    await: function(callback) {\n      if (typeof callback !== \"function\" || this._call) throw new Error;\n      this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n      maybeNotify(this);\n      return this;\n    },\n    awaitAll: function(callback) {\n      if (typeof callback !== \"function\" || this._call) throw new Error;\n      this._call = callback;\n      maybeNotify(this);\n      return this;\n    }\n  };\n\n  function poke(q) {\n    if (!q._start) try { start(q); } // let the current task complete\n    catch (e) { if (q._tasks[q._ended + q._active - 1]) abort(q, e); } // task errored synchronously\n  }\n\n  function start(q) {\n    while (q._start = q._waiting && q._active < q._size) {\n      var i = q._ended + q._active,\n          t = q._tasks[i],\n          j = t.length - 1,\n          c = t[j];\n      t[j] = end(q, i);\n      --q._waiting, ++q._active;\n      t = c.apply(null, t);\n      if (!q._tasks[i]) continue; // task finished synchronously\n      q._tasks[i] = t || noabort;\n    }\n  }\n\n  function end(q, i) {\n    return function(e, r) {\n      if (!q._tasks[i]) return; // ignore multiple callbacks\n      --q._active, ++q._ended;\n      q._tasks[i] = null;\n      if (q._error != null) return; // ignore secondary errors\n      if (e != null) {\n        abort(q, e);\n      } else {\n        q._data[i] = r;\n        if (q._waiting) poke(q);\n        else maybeNotify(q);\n      }\n    };\n  }\n\n  function abort(q, e) {\n    var i = q._tasks.length, t;\n    q._error = e; // ignore active callbacks\n    q._data = undefined; // allow gc\n    q._waiting = NaN; // prevent starting\n\n    while (--i >= 0) {\n      if (t = q._tasks[i]) {\n        q._tasks[i] = null;\n        if (t.abort) try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n\n    q._active = NaN; // allow notification\n    maybeNotify(q);\n  }\n\n  function maybeNotify(q) {\n    if (!q._active && q._call) q._call(q._error, q._data);\n  }\n\n  function queue(concurrency) {\n    return new Queue(arguments.length ? +concurrency : Infinity);\n  }\n\n  function constant$1(x) {\n    return function constant() {\n      return x;\n    };\n  }\n\n  var epsilon$1 = 1e-12;\n  var pi$2 = Math.PI;\n  var halfPi$1 = pi$2 / 2;\n  var tau$2 = 2 * pi$2;\n\n  function arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n\n  function arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n\n  function arcStartAngle(d) {\n    return d.startAngle;\n  }\n\n  function arcEndAngle(d) {\n    return d.endAngle;\n  }\n\n  function arcPadAngle(d) {\n    return d && d.padAngle; // Note: optional!\n  }\n\n  function asin(x) {\n    return x >= 1 ? halfPi$1 : x <= -1 ? -halfPi$1 : Math.asin(x);\n  }\n\n  function intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var x10 = x1 - x0, y10 = y1 - y0,\n        x32 = x3 - x2, y32 = y3 - y2,\n        t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n    return [x0 + t * x10, y0 + t * y10];\n  }\n\n  // Compute perpendicular offset line of length rc.\n  // http://mathworld.wolfram.com/Circle-LineIntersection.html\n  function cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n    var x01 = x0 - x1,\n        y01 = y0 - y1,\n        lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),\n        ox = lo * y01,\n        oy = -lo * x01,\n        x11 = x0 + ox,\n        y11 = y0 + oy,\n        x10 = x1 + ox,\n        y10 = y1 + oy,\n        x00 = (x11 + x10) / 2,\n        y00 = (y11 + y10) / 2,\n        dx = x10 - x11,\n        dy = y10 - y11,\n        d2 = dx * dx + dy * dy,\n        r = r1 - rc,\n        D = x11 * y10 - x10 * y11,\n        d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),\n        cx0 = (D * dy - dx * d) / d2,\n        cy0 = (-D * dx - dy * d) / d2,\n        cx1 = (D * dy + dx * d) / d2,\n        cy1 = (-D * dx + dy * d) / d2,\n        dx0 = cx0 - x00,\n        dy0 = cy0 - y00,\n        dx1 = cx1 - x00,\n        dy1 = cy1 - y00;\n\n    // Pick the closer of the two intersection points.\n    // TODO Is there a faster way to determine which intersection to use?\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n    return {\n      cx: cx0,\n      cy: cy0,\n      x01: -ox,\n      y01: -oy,\n      x11: cx0 * (r1 / r - 1),\n      y11: cy0 * (r1 / r - 1)\n    };\n  }\n\n  function arc() {\n    var innerRadius = arcInnerRadius,\n        outerRadius = arcOuterRadius,\n        cornerRadius = constant$1(0),\n        padRadius = null,\n        startAngle = arcStartAngle,\n        endAngle = arcEndAngle,\n        padAngle = arcPadAngle,\n        context = null;\n\n    function arc() {\n      var buffer,\n          r,\n          r0 = +innerRadius.apply(this, arguments),\n          r1 = +outerRadius.apply(this, arguments),\n          a0 = startAngle.apply(this, arguments) - halfPi$1,\n          a1 = endAngle.apply(this, arguments) - halfPi$1,\n          da = Math.abs(a1 - a0),\n          cw = a1 > a0;\n\n      if (!context) context = buffer = path();\n\n      // Ensure that the outer radius is always larger than the inner radius.\n      if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n      // Is it a point?\n      if (!(r1 > epsilon$1)) context.moveTo(0, 0);\n\n      // Or is it a circle or annulus?\n      else if (da > tau$2 - epsilon$1) {\n        context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));\n        context.arc(0, 0, r1, a0, a1, !cw);\n        if (r0 > epsilon$1) {\n          context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));\n          context.arc(0, 0, r0, a1, a0, cw);\n        }\n      }\n\n      // Or is it a circular or annular sector?\n      else {\n        var a01 = a0,\n            a11 = a1,\n            a00 = a0,\n            a10 = a1,\n            da0 = da,\n            da1 = da,\n            ap = padAngle.apply(this, arguments) / 2,\n            rp = (ap > epsilon$1) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),\n            rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n            rc0 = rc,\n            rc1 = rc,\n            t0,\n            t1;\n\n        // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n        if (rp > epsilon$1) {\n          var p0 = asin(rp / r0 * Math.sin(ap)),\n              p1 = asin(rp / r1 * Math.sin(ap));\n          if ((da0 -= p0 * 2) > epsilon$1) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n          else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n          if ((da1 -= p1 * 2) > epsilon$1) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n          else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n        }\n\n        var x01 = r1 * Math.cos(a01),\n            y01 = r1 * Math.sin(a01),\n            x10 = r0 * Math.cos(a10),\n            y10 = r0 * Math.sin(a10);\n\n        // Apply rounded corners?\n        if (rc > epsilon$1) {\n          var x11 = r1 * Math.cos(a11),\n              y11 = r1 * Math.sin(a11),\n              x00 = r0 * Math.cos(a00),\n              y00 = r0 * Math.sin(a00);\n\n          // Restrict the corner radius according to the sector angle.\n          if (da < pi$2) {\n            var oc = da0 > epsilon$1 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n                ax = x01 - oc[0],\n                ay = y01 - oc[1],\n                bx = x11 - oc[0],\n                by = y11 - oc[1],\n                kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),\n                lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n            rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n            rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n          }\n        }\n\n        // Is the sector collapsed to a line?\n        if (!(da1 > epsilon$1)) context.moveTo(x01, y01);\n\n        // Does the sector’s outer ring have rounded corners?\n        else if (rc1 > epsilon$1) {\n          t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n          t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n          context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n          // Have the corners merged?\n          if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n          // Otherwise, draw the two corners and the ring.\n          else {\n            context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n            context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n            context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n          }\n        }\n\n        // Or is the outer ring just a circular arc?\n        else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n        // Is there no inner ring, and it’s a circular sector?\n        // Or perhaps it’s an annular sector collapsed due to padding?\n        if (!(r0 > epsilon$1) || !(da0 > epsilon$1)) context.lineTo(x10, y10);\n\n        // Does the sector’s inner ring (or point) have rounded corners?\n        else if (rc0 > epsilon$1) {\n          t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n          t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n          context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n          // Have the corners merged?\n          if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);\n\n          // Otherwise, draw the two corners and the ring.\n          else {\n            context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);\n            context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n            context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);\n          }\n        }\n\n        // Or is the inner ring just a circular arc?\n        else context.arc(0, 0, r0, a10, a00, cw);\n      }\n\n      context.closePath();\n\n      if (buffer) return context = null, buffer + \"\" || null;\n    }\n\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n          a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$2 / 2;\n      return [Math.cos(a) * r, Math.sin(a) * r];\n    };\n\n    arc.innerRadius = function(_) {\n      return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$1(+_), arc) : innerRadius;\n    };\n\n    arc.outerRadius = function(_) {\n      return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$1(+_), arc) : outerRadius;\n    };\n\n    arc.cornerRadius = function(_) {\n      return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$1(+_), arc) : cornerRadius;\n    };\n\n    arc.padRadius = function(_) {\n      return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$1(+_), arc) : padRadius;\n    };\n\n    arc.startAngle = function(_) {\n      return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$1(+_), arc) : startAngle;\n    };\n\n    arc.endAngle = function(_) {\n      return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$1(+_), arc) : endAngle;\n    };\n\n    arc.padAngle = function(_) {\n      return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$1(+_), arc) : padAngle;\n    };\n\n    arc.context = function(_) {\n      return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n    };\n\n    return arc;\n  }\n\n  function Linear(context) {\n    this._context = context;\n  }\n\n  Linear.prototype = {\n    areaStart: function() {\n      this._line = 0;\n    },\n    areaEnd: function() {\n      this._line = NaN;\n    },\n    lineStart: function() {\n      this._point = 0;\n    },\n    lineEnd: function() {\n      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n      this._line = 1 - this._line;\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n      switch (this._point) {\n        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n        case 1: this._point = 2; // proceed\n        default: this._context.lineTo(x, y); break;\n      }\n    }\n  };\n\n  function curveLinear(context) {\n    return new Linear(context);\n  }\n\n  function x(p) {\n    return p[0];\n  }\n\n  function y(p) {\n    return p[1];\n  }\n\n  function line() {\n    var x$$ = x,\n        y$$ = y,\n        defined = constant$1(true),\n        context = null,\n        curve = curveLinear,\n        output = null;\n\n    function line(data) {\n      var i,\n          n = data.length,\n          d,\n          defined0 = false,\n          buffer;\n\n      if (context == null) output = curve(buffer = path());\n\n      for (i = 0; i <= n; ++i) {\n        if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n          if (defined0 = !defined0) output.lineStart();\n          else output.lineEnd();\n        }\n        if (defined0) output.point(+x$$(d, i, data), +y$$(d, i, data));\n      }\n\n      if (buffer) return output = null, buffer + \"\" || null;\n    }\n\n    line.x = function(_) {\n      return arguments.length ? (x$$ = typeof _ === \"function\" ? _ : constant$1(+_), line) : x$$;\n    };\n\n    line.y = function(_) {\n      return arguments.length ? (y$$ = typeof _ === \"function\" ? _ : constant$1(+_), line) : y$$;\n    };\n\n    line.defined = function(_) {\n      return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$1(!!_), line) : defined;\n    };\n\n    line.curve = function(_) {\n      return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n    };\n\n    line.context = function(_) {\n      return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n    };\n\n    return line;\n  }\n\n  function area$1() {\n    var x0 = x,\n        x1 = null,\n        y0 = constant$1(0),\n        y1 = y,\n        defined = constant$1(true),\n        context = null,\n        curve = curveLinear,\n        output = null;\n\n    function area(data) {\n      var i,\n          j,\n          k,\n          n = data.length,\n          d,\n          defined0 = false,\n          buffer,\n          x0z = new Array(n),\n          y0z = new Array(n);\n\n      if (context == null) output = curve(buffer = path());\n\n      for (i = 0; i <= n; ++i) {\n        if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n          if (defined0 = !defined0) {\n            j = i;\n            output.areaStart();\n            output.lineStart();\n          } else {\n            output.lineEnd();\n            output.lineStart();\n            for (k = i - 1; k >= j; --k) {\n              output.point(x0z[k], y0z[k]);\n            }\n            output.lineEnd();\n            output.areaEnd();\n          }\n        }\n        if (defined0) {\n          x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n          output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n        }\n      }\n\n      if (buffer) return output = null, buffer + \"\" || null;\n    }\n\n    function arealine() {\n      return line().defined(defined).curve(curve).context(context);\n    }\n\n    area.x = function(_) {\n      return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$1(+_), x1 = null, area) : x0;\n    };\n\n    area.x0 = function(_) {\n      return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$1(+_), area) : x0;\n    };\n\n    area.x1 = function(_) {\n      return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$1(+_), area) : x1;\n    };\n\n    area.y = function(_) {\n      return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$1(+_), y1 = null, area) : y0;\n    };\n\n    area.y0 = function(_) {\n      return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$1(+_), area) : y0;\n    };\n\n    area.y1 = function(_) {\n      return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$1(+_), area) : y1;\n    };\n\n    area.lineX0 =\n    area.lineY0 = function() {\n      return arealine().x(x0).y(y0);\n    };\n\n    area.lineY1 = function() {\n      return arealine().x(x0).y(y1);\n    };\n\n    area.lineX1 = function() {\n      return arealine().x(x1).y(y0);\n    };\n\n    area.defined = function(_) {\n      return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$1(!!_), area) : defined;\n    };\n\n    area.curve = function(_) {\n      return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n    };\n\n    area.context = function(_) {\n      return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n    };\n\n    return area;\n  }\n\n  function descending$1(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  }\n\n  function identity$1(d) {\n    return d;\n  }\n\n  function pie() {\n    var value = identity$1,\n        sortValues = descending$1,\n        sort = null,\n        startAngle = constant$1(0),\n        endAngle = constant$1(tau$2),\n        padAngle = constant$1(0);\n\n    function pie(data) {\n      var i,\n          n = data.length,\n          j,\n          k,\n          sum = 0,\n          index = new Array(n),\n          arcs = new Array(n),\n          a0 = +startAngle.apply(this, arguments),\n          da = Math.min(tau$2, Math.max(-tau$2, endAngle.apply(this, arguments) - a0)),\n          a1,\n          p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n          pa = p * (da < 0 ? -1 : 1),\n          v;\n\n      for (i = 0; i < n; ++i) {\n        if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n          sum += v;\n        }\n      }\n\n      // Optionally sort the arcs by previously-computed values or by data.\n      if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n      else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n      // Compute the arcs! They are stored in the original data's order.\n      for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n        j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n          data: data[j],\n          index: i,\n          value: v,\n          startAngle: a0,\n          endAngle: a1,\n          padAngle: p\n        };\n      }\n\n      return arcs;\n    }\n\n    pie.value = function(_) {\n      return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$1(+_), pie) : value;\n    };\n\n    pie.sortValues = function(_) {\n      return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n    };\n\n    pie.sort = function(_) {\n      return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n    };\n\n    pie.startAngle = function(_) {\n      return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$1(+_), pie) : startAngle;\n    };\n\n    pie.endAngle = function(_) {\n      return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$1(+_), pie) : endAngle;\n    };\n\n    pie.padAngle = function(_) {\n      return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$1(+_), pie) : padAngle;\n    };\n\n    return pie;\n  }\n\n  var curveRadialLinear = curveRadial(curveLinear);\n\n  function Radial(curve) {\n    this._curve = curve;\n  }\n\n  Radial.prototype = {\n    areaStart: function() {\n      this._curve.areaStart();\n    },\n    areaEnd: function() {\n      this._curve.areaEnd();\n    },\n    lineStart: function() {\n      this._curve.lineStart();\n    },\n    lineEnd: function() {\n      this._curve.lineEnd();\n    },\n    point: function(a, r) {\n      this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n    }\n  };\n\n  function curveRadial(curve) {\n\n    function radial(context) {\n      return new Radial(curve(context));\n    }\n\n    radial._curve = curve;\n\n    return radial;\n  }\n\n  function radialLine(l) {\n    var c = l.curve;\n\n    l.angle = l.x, delete l.x;\n    l.radius = l.y, delete l.y;\n\n    l.curve = function(_) {\n      return arguments.length ? c(curveRadial(_)) : c()._curve;\n    };\n\n    return l;\n  }\n\n  function radialLine$1() {\n    return radialLine(line().curve(curveRadialLinear));\n  }\n\n  function radialArea() {\n    var a = area$1().curve(curveRadialLinear),\n        c = a.curve,\n        x0 = a.lineX0,\n        x1 = a.lineX1,\n        y0 = a.lineY0,\n        y1 = a.lineY1;\n\n    a.angle = a.x, delete a.x;\n    a.startAngle = a.x0, delete a.x0;\n    a.endAngle = a.x1, delete a.x1;\n    a.radius = a.y, delete a.y;\n    a.innerRadius = a.y0, delete a.y0;\n    a.outerRadius = a.y1, delete a.y1;\n    a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n    a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n    a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n    a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n    a.curve = function(_) {\n      return arguments.length ? c(curveRadial(_)) : c()._curve;\n    };\n\n    return a;\n  }\n\n  var circle = {\n    draw: function(context, size) {\n      var r = Math.sqrt(size / pi$2);\n      context.moveTo(r, 0);\n      context.arc(0, 0, r, 0, tau$2);\n    }\n  };\n\n  var cross$1 = {\n    draw: function(context, size) {\n      var r = Math.sqrt(size / 5) / 2;\n      context.moveTo(-3 * r, -r);\n      context.lineTo(-r, -r);\n      context.lineTo(-r, -3 * r);\n      context.lineTo(r, -3 * r);\n      context.lineTo(r, -r);\n      context.lineTo(3 * r, -r);\n      context.lineTo(3 * r, r);\n      context.lineTo(r, r);\n      context.lineTo(r, 3 * r);\n      context.lineTo(-r, 3 * r);\n      context.lineTo(-r, r);\n      context.lineTo(-3 * r, r);\n      context.closePath();\n    }\n  };\n\n  var tan30 = Math.sqrt(1 / 3);\n  var tan30_2 = tan30 * 2;\n  var diamond = {\n    draw: function(context, size) {\n      var y = Math.sqrt(size / tan30_2),\n          x = y * tan30;\n      context.moveTo(0, -y);\n      context.lineTo(x, 0);\n      context.lineTo(0, y);\n      context.lineTo(-x, 0);\n      context.closePath();\n    }\n  };\n\n  var ka = 0.89081309152928522810;\n  var kr = Math.sin(pi$2 / 10) / Math.sin(7 * pi$2 / 10);\n  var kx = Math.sin(tau$2 / 10) * kr;\n  var ky = -Math.cos(tau$2 / 10) * kr;\n  var star = {\n    draw: function(context, size) {\n      var r = Math.sqrt(size * ka),\n          x = kx * r,\n          y = ky * r;\n      context.moveTo(0, -r);\n      context.lineTo(x, y);\n      for (var i = 1; i < 5; ++i) {\n        var a = tau$2 * i / 5,\n            c = Math.cos(a),\n            s = Math.sin(a);\n        context.lineTo(s * r, -c * r);\n        context.lineTo(c * x - s * y, s * x + c * y);\n      }\n      context.closePath();\n    }\n  };\n\n  var square = {\n    draw: function(context, size) {\n      var w = Math.sqrt(size),\n          x = -w / 2;\n      context.rect(x, x, w, w);\n    }\n  };\n\n  var sqrt3 = Math.sqrt(3);\n\n  var triangle = {\n    draw: function(context, size) {\n      var y = -Math.sqrt(size / (sqrt3 * 3));\n      context.moveTo(0, y * 2);\n      context.lineTo(-sqrt3 * y, -y);\n      context.lineTo(sqrt3 * y, -y);\n      context.closePath();\n    }\n  };\n\n  var c = -0.5;\n  var s = Math.sqrt(3) / 2;\n  var k = 1 / Math.sqrt(12);\n  var a = (k / 2 + 1) * 3;\n  var wye = {\n    draw: function(context, size) {\n      var r = Math.sqrt(size / a),\n          x0 = r / 2,\n          y0 = r * k,\n          x1 = x0,\n          y1 = r * k + r,\n          x2 = -x1,\n          y2 = y1;\n      context.moveTo(x0, y0);\n      context.lineTo(x1, y1);\n      context.lineTo(x2, y2);\n      context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n      context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n      context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n      context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n      context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n      context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n      context.closePath();\n    }\n  };\n\n  var symbols = [\n    circle,\n    cross$1,\n    diamond,\n    square,\n    star,\n    triangle,\n    wye\n  ];\n\n  function symbol() {\n    var type = constant$1(circle),\n        size = constant$1(64),\n        context = null;\n\n    function symbol() {\n      var buffer;\n      if (!context) context = buffer = path();\n      type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n      if (buffer) return context = null, buffer + \"\" || null;\n    }\n\n    symbol.type = function(_) {\n      return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$1(_), symbol) : type;\n    };\n\n    symbol.size = function(_) {\n      return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$1(+_), symbol) : size;\n    };\n\n    symbol.context = function(_) {\n      return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n    };\n\n    return symbol;\n  }\n\n  function noop() {}\n\n  function point(that, x, y) {\n    that._context.bezierCurveTo(\n      (2 * that._x0 + that._x1) / 3,\n      (2 * that._y0 + that._y1) / 3,\n      (that._x0 + 2 * that._x1) / 3,\n      (that._y0 + 2 * that._y1) / 3,\n      (that._x0 + 4 * that._x1 + x) / 6,\n      (that._y0 + 4 * that._y1 + y) / 6\n    );\n  }\n\n  function Basis(context) {\n    this._context = context;\n  }\n\n  Basis.prototype = {\n    areaStart: function() {\n      this._line = 0;\n    },\n    areaEnd: function() {\n      this._line = NaN;\n    },\n    lineStart: function() {\n      this._x0 = this._x1 =\n      this._y0 = this._y1 = NaN;\n      this._point = 0;\n    },\n    lineEnd: function() {\n      switch (this._point) {\n        case 3: point(this, this._x1, this._y1); // proceed\n        case 2: this._context.lineTo(this._x1, this._y1); break;\n      }\n      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n      this._line = 1 - this._line;\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n      switch (this._point) {\n        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n        case 1: this._point = 2; break;\n        case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n        default: point(this, x, y); break;\n      }\n      this._x0 = this._x1, this._x1 = x;\n      this._y0 = this._y1, this._y1 = y;\n    }\n  };\n\n  function basis(context) {\n    return new Basis(context);\n  }\n\n  function BasisClosed(context) {\n    this._context = context;\n  }\n\n  BasisClosed.prototype = {\n    areaStart: noop,\n    areaEnd: noop,\n    lineStart: function() {\n      this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n      this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n      this._point = 0;\n    },\n    lineEnd: function() {\n      switch (this._point) {\n        case 1: {\n          this._context.moveTo(this._x2, this._y2);\n          this._context.closePath();\n          break;\n        }\n        case 2: {\n          this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n          this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n          this._context.closePath();\n          break;\n        }\n        case 3: {\n          this.point(this._x2, this._y2);\n          this.point(this._x3, this._y3);\n          this.point(this._x4, this._y4);\n          break;\n        }\n      }\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n      switch (this._point) {\n        case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n        case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n        case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n        default: point(this, x, y); break;\n      }\n      this._x0 = this._x1, this._x1 = x;\n      this._y0 = this._y1, this._y1 = y;\n    }\n  };\n\n  function basisClosed(context) {\n    return new BasisClosed(context);\n  }\n\n  function BasisOpen(context) {\n    this._context = context;\n  }\n\n  BasisOpen.prototype = {\n    areaStart: function() {\n      this._line = 0;\n    },\n    areaEnd: function() {\n      this._line = NaN;\n    },\n    lineStart: function() {\n      this._x0 = this._x1 =\n      this._y0 = this._y1 = NaN;\n      this._point = 0;\n    },\n    lineEnd: function() {\n      if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n      this._line = 1 - this._line;\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n      switch (this._point) {\n        case 0: this._point = 1; break;\n        case 1: this._point = 2; break;\n        case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n        case 3: this._point = 4; // proceed\n        default: point(this, x, y); break;\n      }\n      this._x0 = this._x1, this._x1 = x;\n      this._y0 = this._y1, this._y1 = y;\n    }\n  };\n\n  function basisOpen(context) {\n    return new BasisOpen(context);\n  }\n\n  function Bundle(context, beta) {\n    this._basis = new Basis(context);\n    this._beta = beta;\n  }\n\n  Bundle.prototype = {\n    lineStart: function() {\n      this._x = [];\n      this._y = [];\n      this._basis.lineStart();\n    },\n    lineEnd: function() {\n      var x = this._x,\n          y = this._y,\n          j = x.length - 1;\n\n      if (j > 0) {\n        var x0 = x[0],\n            y0 = y[0],\n            dx = x[j] - x0,\n            dy = y[j] - y0,\n            i = -1,\n            t;\n\n        while (++i <= j) {\n          t = i / j;\n          this._basis.point(\n            this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n            this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n          );\n        }\n      }\n\n      this._x = this._y = null;\n      this._basis.lineEnd();\n    },\n    point: function(x, y) {\n      this._x.push(+x);\n      this._y.push(+y);\n    }\n  };\n\n  var bundle = (function custom(beta) {\n\n    function bundle(context) {\n      return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n    }\n\n    bundle.beta = function(beta) {\n      return custom(+beta);\n    };\n\n    return bundle;\n  })(0.85);\n\n  function point$1(that, x, y) {\n    that._context.bezierCurveTo(\n      that._x1 + that._k * (that._x2 - that._x0),\n      that._y1 + that._k * (that._y2 - that._y0),\n      that._x2 + that._k * (that._x1 - x),\n      that._y2 + that._k * (that._y1 - y),\n      that._x2,\n      that._y2\n    );\n  }\n\n  function Cardinal(context, tension) {\n    this._context = context;\n    this._k = (1 - tension) / 6;\n  }\n\n  Cardinal.prototype = {\n    areaStart: function() {\n      this._line = 0;\n    },\n    areaEnd: function() {\n      this._line = NaN;\n    },\n    lineStart: function() {\n      this._x0 = this._x1 = this._x2 =\n      this._y0 = this._y1 = this._y2 = NaN;\n      this._point = 0;\n    },\n    lineEnd: function() {\n      switch (this._point) {\n        case 2: this._context.lineTo(this._x2, this._y2); break;\n        case 3: point$1(this, this._x1, this._y1); break;\n      }\n      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n      this._line = 1 - this._line;\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n      switch (this._point) {\n        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n        case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n        case 2: this._point = 3; // proceed\n        default: point$1(this, x, y); break;\n      }\n      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n    }\n  };\n\n  var cardinal = (function custom(tension) {\n\n    function cardinal(context) {\n      return new Cardinal(context, tension);\n    }\n\n    cardinal.tension = function(tension) {\n      return custom(+tension);\n    };\n\n    return cardinal;\n  })(0);\n\n  function CardinalClosed(context, tension) {\n    this._context = context;\n    this._k = (1 - tension) / 6;\n  }\n\n  CardinalClosed.prototype = {\n    areaStart: noop,\n    areaEnd: noop,\n    lineStart: function() {\n      this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n      this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n      this._point = 0;\n    },\n    lineEnd: function() {\n      switch (this._point) {\n        case 1: {\n          this._context.moveTo(this._x3, this._y3);\n          this._context.closePath();\n          break;\n        }\n        case 2: {\n          this._context.lineTo(this._x3, this._y3);\n          this._context.closePath();\n          break;\n        }\n        case 3: {\n          this.point(this._x3, this._y3);\n          this.point(this._x4, this._y4);\n          this.point(this._x5, this._y5);\n          break;\n        }\n      }\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n      switch (this._point) {\n        case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n        case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n        case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n        default: point$1(this, x, y); break;\n      }\n      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n    }\n  };\n\n  var cardinalClosed = (function custom(tension) {\n\n    function cardinal(context) {\n      return new CardinalClosed(context, tension);\n    }\n\n    cardinal.tension = function(tension) {\n      return custom(+tension);\n    };\n\n    return cardinal;\n  })(0);\n\n  function CardinalOpen(context, tension) {\n    this._context = context;\n    this._k = (1 - tension) / 6;\n  }\n\n  CardinalOpen.prototype = {\n    areaStart: function() {\n      this._line = 0;\n    },\n    areaEnd: function() {\n      this._line = NaN;\n    },\n    lineStart: function() {\n      this._x0 = this._x1 = this._x2 =\n      this._y0 = this._y1 = this._y2 = NaN;\n      this._point = 0;\n    },\n    lineEnd: function() {\n      if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n      this._line = 1 - this._line;\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n      switch (this._point) {\n        case 0: this._point = 1; break;\n        case 1: this._point = 2; break;\n        case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n        case 3: this._point = 4; // proceed\n        default: point$1(this, x, y); break;\n      }\n      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n    }\n  };\n\n  var cardinalOpen = (function custom(tension) {\n\n    function cardinal(context) {\n      return new CardinalOpen(context, tension);\n    }\n\n    cardinal.tension = function(tension) {\n      return custom(+tension);\n    };\n\n    return cardinal;\n  })(0);\n\n  function point$2(that, x, y) {\n    var x1 = that._x1,\n        y1 = that._y1,\n        x2 = that._x2,\n        y2 = that._y2;\n\n    if (that._l01_a > epsilon$1) {\n      var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n          n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n      x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n      y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n    }\n\n    if (that._l23_a > epsilon$1) {\n      var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n          m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n      x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n      y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n    }\n\n    that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n  }\n\n  function CatmullRom(context, alpha) {\n    this._context = context;\n    this._alpha = alpha;\n  }\n\n  CatmullRom.prototype = {\n    areaStart: function() {\n      this._line = 0;\n    },\n    areaEnd: function() {\n      this._line = NaN;\n    },\n    lineStart: function() {\n      this._x0 = this._x1 = this._x2 =\n      this._y0 = this._y1 = this._y2 = NaN;\n      this._l01_a = this._l12_a = this._l23_a =\n      this._l01_2a = this._l12_2a = this._l23_2a =\n      this._point = 0;\n    },\n    lineEnd: function() {\n      switch (this._point) {\n        case 2: this._context.lineTo(this._x2, this._y2); break;\n        case 3: this.point(this, this._x2, this._y2); break;\n      }\n      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n      this._line = 1 - this._line;\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n\n      if (this._point) {\n        var x23 = this._x2 - x,\n            y23 = this._y2 - y;\n        this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n      }\n\n      switch (this._point) {\n        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n        case 1: this._point = 2; break;\n        case 2: this._point = 3; // proceed\n        default: point$2(this, x, y); break;\n      }\n\n      this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n      this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n    }\n  };\n\n  var catmullRom = (function custom(alpha) {\n\n    function catmullRom(context) {\n      return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n    }\n\n    catmullRom.alpha = function(alpha) {\n      return custom(+alpha);\n    };\n\n    return catmullRom;\n  })(0.5);\n\n  function CatmullRomClosed(context, alpha) {\n    this._context = context;\n    this._alpha = alpha;\n  }\n\n  CatmullRomClosed.prototype = {\n    areaStart: noop,\n    areaEnd: noop,\n    lineStart: function() {\n      this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n      this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n      this._l01_a = this._l12_a = this._l23_a =\n      this._l01_2a = this._l12_2a = this._l23_2a =\n      this._point = 0;\n    },\n    lineEnd: function() {\n      switch (this._point) {\n        case 1: {\n          this._context.moveTo(this._x3, this._y3);\n          this._context.closePath();\n          break;\n        }\n        case 2: {\n          this._context.lineTo(this._x3, this._y3);\n          this._context.closePath();\n          break;\n        }\n        case 3: {\n          this.point(this._x3, this._y3);\n          this.point(this._x4, this._y4);\n          this.point(this._x5, this._y5);\n          break;\n        }\n      }\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n\n      if (this._point) {\n        var x23 = this._x2 - x,\n            y23 = this._y2 - y;\n        this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n      }\n\n      switch (this._point) {\n        case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n        case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n        case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n        default: point$2(this, x, y); break;\n      }\n\n      this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n      this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n    }\n  };\n\n  var catmullRomClosed = (function custom(alpha) {\n\n    function catmullRom(context) {\n      return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n    }\n\n    catmullRom.alpha = function(alpha) {\n      return custom(+alpha);\n    };\n\n    return catmullRom;\n  })(0.5);\n\n  function CatmullRomOpen(context, alpha) {\n    this._context = context;\n    this._alpha = alpha;\n  }\n\n  CatmullRomOpen.prototype = {\n    areaStart: function() {\n      this._line = 0;\n    },\n    areaEnd: function() {\n      this._line = NaN;\n    },\n    lineStart: function() {\n      this._x0 = this._x1 = this._x2 =\n      this._y0 = this._y1 = this._y2 = NaN;\n      this._l01_a = this._l12_a = this._l23_a =\n      this._l01_2a = this._l12_2a = this._l23_2a =\n      this._point = 0;\n    },\n    lineEnd: function() {\n      if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n      this._line = 1 - this._line;\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n\n      if (this._point) {\n        var x23 = this._x2 - x,\n            y23 = this._y2 - y;\n        this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n      }\n\n      switch (this._point) {\n        case 0: this._point = 1; break;\n        case 1: this._point = 2; break;\n        case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n        case 3: this._point = 4; // proceed\n        default: point$2(this, x, y); break;\n      }\n\n      this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n      this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n    }\n  };\n\n  var catmullRomOpen = (function custom(alpha) {\n\n    function catmullRom(context) {\n      return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n    }\n\n    catmullRom.alpha = function(alpha) {\n      return custom(+alpha);\n    };\n\n    return catmullRom;\n  })(0.5);\n\n  function LinearClosed(context) {\n    this._context = context;\n  }\n\n  LinearClosed.prototype = {\n    areaStart: noop,\n    areaEnd: noop,\n    lineStart: function() {\n      this._point = 0;\n    },\n    lineEnd: function() {\n      if (this._point) this._context.closePath();\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n      if (this._point) this._context.lineTo(x, y);\n      else this._point = 1, this._context.moveTo(x, y);\n    }\n  };\n\n  function linearClosed(context) {\n    return new LinearClosed(context);\n  }\n\n  function sign(x) {\n    return x < 0 ? -1 : 1;\n  }\n\n  // Calculate the slopes of the tangents (Hermite-type interpolation) based on\n  // the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n  // Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n  // NOV(II), P. 443, 1990.\n  function slope3(that, x2, y2) {\n    var h0 = that._x1 - that._x0,\n        h1 = x2 - that._x1,\n        s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n        s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n        p = (s0 * h1 + s1 * h0) / (h0 + h1);\n    return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n  }\n\n  // Calculate a one-sided slope.\n  function slope2(that, t) {\n    var h = that._x1 - that._x0;\n    return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n  }\n\n  // According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n  // \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n  // with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\n  function point$3(that, t0, t1) {\n    var x0 = that._x0,\n        y0 = that._y0,\n        x1 = that._x1,\n        y1 = that._y1,\n        dx = (x1 - x0) / 3;\n    that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n  }\n\n  function MonotoneX(context) {\n    this._context = context;\n  }\n\n  MonotoneX.prototype = {\n    areaStart: function() {\n      this._line = 0;\n    },\n    areaEnd: function() {\n      this._line = NaN;\n    },\n    lineStart: function() {\n      this._x0 = this._x1 =\n      this._y0 = this._y1 =\n      this._t0 = NaN;\n      this._point = 0;\n    },\n    lineEnd: function() {\n      switch (this._point) {\n        case 2: this._context.lineTo(this._x1, this._y1); break;\n        case 3: point$3(this, this._t0, slope2(this, this._t0)); break;\n      }\n      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n      this._line = 1 - this._line;\n    },\n    point: function(x, y) {\n      var t1 = NaN;\n\n      x = +x, y = +y;\n      if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n      switch (this._point) {\n        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n        case 1: this._point = 2; break;\n        case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n        default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;\n      }\n\n      this._x0 = this._x1, this._x1 = x;\n      this._y0 = this._y1, this._y1 = y;\n      this._t0 = t1;\n    }\n  }\n\n  function MonotoneY(context) {\n    this._context = new ReflectContext(context);\n  }\n\n  (MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n    MonotoneX.prototype.point.call(this, y, x);\n  };\n\n  function ReflectContext(context) {\n    this._context = context;\n  }\n\n  ReflectContext.prototype = {\n    moveTo: function(x, y) { this._context.moveTo(y, x); },\n    closePath: function() { this._context.closePath(); },\n    lineTo: function(x, y) { this._context.lineTo(y, x); },\n    bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n  };\n\n  function monotoneX(context) {\n    return new MonotoneX(context);\n  }\n\n  function monotoneY(context) {\n    return new MonotoneY(context);\n  }\n\n  function Natural(context) {\n    this._context = context;\n  }\n\n  Natural.prototype = {\n    areaStart: function() {\n      this._line = 0;\n    },\n    areaEnd: function() {\n      this._line = NaN;\n    },\n    lineStart: function() {\n      this._x = [];\n      this._y = [];\n    },\n    lineEnd: function() {\n      var x = this._x,\n          y = this._y,\n          n = x.length;\n\n      if (n) {\n        this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n        if (n === 2) {\n          this._context.lineTo(x[1], y[1]);\n        } else {\n          var px = controlPoints(x),\n              py = controlPoints(y);\n          for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n            this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n          }\n        }\n      }\n\n      if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n      this._line = 1 - this._line;\n      this._x = this._y = null;\n    },\n    point: function(x, y) {\n      this._x.push(+x);\n      this._y.push(+y);\n    }\n  };\n\n  // See https://www.particleincell.com/2012/bezier-splines/ for derivation.\n  function controlPoints(x) {\n    var i,\n        n = x.length - 1,\n        m,\n        a = new Array(n),\n        b = new Array(n),\n        r = new Array(n);\n    a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n    for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n    a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n    for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n    a[n - 1] = r[n - 1] / b[n - 1];\n    for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n    b[n - 1] = (x[n] + a[n - 1]) / 2;\n    for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n    return [a, b];\n  }\n\n  function natural(context) {\n    return new Natural(context);\n  }\n\n  function Step(context, t) {\n    this._context = context;\n    this._t = t;\n  }\n\n  Step.prototype = {\n    areaStart: function() {\n      this._line = 0;\n    },\n    areaEnd: function() {\n      this._line = NaN;\n    },\n    lineStart: function() {\n      this._x = this._y = NaN;\n      this._point = 0;\n    },\n    lineEnd: function() {\n      if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n      if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n    },\n    point: function(x, y) {\n      x = +x, y = +y;\n      switch (this._point) {\n        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n        case 1: this._point = 2; // proceed\n        default: {\n          if (this._t <= 0) {\n            this._context.lineTo(this._x, y);\n            this._context.lineTo(x, y);\n          } else {\n            var x1 = this._x * (1 - this._t) + x * this._t;\n            this._context.lineTo(x1, this._y);\n            this._context.lineTo(x1, y);\n          }\n          break;\n        }\n      }\n      this._x = x, this._y = y;\n    }\n  };\n\n  function step(context) {\n    return new Step(context, 0.5);\n  }\n\n  function stepBefore(context) {\n    return new Step(context, 0);\n  }\n\n  function stepAfter(context) {\n    return new Step(context, 1);\n  }\n\n  var slice$2 = Array.prototype.slice;\n\n  function none(series, order) {\n    if (!((n = series.length) > 1)) return;\n    for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n      s0 = s1, s1 = series[order[i]];\n      for (var j = 0; j < m; ++j) {\n        s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n      }\n    }\n  }\n\n  function none$1(series) {\n    var n = series.length, o = new Array(n);\n    while (--n >= 0) o[n] = n;\n    return o;\n  }\n\n  function stackValue(d, key) {\n    return d[key];\n  }\n\n  function stack() {\n    var keys = constant$1([]),\n        order = none$1,\n        offset = none,\n        value = stackValue;\n\n    function stack(data) {\n      var kz = keys.apply(this, arguments),\n          i,\n          m = data.length,\n          n = kz.length,\n          sz = new Array(n),\n          oz;\n\n      for (i = 0; i < n; ++i) {\n        for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n          si[j] = sij = [0, +value(data[j], ki, j, data)];\n          sij.data = data[j];\n        }\n        si.key = ki;\n      }\n\n      for (i = 0, oz = order(sz); i < n; ++i) {\n        sz[oz[i]].index = i;\n      }\n\n      offset(sz, oz);\n      return sz;\n    }\n\n    stack.keys = function(_) {\n      return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$1(slice$2.call(_)), stack) : keys;\n    };\n\n    stack.value = function(_) {\n      return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$1(+_), stack) : value;\n    };\n\n    stack.order = function(_) {\n      return arguments.length ? (order = _ == null ? none$1 : typeof _ === \"function\" ? _ : constant$1(slice$2.call(_)), stack) : order;\n    };\n\n    stack.offset = function(_) {\n      return arguments.length ? (offset = _ == null ? none : _, stack) : offset;\n    };\n\n    return stack;\n  }\n\n  function expand(series, order) {\n    if (!((n = series.length) > 0)) return;\n    for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n      for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n      if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n    }\n    none(series, order);\n  }\n\n  function silhouette(series, order) {\n    if (!((n = series.length) > 0)) return;\n    for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n      for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n      s0[j][1] += s0[j][0] = -y / 2;\n    }\n    none(series, order);\n  }\n\n  function wiggle(series, order) {\n    if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n    for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n      for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n        var si = series[order[i]],\n            sij0 = si[j][1] || 0,\n            sij1 = si[j - 1][1] || 0,\n            s3 = (sij0 - sij1) / 2;\n        for (var k = 0; k < i; ++k) {\n          var sk = series[order[k]],\n              skj0 = sk[j][1] || 0,\n              skj1 = sk[j - 1][1] || 0;\n          s3 += skj0 - skj1;\n        }\n        s1 += sij0, s2 += s3 * sij0;\n      }\n      s0[j - 1][1] += s0[j - 1][0] = y;\n      if (s1) y -= s2 / s1;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    none(series, order);\n  }\n\n  function ascending$1(series) {\n    var sums = series.map(sum$1);\n    return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });\n  }\n\n  function sum$1(series) {\n    var s = 0, i = -1, n = series.length, v;\n    while (++i < n) if (v = +series[i][1]) s += v;\n    return s;\n  }\n\n  function descending$2(series) {\n    return ascending$1(series).reverse();\n  }\n\n  function insideOut(series) {\n    var n = series.length,\n        i,\n        j,\n        sums = series.map(sum$1),\n        order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n        top = 0,\n        bottom = 0,\n        tops = [],\n        bottoms = [];\n\n    for (i = 0; i < n; ++i) {\n      j = order[i];\n      if (top < bottom) {\n        top += sums[j];\n        tops.push(j);\n      } else {\n        bottom += sums[j];\n        bottoms.push(j);\n      }\n    }\n\n    return bottoms.reverse().concat(tops);\n  }\n\n  function reverse(series) {\n    return none$1(series).reverse();\n  }\n\n  function define(constructor, factory, prototype) {\n    constructor.prototype = factory.prototype = prototype;\n    prototype.constructor = constructor;\n  }\n\n  function extend(parent, definition) {\n    var prototype = Object.create(parent.prototype);\n    for (var key in definition) prototype[key] = definition[key];\n    return prototype;\n  }\n\n  function Color() {}\n\n  var darker = 0.7;\n  var brighter = 1 / darker;\n\n  var reHex3 = /^#([0-9a-f]{3})$/;\n  var reHex6 = /^#([0-9a-f]{6})$/;\n  var reRgbInteger = /^rgb\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*\\)$/;\n  var reRgbPercent = /^rgb\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n  var reRgbaInteger = /^rgba\\(\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n  var reRgbaPercent = /^rgba\\(\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n  var reHslPercent = /^hsl\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n  var reHslaPercent = /^hsla\\(\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)%\\s*,\\s*([-+]?\\d+(?:\\.\\d+)?)\\s*\\)$/;\n  var named = {\n    aliceblue: 0xf0f8ff,\n    antiquewhite: 0xfaebd7,\n    aqua: 0x00ffff,\n    aquamarine: 0x7fffd4,\n    azure: 0xf0ffff,\n    beige: 0xf5f5dc,\n    bisque: 0xffe4c4,\n    black: 0x000000,\n    blanchedalmond: 0xffebcd,\n    blue: 0x0000ff,\n    blueviolet: 0x8a2be2,\n    brown: 0xa52a2a,\n    burlywood: 0xdeb887,\n    cadetblue: 0x5f9ea0,\n    chartreuse: 0x7fff00,\n    chocolate: 0xd2691e,\n    coral: 0xff7f50,\n    cornflowerblue: 0x6495ed,\n    cornsilk: 0xfff8dc,\n    crimson: 0xdc143c,\n    cyan: 0x00ffff,\n    darkblue: 0x00008b,\n    darkcyan: 0x008b8b,\n    darkgoldenrod: 0xb8860b,\n    darkgray: 0xa9a9a9,\n    darkgreen: 0x006400,\n    darkgrey: 0xa9a9a9,\n    darkkhaki: 0xbdb76b,\n    darkmagenta: 0x8b008b,\n    darkolivegreen: 0x556b2f,\n    darkorange: 0xff8c00,\n    darkorchid: 0x9932cc,\n    darkred: 0x8b0000,\n    darksalmon: 0xe9967a,\n    darkseagreen: 0x8fbc8f,\n    darkslateblue: 0x483d8b,\n    darkslategray: 0x2f4f4f,\n    darkslategrey: 0x2f4f4f,\n    darkturquoise: 0x00ced1,\n    darkviolet: 0x9400d3,\n    deeppink: 0xff1493,\n    deepskyblue: 0x00bfff,\n    dimgray: 0x696969,\n    dimgrey: 0x696969,\n    dodgerblue: 0x1e90ff,\n    firebrick: 0xb22222,\n    floralwhite: 0xfffaf0,\n    forestgreen: 0x228b22,\n    fuchsia: 0xff00ff,\n    gainsboro: 0xdcdcdc,\n    ghostwhite: 0xf8f8ff,\n    gold: 0xffd700,\n    goldenrod: 0xdaa520,\n    gray: 0x808080,\n    green: 0x008000,\n    greenyellow: 0xadff2f,\n    grey: 0x808080,\n    honeydew: 0xf0fff0,\n    hotpink: 0xff69b4,\n    indianred: 0xcd5c5c,\n    indigo: 0x4b0082,\n    ivory: 0xfffff0,\n    khaki: 0xf0e68c,\n    lavender: 0xe6e6fa,\n    lavenderblush: 0xfff0f5,\n    lawngreen: 0x7cfc00,\n    lemonchiffon: 0xfffacd,\n    lightblue: 0xadd8e6,\n    lightcoral: 0xf08080,\n    lightcyan: 0xe0ffff,\n    lightgoldenrodyellow: 0xfafad2,\n    lightgray: 0xd3d3d3,\n    lightgreen: 0x90ee90,\n    lightgrey: 0xd3d3d3,\n    lightpink: 0xffb6c1,\n    lightsalmon: 0xffa07a,\n    lightseagreen: 0x20b2aa,\n    lightskyblue: 0x87cefa,\n    lightslategray: 0x778899,\n    lightslategrey: 0x778899,\n    lightsteelblue: 0xb0c4de,\n    lightyellow: 0xffffe0,\n    lime: 0x00ff00,\n    limegreen: 0x32cd32,\n    linen: 0xfaf0e6,\n    magenta: 0xff00ff,\n    maroon: 0x800000,\n    mediumaquamarine: 0x66cdaa,\n    mediumblue: 0x0000cd,\n    mediumorchid: 0xba55d3,\n    mediumpurple: 0x9370db,\n    mediumseagreen: 0x3cb371,\n    mediumslateblue: 0x7b68ee,\n    mediumspringgreen: 0x00fa9a,\n    mediumturquoise: 0x48d1cc,\n    mediumvioletred: 0xc71585,\n    midnightblue: 0x191970,\n    mintcream: 0xf5fffa,\n    mistyrose: 0xffe4e1,\n    moccasin: 0xffe4b5,\n    navajowhite: 0xffdead,\n    navy: 0x000080,\n    oldlace: 0xfdf5e6,\n    olive: 0x808000,\n    olivedrab: 0x6b8e23,\n    orange: 0xffa500,\n    orangered: 0xff4500,\n    orchid: 0xda70d6,\n    palegoldenrod: 0xeee8aa,\n    palegreen: 0x98fb98,\n    paleturquoise: 0xafeeee,\n    palevioletred: 0xdb7093,\n    papayawhip: 0xffefd5,\n    peachpuff: 0xffdab9,\n    peru: 0xcd853f,\n    pink: 0xffc0cb,\n    plum: 0xdda0dd,\n    powderblue: 0xb0e0e6,\n    purple: 0x800080,\n    rebeccapurple: 0x663399,\n    red: 0xff0000,\n    rosybrown: 0xbc8f8f,\n    royalblue: 0x4169e1,\n    saddlebrown: 0x8b4513,\n    salmon: 0xfa8072,\n    sandybrown: 0xf4a460,\n    seagreen: 0x2e8b57,\n    seashell: 0xfff5ee,\n    sienna: 0xa0522d,\n    silver: 0xc0c0c0,\n    skyblue: 0x87ceeb,\n    slateblue: 0x6a5acd,\n    slategray: 0x708090,\n    slategrey: 0x708090,\n    snow: 0xfffafa,\n    springgreen: 0x00ff7f,\n    steelblue: 0x4682b4,\n    tan: 0xd2b48c,\n    teal: 0x008080,\n    thistle: 0xd8bfd8,\n    tomato: 0xff6347,\n    turquoise: 0x40e0d0,\n    violet: 0xee82ee,\n    wheat: 0xf5deb3,\n    white: 0xffffff,\n    whitesmoke: 0xf5f5f5,\n    yellow: 0xffff00,\n    yellowgreen: 0x9acd32\n  };\n\n  define(Color, color, {\n    displayable: function() {\n      return this.rgb().displayable();\n    },\n    toString: function() {\n      return this.rgb() + \"\";\n    }\n  });\n\n  function color(format) {\n    var m;\n    format = (format + \"\").trim().toLowerCase();\n    return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n        : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n        : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n        : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n        : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n        : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n        : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n        : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n        : named.hasOwnProperty(format) ? rgbn(named[format])\n        : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n        : null;\n  }\n\n  function rgbn(n) {\n    return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n  }\n\n  function rgba(r, g, b, a) {\n    if (a <= 0) r = g = b = NaN;\n    return new Rgb(r, g, b, a);\n  }\n\n  function rgbConvert(o) {\n    if (!(o instanceof Color)) o = color(o);\n    if (!o) return new Rgb;\n    o = o.rgb();\n    return new Rgb(o.r, o.g, o.b, o.opacity);\n  }\n\n  function colorRgb(r, g, b, opacity) {\n    return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n  }\n\n  function Rgb(r, g, b, opacity) {\n    this.r = +r;\n    this.g = +g;\n    this.b = +b;\n    this.opacity = +opacity;\n  }\n\n  define(Rgb, colorRgb, extend(Color, {\n    brighter: function(k) {\n      k = k == null ? brighter : Math.pow(brighter, k);\n      return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n    },\n    darker: function(k) {\n      k = k == null ? darker : Math.pow(darker, k);\n      return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n    },\n    rgb: function() {\n      return this;\n    },\n    displayable: function() {\n      return (0 <= this.r && this.r <= 255)\n          && (0 <= this.g && this.g <= 255)\n          && (0 <= this.b && this.b <= 255)\n          && (0 <= this.opacity && this.opacity <= 1);\n    },\n    toString: function() {\n      var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n      return (a === 1 ? \"rgb(\" : \"rgba(\")\n          + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n          + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n          + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n          + (a === 1 ? \")\" : \", \" + a + \")\");\n    }\n  }));\n\n  function hsla(h, s, l, a) {\n    if (a <= 0) h = s = l = NaN;\n    else if (l <= 0 || l >= 1) h = s = NaN;\n    else if (s <= 0) h = NaN;\n    return new Hsl(h, s, l, a);\n  }\n\n  function hslConvert(o) {\n    if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n    if (!(o instanceof Color)) o = color(o);\n    if (!o) return new Hsl;\n    if (o instanceof Hsl) return o;\n    o = o.rgb();\n    var r = o.r / 255,\n        g = o.g / 255,\n        b = o.b / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        h = NaN,\n        s = max - min,\n        l = (max + min) / 2;\n    if (s) {\n      if (r === max) h = (g - b) / s + (g < b) * 6;\n      else if (g === max) h = (b - r) / s + 2;\n      else h = (r - g) / s + 4;\n      s /= l < 0.5 ? max + min : 2 - max - min;\n      h *= 60;\n    } else {\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new Hsl(h, s, l, o.opacity);\n  }\n\n  function colorHsl(h, s, l, opacity) {\n    return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n  }\n\n  function Hsl(h, s, l, opacity) {\n    this.h = +h;\n    this.s = +s;\n    this.l = +l;\n    this.opacity = +opacity;\n  }\n\n  define(Hsl, colorHsl, extend(Color, {\n    brighter: function(k) {\n      k = k == null ? brighter : Math.pow(brighter, k);\n      return new Hsl(this.h, this.s, this.l * k, this.opacity);\n    },\n    darker: function(k) {\n      k = k == null ? darker : Math.pow(darker, k);\n      return new Hsl(this.h, this.s, this.l * k, this.opacity);\n    },\n    rgb: function() {\n      var h = this.h % 360 + (this.h < 0) * 360,\n          s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n          l = this.l,\n          m2 = l + (l < 0.5 ? l : 1 - l) * s,\n          m1 = 2 * l - m2;\n      return new Rgb(\n        hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n        hsl2rgb(h, m1, m2),\n        hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n        this.opacity\n      );\n    },\n    displayable: function() {\n      return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n          && (0 <= this.l && this.l <= 1)\n          && (0 <= this.opacity && this.opacity <= 1);\n    }\n  }));\n\n  /* From FvD 13.37, CSS Color Module Level 3 */\n  function hsl2rgb(h, m1, m2) {\n    return (h < 60 ? m1 + (m2 - m1) * h / 60\n        : h < 180 ? m2\n        : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n        : m1) * 255;\n  }\n\n  var deg2rad = Math.PI / 180;\n  var rad2deg = 180 / Math.PI;\n\n  var Kn = 18;\n  var Xn = 0.950470;\n  var Yn = 1;\n  var Zn = 1.088830;\n  var t0 = 4 / 29;\n  var t1 = 6 / 29;\n  var t2 = 3 * t1 * t1;\n  var t3 = t1 * t1 * t1;\n  function labConvert(o) {\n    if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n    if (o instanceof Hcl) {\n      var h = o.h * deg2rad;\n      return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n    }\n    if (!(o instanceof Rgb)) o = rgbConvert(o);\n    var b = rgb2xyz(o.r),\n        a = rgb2xyz(o.g),\n        l = rgb2xyz(o.b),\n        x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n        y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n        z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n    return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n  }\n\n  function lab(l, a, b, opacity) {\n    return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n  }\n\n  function Lab(l, a, b, opacity) {\n    this.l = +l;\n    this.a = +a;\n    this.b = +b;\n    this.opacity = +opacity;\n  }\n\n  define(Lab, lab, extend(Color, {\n    brighter: function(k) {\n      return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n    },\n    darker: function(k) {\n      return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n    },\n    rgb: function() {\n      var y = (this.l + 16) / 116,\n          x = isNaN(this.a) ? y : y + this.a / 500,\n          z = isNaN(this.b) ? y : y - this.b / 200;\n      y = Yn * lab2xyz(y);\n      x = Xn * lab2xyz(x);\n      z = Zn * lab2xyz(z);\n      return new Rgb(\n        xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n        xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n        xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n        this.opacity\n      );\n    }\n  }));\n\n  function xyz2lab(t) {\n    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n  }\n\n  function lab2xyz(t) {\n    return t > t1 ? t * t * t : t2 * (t - t0);\n  }\n\n  function xyz2rgb(x) {\n    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n  }\n\n  function rgb2xyz(x) {\n    return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n  }\n\n  function hclConvert(o) {\n    if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n    if (!(o instanceof Lab)) o = labConvert(o);\n    var h = Math.atan2(o.b, o.a) * rad2deg;\n    return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n  }\n\n  function colorHcl(h, c, l, opacity) {\n    return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n  }\n\n  function Hcl(h, c, l, opacity) {\n    this.h = +h;\n    this.c = +c;\n    this.l = +l;\n    this.opacity = +opacity;\n  }\n\n  define(Hcl, colorHcl, extend(Color, {\n    brighter: function(k) {\n      return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n    },\n    darker: function(k) {\n      return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n    },\n    rgb: function() {\n      return labConvert(this).rgb();\n    }\n  }));\n\n  var A = -0.14861;\n  var B = +1.78277;\n  var C = -0.29227;\n  var D = -0.90649;\n  var E = +1.97294;\n  var ED = E * D;\n  var EB = E * B;\n  var BC_DA = B * C - D * A;\n  function cubehelixConvert(o) {\n    if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n    if (!(o instanceof Rgb)) o = rgbConvert(o);\n    var r = o.r / 255,\n        g = o.g / 255,\n        b = o.b / 255,\n        l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n        bl = b - l,\n        k = (E * (g - l) - C * bl) / D,\n        s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n        h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n    return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n  }\n\n  function cubehelix(h, s, l, opacity) {\n    return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n  }\n\n  function Cubehelix(h, s, l, opacity) {\n    this.h = +h;\n    this.s = +s;\n    this.l = +l;\n    this.opacity = +opacity;\n  }\n\n  define(Cubehelix, cubehelix, extend(Color, {\n    brighter: function(k) {\n      k = k == null ? brighter : Math.pow(brighter, k);\n      return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n    },\n    darker: function(k) {\n      k = k == null ? darker : Math.pow(darker, k);\n      return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n    },\n    rgb: function() {\n      var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n          l = +this.l,\n          a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n          cosh = Math.cos(h),\n          sinh = Math.sin(h);\n      return new Rgb(\n        255 * (l + a * (A * cosh + B * sinh)),\n        255 * (l + a * (C * cosh + D * sinh)),\n        255 * (l + a * (E * cosh)),\n        this.opacity\n      );\n    }\n  }));\n\n  function basis$1(t1, v0, v1, v2, v3) {\n    var t2 = t1 * t1, t3 = t2 * t1;\n    return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n        + (4 - 6 * t2 + 3 * t3) * v1\n        + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n        + t3 * v3) / 6;\n  }\n\n  function basis$2(values) {\n    var n = values.length - 1;\n    return function(t) {\n      var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n          v1 = values[i],\n          v2 = values[i + 1],\n          v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n          v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n      return basis$1((t - i / n) * n, v0, v1, v2, v3);\n    };\n  }\n\n  function basisClosed$1(values) {\n    var n = values.length;\n    return function(t) {\n      var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n          v0 = values[(i + n - 1) % n],\n          v1 = values[i % n],\n          v2 = values[(i + 1) % n],\n          v3 = values[(i + 2) % n];\n      return basis$1((t - i / n) * n, v0, v1, v2, v3);\n    };\n  }\n\n  function constant$2(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function linear$1(a, d) {\n    return function(t) {\n      return a + t * d;\n    };\n  }\n\n  function exponential$1(a, b, y) {\n    return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n      return Math.pow(a + t * b, y);\n    };\n  }\n\n  function hue(a, b) {\n    var d = b - a;\n    return d ? linear$1(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$2(isNaN(a) ? b : a);\n  }\n\n  function gamma(y) {\n    return (y = +y) === 1 ? nogamma : function(a, b) {\n      return b - a ? exponential$1(a, b, y) : constant$2(isNaN(a) ? b : a);\n    };\n  }\n\n  function nogamma(a, b) {\n    var d = b - a;\n    return d ? linear$1(a, d) : constant$2(isNaN(a) ? b : a);\n  }\n\n  var interpolateRgb = (function rgbGamma(y) {\n    var color = gamma(y);\n\n    function rgb(start, end) {\n      var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n          g = color(start.g, end.g),\n          b = color(start.b, end.b),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.r = r(t);\n        start.g = g(t);\n        start.b = b(t);\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    rgb.gamma = rgbGamma;\n\n    return rgb;\n  })(1);\n\n  function rgbSpline(spline) {\n    return function(colors) {\n      var n = colors.length,\n          r = new Array(n),\n          g = new Array(n),\n          b = new Array(n),\n          i, color;\n      for (i = 0; i < n; ++i) {\n        color = colorRgb(colors[i]);\n        r[i] = color.r || 0;\n        g[i] = color.g || 0;\n        b[i] = color.b || 0;\n      }\n      r = spline(r);\n      g = spline(g);\n      b = spline(b);\n      color.opacity = 1;\n      return function(t) {\n        color.r = r(t);\n        color.g = g(t);\n        color.b = b(t);\n        return color + \"\";\n      };\n    };\n  }\n\n  var rgbBasis = rgbSpline(basis$2);\n  var rgbBasisClosed = rgbSpline(basisClosed$1);\n\n  function array$1(a, b) {\n    var nb = b ? b.length : 0,\n        na = a ? Math.min(nb, a.length) : 0,\n        x = new Array(nb),\n        c = new Array(nb),\n        i;\n\n    for (i = 0; i < na; ++i) x[i] = interpolate(a[i], b[i]);\n    for (; i < nb; ++i) c[i] = b[i];\n\n    return function(t) {\n      for (i = 0; i < na; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n\n  function date(a, b) {\n    var d = new Date;\n    return a = +a, b -= a, function(t) {\n      return d.setTime(a + b * t), d;\n    };\n  }\n\n  function interpolateNumber(a, b) {\n    return a = +a, b -= a, function(t) {\n      return a + b * t;\n    };\n  }\n\n  function object(a, b) {\n    var i = {},\n        c = {},\n        k;\n\n    if (a === null || typeof a !== \"object\") a = {};\n    if (b === null || typeof b !== \"object\") b = {};\n\n    for (k in b) {\n      if (k in a) {\n        i[k] = interpolate(a[k], b[k]);\n      } else {\n        c[k] = b[k];\n      }\n    }\n\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n\n  var reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\n  var reB = new RegExp(reA.source, \"g\");\n  function zero(b) {\n    return function() {\n      return b;\n    };\n  }\n\n  function one(b) {\n    return function(t) {\n      return b(t) + \"\";\n    };\n  }\n\n  function interpolateString(a, b) {\n    var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n        am, // current match in a\n        bm, // current match in b\n        bs, // string preceding current number in b, if any\n        i = -1, // index in s\n        s = [], // string constants and placeholders\n        q = []; // number interpolators\n\n    // Coerce inputs to strings.\n    a = a + \"\", b = b + \"\";\n\n    // Interpolate pairs of numbers in a & b.\n    while ((am = reA.exec(a))\n        && (bm = reB.exec(b))) {\n      if ((bs = bm.index) > bi) { // a string precedes the next number in b\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; // coalesce with previous string\n        else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n        if (s[i]) s[i] += bm; // coalesce with previous string\n        else s[++i] = bm;\n      } else { // interpolate non-matching numbers\n        s[++i] = null;\n        q.push({i: i, x: interpolateNumber(am, bm)});\n      }\n      bi = reB.lastIndex;\n    }\n\n    // Add remains of b.\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n\n    // Special optimization for only a single match.\n    // Otherwise, interpolate each of the numbers and rejoin the string.\n    return s.length < 2 ? (q[0]\n        ? one(q[0].x)\n        : zero(b))\n        : (b = q.length, function(t) {\n            for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n            return s.join(\"\");\n          });\n  }\n\n  function interpolate(a, b) {\n    var t = typeof b, c;\n    return b == null || t === \"boolean\" ? constant$2(b)\n        : (t === \"number\" ? interpolateNumber\n        : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n        : b instanceof color ? interpolateRgb\n        : b instanceof Date ? date\n        : Array.isArray(b) ? array$1\n        : isNaN(b) ? object\n        : interpolateNumber)(a, b);\n  }\n\n  function interpolateRound(a, b) {\n    return a = +a, b -= a, function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n\n  var degrees = 180 / Math.PI;\n\n  var identity$2 = {\n    translateX: 0,\n    translateY: 0,\n    rotate: 0,\n    skewX: 0,\n    scaleX: 1,\n    scaleY: 1\n  };\n\n  function decompose(a, b, c, d, e, f) {\n    var scaleX, scaleY, skewX;\n    if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n    if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n    if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n    if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n    return {\n      translateX: e,\n      translateY: f,\n      rotate: Math.atan2(b, a) * degrees,\n      skewX: Math.atan(skewX) * degrees,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n\n  var cssNode;\n  var cssRoot;\n  var cssView;\n  var svgNode;\n  function parseCss(value) {\n    if (value === \"none\") return identity$2;\n    if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n    cssNode.style.transform = value;\n    value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n    cssRoot.removeChild(cssNode);\n    value = value.slice(7, -1).split(\",\");\n    return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n  }\n\n  function parseSvg(value) {\n    if (value == null) return identity$2;\n    if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n    svgNode.setAttribute(\"transform\", value);\n    if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n    value = value.matrix;\n    return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n  }\n\n  function interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n    function pop(s) {\n      return s.length ? s.pop() + \" \" : \"\";\n    }\n\n    function translate(xa, ya, xb, yb, s, q) {\n      if (xa !== xb || ya !== yb) {\n        var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n        q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n      } else if (xb || yb) {\n        s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n      }\n    }\n\n    function rotate(a, b, s, q) {\n      if (a !== b) {\n        if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n        q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n      } else if (b) {\n        s.push(pop(s) + \"rotate(\" + b + degParen);\n      }\n    }\n\n    function skewX(a, b, s, q) {\n      if (a !== b) {\n        q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: interpolateNumber(a, b)});\n      } else if (b) {\n        s.push(pop(s) + \"skewX(\" + b + degParen);\n      }\n    }\n\n    function scale(xa, ya, xb, yb, s, q) {\n      if (xa !== xb || ya !== yb) {\n        var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n        q.push({i: i - 4, x: interpolateNumber(xa, xb)}, {i: i - 2, x: interpolateNumber(ya, yb)});\n      } else if (xb !== 1 || yb !== 1) {\n        s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n      }\n    }\n\n    return function(a, b) {\n      var s = [], // string constants and placeholders\n          q = []; // number interpolators\n      a = parse(a), b = parse(b);\n      translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n      rotate(a.rotate, b.rotate, s, q);\n      skewX(a.skewX, b.skewX, s, q);\n      scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n      a = b = null; // gc\n      return function(t) {\n        var i = -1, n = q.length, o;\n        while (++i < n) s[(o = q[i]).i] = o.x(t);\n        return s.join(\"\");\n      };\n    };\n  }\n\n  var interpolateTransform$1 = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\n  var interpolateTransform$2 = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\n  var rho = Math.SQRT2;\n  var rho2 = 2;\n  var rho4 = 4;\n  var epsilon2 = 1e-12;\n  function cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n\n  function sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n\n  function tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n\n  // p0 = [ux0, uy0, w0]\n  // p1 = [ux1, uy1, w1]\n  function interpolateZoom(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n        ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n        dx = ux1 - ux0,\n        dy = uy1 - uy0,\n        d2 = dx * dx + dy * dy,\n        i,\n        S;\n\n    // Special case for u0 ≅ u1.\n    if (d2 < epsilon2) {\n      S = Math.log(w1 / w0) / rho;\n      i = function(t) {\n        return [\n          ux0 + t * dx,\n          uy0 + t * dy,\n          w0 * Math.exp(rho * t * S)\n        ];\n      }\n    }\n\n    // General case.\n    else {\n      var d1 = Math.sqrt(d2),\n          b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n          b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / rho;\n      i = function(t) {\n        var s = t * S,\n            coshr0 = cosh(r0),\n            u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n        return [\n          ux0 + u * dx,\n          uy0 + u * dy,\n          w0 * coshr0 / cosh(rho * s + r0)\n        ];\n      }\n    }\n\n    i.duration = S * 1000;\n\n    return i;\n  }\n\n  function hsl(hue) {\n    return function(start, end) {\n      var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(t);\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n  }\n\n  var hsl$1 = hsl(hue);\n  var hslLong = hsl(nogamma);\n\n  function lab$1(start, end) {\n    var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n        a = nogamma(start.a, end.a),\n        b = nogamma(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.l = l(t);\n      start.a = a(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  function hcl(hue) {\n    return function(start, end) {\n      var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n          c = nogamma(start.c, end.c),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.c = c(t);\n        start.l = l(t);\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n  }\n\n  var hcl$1 = hcl(hue);\n  var hclLong = hcl(nogamma);\n\n  function cubehelix$1(hue) {\n    return (function cubehelixGamma(y) {\n      y = +y;\n\n      function cubehelix$$(start, end) {\n        var h = hue((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n            s = nogamma(start.s, end.s),\n            l = nogamma(start.l, end.l),\n            opacity = nogamma(start.opacity, end.opacity);\n        return function(t) {\n          start.h = h(t);\n          start.s = s(t);\n          start.l = l(Math.pow(t, y));\n          start.opacity = opacity(t);\n          return start + \"\";\n        };\n      }\n\n      cubehelix$$.gamma = cubehelixGamma;\n\n      return cubehelix$$;\n    })(1);\n  }\n\n  var cubehelix$2 = cubehelix$1(hue);\n  var interpolateCubehelixLong = cubehelix$1(nogamma);\n\n  function quantize(interpolator, n) {\n    var samples = new Array(n);\n    for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n    return samples;\n  }\n\n  var noop$1 = {value: function() {}};\n\n  function dispatch() {\n    for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n      if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n      _[t] = [];\n    }\n    return new Dispatch(_);\n  }\n\n  function Dispatch(_) {\n    this._ = _;\n  }\n\n  function parseTypenames(typenames, types) {\n    return typenames.trim().split(/^|\\s+/).map(function(t) {\n      var name = \"\", i = t.indexOf(\".\");\n      if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n      if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n      return {type: t, name: name};\n    });\n  }\n\n  Dispatch.prototype = dispatch.prototype = {\n    constructor: Dispatch,\n    on: function(typename, callback) {\n      var _ = this._,\n          T = parseTypenames(typename + \"\", _),\n          t,\n          i = -1,\n          n = T.length;\n\n      // If no callback was specified, return the callback of the given type and name.\n      if (arguments.length < 2) {\n        while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n        return;\n      }\n\n      // If a type was specified, set the callback for the given type and name.\n      // Otherwise, if a null callback was specified, remove callbacks of the given name.\n      if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      while (++i < n) {\n        if (t = (typename = T[i]).type) _[t] = set$1(_[t], typename.name, callback);\n        else if (callback == null) for (t in _) _[t] = set$1(_[t], typename.name, null);\n      }\n\n      return this;\n    },\n    copy: function() {\n      var copy = {}, _ = this._;\n      for (var t in _) copy[t] = _[t].slice();\n      return new Dispatch(copy);\n    },\n    call: function(type, that) {\n      if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n      if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n      for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n    },\n    apply: function(type, that, args) {\n      if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n      for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n    }\n  };\n\n  function get(type, name) {\n    for (var i = 0, n = type.length, c; i < n; ++i) {\n      if ((c = type[i]).name === name) {\n        return c.value;\n      }\n    }\n  }\n\n  function set$1(type, name, callback) {\n    for (var i = 0, n = type.length; i < n; ++i) {\n      if (type[i].name === name) {\n        type[i] = noop$1, type = type.slice(0, i).concat(type.slice(i + 1));\n        break;\n      }\n    }\n    if (callback != null) type.push({name: name, value: callback});\n    return type;\n  }\n\n  function objectConverter(columns) {\n    return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n      return JSON.stringify(name) + \": d[\" + i + \"]\";\n    }).join(\",\") + \"}\");\n  }\n\n  function customConverter(columns, f) {\n    var object = objectConverter(columns);\n    return function(row, i) {\n      return f(object(row), i, columns);\n    };\n  }\n\n  // Compute unique columns in order of discovery.\n  function inferColumns(rows) {\n    var columnSet = Object.create(null),\n        columns = [];\n\n    rows.forEach(function(row) {\n      for (var column in row) {\n        if (!(column in columnSet)) {\n          columns.push(columnSet[column] = column);\n        }\n      }\n    });\n\n    return columns;\n  }\n\n  function dsv(delimiter) {\n    var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n        delimiterCode = delimiter.charCodeAt(0);\n\n    function parse(text, f) {\n      var convert, columns, rows = parseRows(text, function(row, i) {\n        if (convert) return convert(row, i - 1);\n        columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n      });\n      rows.columns = columns;\n      return rows;\n    }\n\n    function parseRows(text, f) {\n      var EOL = {}, // sentinel value for end-of-line\n          EOF = {}, // sentinel value for end-of-file\n          rows = [], // output rows\n          N = text.length,\n          I = 0, // current character index\n          n = 0, // the current line number\n          t, // the current token\n          eol; // is the current token followed by EOL?\n\n      function token() {\n        if (I >= N) return EOF; // special case: end of file\n        if (eol) return eol = false, EOL; // special case: end of line\n\n        // special case: quotes\n        var j = I, c;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n        }\n\n        // common case: find next delimiter or newline\n        while (I < N) {\n          var k = 1;\n          c = text.charCodeAt(I++);\n          if (c === 10) eol = true; // \\n\n          else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n          else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n\n        // special case: last token before EOF\n        return text.slice(j);\n      }\n\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n\n      return rows;\n    }\n\n    function format(rows, columns) {\n      if (columns == null) columns = inferColumns(rows);\n      return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n        return columns.map(function(column) {\n          return formatValue(row[column]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    }\n\n    function formatRows(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    }\n\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n\n    function formatValue(text) {\n      return text == null ? \"\"\n          : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n          : text;\n    }\n\n    return {\n      parse: parse,\n      parseRows: parseRows,\n      format: format,\n      formatRows: formatRows\n    };\n  }\n\n  var csv = dsv(\",\");\n\n  var csvParse = csv.parse;\n  var csvParseRows = csv.parseRows;\n  var csvFormat = csv.format;\n  var csvFormatRows = csv.formatRows;\n\n  var tsv = dsv(\"\\t\");\n\n  var tsvParse = tsv.parse;\n  var tsvParseRows = tsv.parseRows;\n  var tsvFormat = tsv.format;\n  var tsvFormatRows = tsv.formatRows;\n\n  function request(url, callback) {\n    var request,\n        event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n        mimeType,\n        headers = map$1(),\n        xhr = new XMLHttpRequest,\n        user = null,\n        password = null,\n        response,\n        responseType,\n        timeout = 0;\n\n    // If IE does not support CORS, use XDomainRequest.\n    if (typeof XDomainRequest !== \"undefined\"\n        && !(\"withCredentials\" in xhr)\n        && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n    \"onload\" in xhr\n        ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n        : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n    function respond(o) {\n      var status = xhr.status, result;\n      if (!status && hasResponse(xhr)\n          || status >= 200 && status < 300\n          || status === 304) {\n        if (response) {\n          try {\n            result = response.call(request, xhr);\n          } catch (e) {\n            event.call(\"error\", request, e);\n            return;\n          }\n        } else {\n          result = xhr;\n        }\n        event.call(\"load\", request, result);\n      } else {\n        event.call(\"error\", request, o);\n      }\n    }\n\n    xhr.onprogress = function(e) {\n      event.call(\"progress\", request, e);\n    };\n\n    request = {\n      header: function(name, value) {\n        name = (name + \"\").toLowerCase();\n        if (arguments.length < 2) return headers.get(name);\n        if (value == null) headers.remove(name);\n        else headers.set(name, value + \"\");\n        return request;\n      },\n\n      // If mimeType is non-null and no Accept header is set, a default is used.\n      mimeType: function(value) {\n        if (!arguments.length) return mimeType;\n        mimeType = value == null ? null : value + \"\";\n        return request;\n      },\n\n      // Specifies what type the response value should take;\n      // for instance, arraybuffer, blob, document, or text.\n      responseType: function(value) {\n        if (!arguments.length) return responseType;\n        responseType = value;\n        return request;\n      },\n\n      timeout: function(value) {\n        if (!arguments.length) return timeout;\n        timeout = +value;\n        return request;\n      },\n\n      user: function(value) {\n        return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n      },\n\n      password: function(value) {\n        return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n      },\n\n      // Specify how to convert the response content to a specific type;\n      // changes the callback value on \"load\" events.\n      response: function(value) {\n        response = value;\n        return request;\n      },\n\n      // Alias for send(\"GET\", …).\n      get: function(data, callback) {\n        return request.send(\"GET\", data, callback);\n      },\n\n      // Alias for send(\"POST\", …).\n      post: function(data, callback) {\n        return request.send(\"POST\", data, callback);\n      },\n\n      // If callback is non-null, it will be used for error and load events.\n      send: function(method, data, callback) {\n        xhr.open(method, url, true, user, password);\n        if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n        if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n        if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n        if (responseType != null) xhr.responseType = responseType;\n        if (timeout > 0) xhr.timeout = timeout;\n        if (callback == null && typeof data === \"function\") callback = data, data = null;\n        if (callback != null && callback.length === 1) callback = fixCallback(callback);\n        if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n        event.call(\"beforesend\", request, xhr);\n        xhr.send(data == null ? null : data);\n        return request;\n      },\n\n      abort: function() {\n        xhr.abort();\n        return request;\n      },\n\n      on: function() {\n        var value = event.on.apply(event, arguments);\n        return value === event ? request : value;\n      }\n    };\n\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return request.get(callback);\n    }\n\n    return request;\n  }\n\n  function fixCallback(callback) {\n    return function(error, xhr) {\n      callback(error == null ? xhr : null);\n    };\n  }\n\n  function hasResponse(xhr) {\n    var type = xhr.responseType;\n    return type && type !== \"text\"\n        ? xhr.response // null on error\n        : xhr.responseText; // \"\" on error\n  }\n\n  function type(defaultMimeType, response) {\n    return function(url, callback) {\n      var r = request(url).mimeType(defaultMimeType).response(response);\n      if (callback != null) {\n        if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n        return r.get(callback);\n      }\n      return r;\n    };\n  }\n\n  var html = type(\"text/html\", function(xhr) {\n    return document.createRange().createContextualFragment(xhr.responseText);\n  });\n\n  var json = type(\"application/json\", function(xhr) {\n    return JSON.parse(xhr.responseText);\n  });\n\n  var text = type(\"text/plain\", function(xhr) {\n    return xhr.responseText;\n  });\n\n  var xml = type(\"application/xml\", function(xhr) {\n    var xml = xhr.responseXML;\n    if (!xml) throw new Error(\"parse error\");\n    return xml;\n  });\n\n  function dsv$1(defaultMimeType, parse) {\n    return function(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var r = request(url).mimeType(defaultMimeType);\n      r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n      r.row(row);\n      return callback ? r.get(callback) : r;\n    };\n  }\n\n  function responseOf(parse, row) {\n    return function(request) {\n      return parse(request.responseText, row);\n    };\n  }\n\n  var csv$1 = dsv$1(\"text/csv\", csvParse);\n\n  var tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\n  var frame = 0;\n  var timeout = 0;\n  var interval = 0;\n  var pokeDelay = 1000;\n  var taskHead;\n  var taskTail;\n  var clockLast = 0;\n  var clockNow = 0;\n  var clockSkew = 0;\n  var clock = typeof performance === \"object\" && performance.now ? performance : Date;\n  var setFrame = typeof requestAnimationFrame === \"function\"\n          ? (clock === Date ? function(f) { requestAnimationFrame(function() { f(clock.now()); }); } : requestAnimationFrame)\n          : function(f) { setTimeout(f, 17); };\n  function now() {\n    return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n  }\n\n  function clearNow() {\n    clockNow = 0;\n  }\n\n  function Timer() {\n    this._call =\n    this._time =\n    this._next = null;\n  }\n\n  Timer.prototype = timer.prototype = {\n    constructor: Timer,\n    restart: function(callback, delay, time) {\n      if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n      time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n      if (!this._next && taskTail !== this) {\n        if (taskTail) taskTail._next = this;\n        else taskHead = this;\n        taskTail = this;\n      }\n      this._call = callback;\n      this._time = time;\n      sleep();\n    },\n    stop: function() {\n      if (this._call) {\n        this._call = null;\n        this._time = Infinity;\n        sleep();\n      }\n    }\n  };\n\n  function timer(callback, delay, time) {\n    var t = new Timer;\n    t.restart(callback, delay, time);\n    return t;\n  }\n\n  function timerFlush() {\n    now(); // Get the current time, if not already set.\n    ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n    var t = taskHead, e;\n    while (t) {\n      if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n      t = t._next;\n    }\n    --frame;\n  }\n\n  function wake(time) {\n    clockNow = (clockLast = time || clock.now()) + clockSkew;\n    frame = timeout = 0;\n    try {\n      timerFlush();\n    } finally {\n      frame = 0;\n      nap();\n      clockNow = 0;\n    }\n  }\n\n  function poke$1() {\n    var now = clock.now(), delay = now - clockLast;\n    if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n  }\n\n  function nap() {\n    var t0, t1 = taskHead, t2, time = Infinity;\n    while (t1) {\n      if (t1._call) {\n        if (time > t1._time) time = t1._time;\n        t0 = t1, t1 = t1._next;\n      } else {\n        t2 = t1._next, t1._next = null;\n        t1 = t0 ? t0._next = t2 : taskHead = t2;\n      }\n    }\n    taskTail = t0;\n    sleep(time);\n  }\n\n  function sleep(time) {\n    if (frame) return; // Soonest alarm already set, or will be.\n    if (timeout) timeout = clearTimeout(timeout);\n    var delay = time - clockNow;\n    if (delay > 24) {\n      if (time < Infinity) timeout = setTimeout(wake, delay);\n      if (interval) interval = clearInterval(interval);\n    } else {\n      if (!interval) interval = setInterval(poke$1, pokeDelay);\n      frame = 1, setFrame(wake);\n    }\n  }\n\n  function timeout$1(callback, delay, time) {\n    var t = new Timer;\n    delay = delay == null ? 0 : +delay;\n    t.restart(function(elapsed) {\n      t.stop();\n      callback(elapsed + delay);\n    }, delay, time);\n    return t;\n  }\n\n  function interval$1(callback, delay, time) {\n    var t = new Timer, total = delay;\n    if (delay == null) return t.restart(callback, delay, time), t;\n    delay = +delay, time = time == null ? now() : +time;\n    t.restart(function tick(elapsed) {\n      elapsed += total;\n      t.restart(tick, total += delay, time);\n      callback(elapsed);\n    }, delay, time);\n    return t;\n  }\n\nvar   t0$1 = new Date;\nvar   t1$1 = new Date;\n  function newInterval(floori, offseti, count, field) {\n\n    function interval(date) {\n      return floori(date = new Date(+date)), date;\n    }\n\n    interval.floor = interval;\n\n    interval.ceil = function(date) {\n      return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n    };\n\n    interval.round = function(date) {\n      var d0 = interval(date),\n          d1 = interval.ceil(date);\n      return date - d0 < d1 - date ? d0 : d1;\n    };\n\n    interval.offset = function(date, step) {\n      return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n    };\n\n    interval.range = function(start, stop, step) {\n      var range = [];\n      start = interval.ceil(start);\n      step = step == null ? 1 : Math.floor(step);\n      if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n      do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n      return range;\n    };\n\n    interval.filter = function(test) {\n      return newInterval(function(date) {\n        while (floori(date), !test(date)) date.setTime(date - 1);\n      }, function(date, step) {\n        while (--step >= 0) while (offseti(date, 1), !test(date));\n      });\n    };\n\n    if (count) {\n      interval.count = function(start, end) {\n        t0$1.setTime(+start), t1$1.setTime(+end);\n        floori(t0$1), floori(t1$1);\n        return Math.floor(count(t0$1, t1$1));\n      };\n\n      interval.every = function(step) {\n        step = Math.floor(step);\n        return !isFinite(step) || !(step > 0) ? null\n            : !(step > 1) ? interval\n            : interval.filter(field\n                ? function(d) { return field(d) % step === 0; }\n                : function(d) { return interval.count(0, d) % step === 0; });\n      };\n    }\n\n    return interval;\n  }\n\n  var millisecond = newInterval(function() {\n    // noop\n  }, function(date, step) {\n    date.setTime(+date + step);\n  }, function(start, end) {\n    return end - start;\n  });\n\n  // An optimized implementation for this simple case.\n  millisecond.every = function(k) {\n    k = Math.floor(k);\n    if (!isFinite(k) || !(k > 0)) return null;\n    if (!(k > 1)) return millisecond;\n    return newInterval(function(date) {\n      date.setTime(Math.floor(date / k) * k);\n    }, function(date, step) {\n      date.setTime(+date + step * k);\n    }, function(start, end) {\n      return (end - start) / k;\n    });\n  };\n\n  var milliseconds = millisecond.range;\n\n  var durationSecond = 1e3;\n  var durationMinute = 6e4;\n  var durationHour = 36e5;\n  var durationDay = 864e5;\n  var durationWeek = 6048e5;\n\n  var second = newInterval(function(date) {\n    date.setTime(Math.floor(date / durationSecond) * durationSecond);\n  }, function(date, step) {\n    date.setTime(+date + step * durationSecond);\n  }, function(start, end) {\n    return (end - start) / durationSecond;\n  }, function(date) {\n    return date.getUTCSeconds();\n  });\n\n  var seconds = second.range;\n\n  var minute = newInterval(function(date) {\n    date.setTime(Math.floor(date / durationMinute) * durationMinute);\n  }, function(date, step) {\n    date.setTime(+date + step * durationMinute);\n  }, function(start, end) {\n    return (end - start) / durationMinute;\n  }, function(date) {\n    return date.getMinutes();\n  });\n\n  var minutes = minute.range;\n\n  var hour = newInterval(function(date) {\n    var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n    if (offset < 0) offset += durationHour;\n    date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n  }, function(date, step) {\n    date.setTime(+date + step * durationHour);\n  }, function(start, end) {\n    return (end - start) / durationHour;\n  }, function(date) {\n    return date.getHours();\n  });\n\n  var hours = hour.range;\n\n  var day = newInterval(function(date) {\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n\n  var days = day.range;\n\n  function weekday(i) {\n    return newInterval(function(date) {\n      date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n      date.setHours(0, 0, 0, 0);\n    }, function(date, step) {\n      date.setDate(date.getDate() + step * 7);\n    }, function(start, end) {\n      return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n    });\n  }\n\n  var timeWeek = weekday(0);\n  var timeMonday = weekday(1);\n  var tuesday = weekday(2);\n  var wednesday = weekday(3);\n  var thursday = weekday(4);\n  var friday = weekday(5);\n  var saturday = weekday(6);\n\n  var sundays = timeWeek.range;\n  var mondays = timeMonday.range;\n  var tuesdays = tuesday.range;\n  var wednesdays = wednesday.range;\n  var thursdays = thursday.range;\n  var fridays = friday.range;\n  var saturdays = saturday.range;\n\n  var month = newInterval(function(date) {\n    date.setDate(1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setMonth(date.getMonth() + step);\n  }, function(start, end) {\n    return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n  }, function(date) {\n    return date.getMonth();\n  });\n\n  var months = month.range;\n\n  var year = newInterval(function(date) {\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step);\n  }, function(start, end) {\n    return end.getFullYear() - start.getFullYear();\n  }, function(date) {\n    return date.getFullYear();\n  });\n\n  // An optimized implementation for this simple case.\n  year.every = function(k) {\n    return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n      date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n      date.setMonth(0, 1);\n      date.setHours(0, 0, 0, 0);\n    }, function(date, step) {\n      date.setFullYear(date.getFullYear() + step * k);\n    });\n  };\n\n  var years = year.range;\n\n  var utcMinute = newInterval(function(date) {\n    date.setUTCSeconds(0, 0);\n  }, function(date, step) {\n    date.setTime(+date + step * durationMinute);\n  }, function(start, end) {\n    return (end - start) / durationMinute;\n  }, function(date) {\n    return date.getUTCMinutes();\n  });\n\n  var utcMinutes = utcMinute.range;\n\n  var utcHour = newInterval(function(date) {\n    date.setUTCMinutes(0, 0, 0);\n  }, function(date, step) {\n    date.setTime(+date + step * durationHour);\n  }, function(start, end) {\n    return (end - start) / durationHour;\n  }, function(date) {\n    return date.getUTCHours();\n  });\n\n  var utcHours = utcHour.range;\n\n  var utcDay = newInterval(function(date) {\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step);\n  }, function(start, end) {\n    return (end - start) / durationDay;\n  }, function(date) {\n    return date.getUTCDate() - 1;\n  });\n\n  var utcDays = utcDay.range;\n\n  function utcWeekday(i) {\n    return newInterval(function(date) {\n      date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n      date.setUTCHours(0, 0, 0, 0);\n    }, function(date, step) {\n      date.setUTCDate(date.getUTCDate() + step * 7);\n    }, function(start, end) {\n      return (end - start) / durationWeek;\n    });\n  }\n\n  var utcWeek = utcWeekday(0);\n  var utcMonday = utcWeekday(1);\n  var utcTuesday = utcWeekday(2);\n  var utcWednesday = utcWeekday(3);\n  var utcThursday = utcWeekday(4);\n  var utcFriday = utcWeekday(5);\n  var utcSaturday = utcWeekday(6);\n\n  var utcSundays = utcWeek.range;\n  var utcMondays = utcMonday.range;\n  var utcTuesdays = utcTuesday.range;\n  var utcWednesdays = utcWednesday.range;\n  var utcThursdays = utcThursday.range;\n  var utcFridays = utcFriday.range;\n  var utcSaturdays = utcSaturday.range;\n\n  var utcMonth = newInterval(function(date) {\n    date.setUTCDate(1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCMonth(date.getUTCMonth() + step);\n  }, function(start, end) {\n    return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n  }, function(date) {\n    return date.getUTCMonth();\n  });\n\n  var utcMonths = utcMonth.range;\n\n  var utcYear = newInterval(function(date) {\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step);\n  }, function(start, end) {\n    return end.getUTCFullYear() - start.getUTCFullYear();\n  }, function(date) {\n    return date.getUTCFullYear();\n  });\n\n  // An optimized implementation for this simple case.\n  utcYear.every = function(k) {\n    return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n      date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n      date.setUTCMonth(0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n    }, function(date, step) {\n      date.setUTCFullYear(date.getUTCFullYear() + step * k);\n    });\n  };\n\n  var utcYears = utcYear.range;\n\n  // Computes the decimal coefficient and exponent of the specified number x with\n  // significant digits p, where x is positive and p is in [1, 21] or undefined.\n  // For example, formatDecimal(1.23) returns [\"123\", 0].\n  function formatDecimal(x, p) {\n    if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n    var i, coefficient = x.slice(0, i);\n\n    // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n    // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n    return [\n      coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n      +x.slice(i + 1)\n    ];\n  }\n\n  function exponent$1(x) {\n    return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n  }\n\n  function formatGroup(grouping, thousands) {\n    return function(value, width) {\n      var i = value.length,\n          t = [],\n          j = 0,\n          g = grouping[0],\n          length = 0;\n\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = grouping[j = (j + 1) % grouping.length];\n      }\n\n      return t.reverse().join(thousands);\n    };\n  }\n\n  function formatDefault(x, p) {\n    x = x.toPrecision(p);\n\n    out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n      switch (x[i]) {\n        case \".\": i0 = i1 = i; break;\n        case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n        case \"e\": break out;\n        default: if (i0 > 0) i0 = 0; break;\n      }\n    }\n\n    return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n  }\n\n  var prefixExponent;\n\n  function formatPrefixAuto(x, p) {\n    var d = formatDecimal(x, p);\n    if (!d) return x + \"\";\n    var coefficient = d[0],\n        exponent = d[1],\n        i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n        n = coefficient.length;\n    return i === n ? coefficient\n        : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n        : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n        : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n  }\n\n  function formatRounded(x, p) {\n    var d = formatDecimal(x, p);\n    if (!d) return x + \"\";\n    var coefficient = d[0],\n        exponent = d[1];\n    return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n        : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n        : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n  }\n\n  var formatTypes = {\n    \"\": formatDefault,\n    \"%\": function(x, p) { return (x * 100).toFixed(p); },\n    \"b\": function(x) { return Math.round(x).toString(2); },\n    \"c\": function(x) { return x + \"\"; },\n    \"d\": function(x) { return Math.round(x).toString(10); },\n    \"e\": function(x, p) { return x.toExponential(p); },\n    \"f\": function(x, p) { return x.toFixed(p); },\n    \"g\": function(x, p) { return x.toPrecision(p); },\n    \"o\": function(x) { return Math.round(x).toString(8); },\n    \"p\": function(x, p) { return formatRounded(x * 100, p); },\n    \"r\": formatRounded,\n    \"s\": formatPrefixAuto,\n    \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n    \"x\": function(x) { return Math.round(x).toString(16); }\n  };\n\n  // [[fill]align][sign][symbol][0][width][,][.precision][type]\n  var re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\n  function formatSpecifier(specifier) {\n    return new FormatSpecifier(specifier);\n  }\n\n  function FormatSpecifier(specifier) {\n    if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n    var match,\n        fill = match[1] || \" \",\n        align = match[2] || \">\",\n        sign = match[3] || \"-\",\n        symbol = match[4] || \"\",\n        zero = !!match[5],\n        width = match[6] && +match[6],\n        comma = !!match[7],\n        precision = match[8] && +match[8].slice(1),\n        type = match[9] || \"\";\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // Map invalid types to the default format.\n    else if (!formatTypes[type]) type = \"\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    this.fill = fill;\n    this.align = align;\n    this.sign = sign;\n    this.symbol = symbol;\n    this.zero = zero;\n    this.width = width;\n    this.comma = comma;\n    this.precision = precision;\n    this.type = type;\n  }\n\n  FormatSpecifier.prototype.toString = function() {\n    return this.fill\n        + this.align\n        + this.sign\n        + this.symbol\n        + (this.zero ? \"0\" : \"\")\n        + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n        + (this.comma ? \",\" : \"\")\n        + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n        + this.type;\n  };\n\n  var prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\n  function identity$3(x) {\n    return x;\n  }\n\n  function formatLocale(locale) {\n    var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n        currency = locale.currency,\n        decimal = locale.decimal;\n\n    function newFormat(specifier) {\n      specifier = formatSpecifier(specifier);\n\n      var fill = specifier.fill,\n          align = specifier.align,\n          sign = specifier.sign,\n          symbol = specifier.symbol,\n          zero = specifier.zero,\n          width = specifier.width,\n          comma = specifier.comma,\n          precision = specifier.precision,\n          type = specifier.type;\n\n      // Compute the prefix and suffix.\n      // For SI-prefix, the suffix is lazily computed.\n      var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n          suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n      // What format function should we use?\n      // Is this an integer type?\n      // Can this type generate exponential notation?\n      var formatType = formatTypes[type],\n          maybeSuffix = !type || /[defgprs%]/.test(type);\n\n      // Set the default precision if not specified,\n      // or clamp the specified precision to the supported range.\n      // For significant precision, it must be in [1, 21].\n      // For fixed precision, it must be in [0, 20].\n      precision = precision == null ? (type ? 6 : 12)\n          : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n          : Math.max(0, Math.min(20, precision));\n\n      function format(value) {\n        var valuePrefix = prefix,\n            valueSuffix = suffix,\n            i, n, c;\n\n        if (type === \"c\") {\n          valueSuffix = formatType(value) + valueSuffix;\n          value = \"\";\n        } else {\n          value = +value;\n\n          // Convert negative to positive, and compute the prefix.\n          // Note that -0 is not less than 0, but 1 / -0 is!\n          var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\n          // Perform the initial formatting.\n          value = formatType(value, precision);\n\n          // If the original value was negative, it may be rounded to zero during\n          // formatting; treat this as (positive) zero.\n          if (valueNegative) {\n            i = -1, n = value.length;\n            valueNegative = false;\n            while (++i < n) {\n              if (c = value.charCodeAt(i), (48 < c && c < 58)\n                  || (type === \"x\" && 96 < c && c < 103)\n                  || (type === \"X\" && 64 < c && c < 71)) {\n                valueNegative = true;\n                break;\n              }\n            }\n          }\n\n          // Compute the prefix and suffix.\n          valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n          valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n          // Break the formatted value into the integer “value” part that can be\n          // grouped, and fractional or exponential “suffix” part that is not.\n          if (maybeSuffix) {\n            i = -1, n = value.length;\n            while (++i < n) {\n              if (c = value.charCodeAt(i), 48 > c || c > 57) {\n                valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n                value = value.slice(0, i);\n                break;\n              }\n            }\n          }\n        }\n\n        // If the fill character is not \"0\", grouping is applied before padding.\n        if (comma && !zero) value = group(value, Infinity);\n\n        // Compute the padding.\n        var length = valuePrefix.length + value.length + valueSuffix.length,\n            padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n        // If the fill character is \"0\", grouping is applied after padding.\n        if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n        // Reconstruct the final output based on the desired alignment.\n        switch (align) {\n          case \"<\": return valuePrefix + value + valueSuffix + padding;\n          case \"=\": return valuePrefix + padding + value + valueSuffix;\n          case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n        }\n        return padding + valuePrefix + value + valueSuffix;\n      }\n\n      format.toString = function() {\n        return specifier + \"\";\n      };\n\n      return format;\n    }\n\n    function formatPrefix(specifier, value) {\n      var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n          e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n          k = Math.pow(10, -e),\n          prefix = prefixes[8 + e / 3];\n      return function(value) {\n        return f(k * value) + prefix;\n      };\n    }\n\n    return {\n      format: newFormat,\n      formatPrefix: formatPrefix\n    };\n  }\n\n  var locale;\n  exports.format;\n  exports.formatPrefix;\n\n  defaultLocale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [3],\n    currency: [\"$\", \"\"]\n  });\n\n  function defaultLocale(definition) {\n    locale = formatLocale(definition);\n    exports.format = locale.format;\n    exports.formatPrefix = locale.formatPrefix;\n    return locale;\n  }\n\n  function precisionFixed(step) {\n    return Math.max(0, -exponent$1(Math.abs(step)));\n  }\n\n  function precisionPrefix(step, value) {\n    return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n  }\n\n  function precisionRound(step, max) {\n    step = Math.abs(step), max = Math.abs(max) - step;\n    return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n  }\n\n  function localDate(d) {\n    if (0 <= d.y && d.y < 100) {\n      var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n      date.setFullYear(d.y);\n      return date;\n    }\n    return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n  }\n\n  function utcDate(d) {\n    if (0 <= d.y && d.y < 100) {\n      var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n      date.setUTCFullYear(d.y);\n      return date;\n    }\n    return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n  }\n\n  function newYear(y) {\n    return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n  }\n\n  function formatLocale$1(locale) {\n    var locale_dateTime = locale.dateTime,\n        locale_date = locale.date,\n        locale_time = locale.time,\n        locale_periods = locale.periods,\n        locale_weekdays = locale.days,\n        locale_shortWeekdays = locale.shortDays,\n        locale_months = locale.months,\n        locale_shortMonths = locale.shortMonths;\n\n    var periodRe = formatRe(locale_periods),\n        periodLookup = formatLookup(locale_periods),\n        weekdayRe = formatRe(locale_weekdays),\n        weekdayLookup = formatLookup(locale_weekdays),\n        shortWeekdayRe = formatRe(locale_shortWeekdays),\n        shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n        monthRe = formatRe(locale_months),\n        monthLookup = formatLookup(locale_months),\n        shortMonthRe = formatRe(locale_shortMonths),\n        shortMonthLookup = formatLookup(locale_shortMonths);\n\n    var formats = {\n      \"a\": formatShortWeekday,\n      \"A\": formatWeekday,\n      \"b\": formatShortMonth,\n      \"B\": formatMonth,\n      \"c\": null,\n      \"d\": formatDayOfMonth,\n      \"e\": formatDayOfMonth,\n      \"H\": formatHour24,\n      \"I\": formatHour12,\n      \"j\": formatDayOfYear,\n      \"L\": formatMilliseconds,\n      \"m\": formatMonthNumber,\n      \"M\": formatMinutes,\n      \"p\": formatPeriod,\n      \"S\": formatSeconds,\n      \"U\": formatWeekNumberSunday,\n      \"w\": formatWeekdayNumber,\n      \"W\": formatWeekNumberMonday,\n      \"x\": null,\n      \"X\": null,\n      \"y\": formatYear,\n      \"Y\": formatFullYear,\n      \"Z\": formatZone,\n      \"%\": formatLiteralPercent\n    };\n\n    var utcFormats = {\n      \"a\": formatUTCShortWeekday,\n      \"A\": formatUTCWeekday,\n      \"b\": formatUTCShortMonth,\n      \"B\": formatUTCMonth,\n      \"c\": null,\n      \"d\": formatUTCDayOfMonth,\n      \"e\": formatUTCDayOfMonth,\n      \"H\": formatUTCHour24,\n      \"I\": formatUTCHour12,\n      \"j\": formatUTCDayOfYear,\n      \"L\": formatUTCMilliseconds,\n      \"m\": formatUTCMonthNumber,\n      \"M\": formatUTCMinutes,\n      \"p\": formatUTCPeriod,\n      \"S\": formatUTCSeconds,\n      \"U\": formatUTCWeekNumberSunday,\n      \"w\": formatUTCWeekdayNumber,\n      \"W\": formatUTCWeekNumberMonday,\n      \"x\": null,\n      \"X\": null,\n      \"y\": formatUTCYear,\n      \"Y\": formatUTCFullYear,\n      \"Z\": formatUTCZone,\n      \"%\": formatLiteralPercent\n    };\n\n    var parses = {\n      \"a\": parseShortWeekday,\n      \"A\": parseWeekday,\n      \"b\": parseShortMonth,\n      \"B\": parseMonth,\n      \"c\": parseLocaleDateTime,\n      \"d\": parseDayOfMonth,\n      \"e\": parseDayOfMonth,\n      \"H\": parseHour24,\n      \"I\": parseHour24,\n      \"j\": parseDayOfYear,\n      \"L\": parseMilliseconds,\n      \"m\": parseMonthNumber,\n      \"M\": parseMinutes,\n      \"p\": parsePeriod,\n      \"S\": parseSeconds,\n      \"U\": parseWeekNumberSunday,\n      \"w\": parseWeekdayNumber,\n      \"W\": parseWeekNumberMonday,\n      \"x\": parseLocaleDate,\n      \"X\": parseLocaleTime,\n      \"y\": parseYear,\n      \"Y\": parseFullYear,\n      \"Z\": parseZone,\n      \"%\": parseLiteralPercent\n    };\n\n    // These recursive directive definitions must be deferred.\n    formats.x = newFormat(locale_date, formats);\n    formats.X = newFormat(locale_time, formats);\n    formats.c = newFormat(locale_dateTime, formats);\n    utcFormats.x = newFormat(locale_date, utcFormats);\n    utcFormats.X = newFormat(locale_time, utcFormats);\n    utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n    function newFormat(specifier, formats) {\n      return function(date) {\n        var string = [],\n            i = -1,\n            j = 0,\n            n = specifier.length,\n            c,\n            pad,\n            format;\n\n        if (!(date instanceof Date)) date = new Date(+date);\n\n        while (++i < n) {\n          if (specifier.charCodeAt(i) === 37) {\n            string.push(specifier.slice(j, i));\n            if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n            else pad = c === \"e\" ? \" \" : \"0\";\n            if (format = formats[c]) c = format(date, pad);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n\n        string.push(specifier.slice(j, i));\n        return string.join(\"\");\n      };\n    }\n\n    function newParse(specifier, newDate) {\n      return function(string) {\n        var d = newYear(1900),\n            i = parseSpecifier(d, specifier, string += \"\", 0);\n        if (i != string.length) return null;\n\n        // The am-pm flag is 0 for AM, and 1 for PM.\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n        // Convert day-of-week and week-of-year to day-of-year.\n        if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          var day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n          d.m = 0;\n          d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n        }\n\n        // If a time zone is specified, all fields are interpreted as UTC and then\n        // offset according to the specified time zone.\n        if (\"Z\" in d) {\n          d.H += d.Z / 100 | 0;\n          d.M += d.Z % 100;\n          return utcDate(d);\n        }\n\n        // Otherwise, all fields are in local time.\n        return newDate(d);\n      };\n    }\n\n    function parseSpecifier(d, specifier, string, j) {\n      var i = 0,\n          n = specifier.length,\n          m = string.length,\n          c,\n          parse;\n\n      while (i < n) {\n        if (j >= m) return -1;\n        c = specifier.charCodeAt(i++);\n        if (c === 37) {\n          c = specifier.charAt(i++);\n          parse = parses[c in pads ? specifier.charAt(i++) : c];\n          if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n\n      return j;\n    }\n\n    function parsePeriod(d, string, i) {\n      var n = periodRe.exec(string.slice(i));\n      return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseShortWeekday(d, string, i) {\n      var n = shortWeekdayRe.exec(string.slice(i));\n      return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseWeekday(d, string, i) {\n      var n = weekdayRe.exec(string.slice(i));\n      return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseShortMonth(d, string, i) {\n      var n = shortMonthRe.exec(string.slice(i));\n      return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseMonth(d, string, i) {\n      var n = monthRe.exec(string.slice(i));\n      return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n    }\n\n    function parseLocaleDateTime(d, string, i) {\n      return parseSpecifier(d, locale_dateTime, string, i);\n    }\n\n    function parseLocaleDate(d, string, i) {\n      return parseSpecifier(d, locale_date, string, i);\n    }\n\n    function parseLocaleTime(d, string, i) {\n      return parseSpecifier(d, locale_time, string, i);\n    }\n\n    function formatShortWeekday(d) {\n      return locale_shortWeekdays[d.getDay()];\n    }\n\n    function formatWeekday(d) {\n      return locale_weekdays[d.getDay()];\n    }\n\n    function formatShortMonth(d) {\n      return locale_shortMonths[d.getMonth()];\n    }\n\n    function formatMonth(d) {\n      return locale_months[d.getMonth()];\n    }\n\n    function formatPeriod(d) {\n      return locale_periods[+(d.getHours() >= 12)];\n    }\n\n    function formatUTCShortWeekday(d) {\n      return locale_shortWeekdays[d.getUTCDay()];\n    }\n\n    function formatUTCWeekday(d) {\n      return locale_weekdays[d.getUTCDay()];\n    }\n\n    function formatUTCShortMonth(d) {\n      return locale_shortMonths[d.getUTCMonth()];\n    }\n\n    function formatUTCMonth(d) {\n      return locale_months[d.getUTCMonth()];\n    }\n\n    function formatUTCPeriod(d) {\n      return locale_periods[+(d.getUTCHours() >= 12)];\n    }\n\n    return {\n      format: function(specifier) {\n        var f = newFormat(specifier += \"\", formats);\n        f.toString = function() { return specifier; };\n        return f;\n      },\n      parse: function(specifier) {\n        var p = newParse(specifier += \"\", localDate);\n        p.toString = function() { return specifier; };\n        return p;\n      },\n      utcFormat: function(specifier) {\n        var f = newFormat(specifier += \"\", utcFormats);\n        f.toString = function() { return specifier; };\n        return f;\n      },\n      utcParse: function(specifier) {\n        var p = newParse(specifier, utcDate);\n        p.toString = function() { return specifier; };\n        return p;\n      }\n    };\n  }\n\n  var pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\n  var numberRe = /^\\s*\\d+/;\n  var percentRe = /^%/;\n  var requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  function pad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\",\n        string = (sign ? -value : value) + \"\",\n        length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n\n  function requote(s) {\n    return s.replace(requoteRe, \"\\\\$&\");\n  }\n\n  function formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n  }\n\n  function formatLookup(names) {\n    var map = {}, i = -1, n = names.length;\n    while (++i < n) map[names[i].toLowerCase()] = i;\n    return map;\n  }\n\n  function parseWeekdayNumber(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 1));\n    return n ? (d.w = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekNumberSunday(d, string, i) {\n    var n = numberRe.exec(string.slice(i));\n    return n ? (d.U = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseWeekNumberMonday(d, string, i) {\n    var n = numberRe.exec(string.slice(i));\n    return n ? (d.W = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseFullYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 4));\n    return n ? (d.y = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n  }\n\n  function parseZone(d, string, i) {\n    var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n    return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n  }\n\n  function parseMonthNumber(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n  }\n\n  function parseDayOfMonth(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseDayOfYear(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 3));\n    return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseHour24(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.H = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseMinutes(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.M = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseSeconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 2));\n    return n ? (d.S = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseMilliseconds(d, string, i) {\n    var n = numberRe.exec(string.slice(i, i + 3));\n    return n ? (d.L = +n[0], i + n[0].length) : -1;\n  }\n\n  function parseLiteralPercent(d, string, i) {\n    var n = percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n\n  function formatDayOfMonth(d, p) {\n    return pad(d.getDate(), p, 2);\n  }\n\n  function formatHour24(d, p) {\n    return pad(d.getHours(), p, 2);\n  }\n\n  function formatHour12(d, p) {\n    return pad(d.getHours() % 12 || 12, p, 2);\n  }\n\n  function formatDayOfYear(d, p) {\n    return pad(1 + day.count(year(d), d), p, 3);\n  }\n\n  function formatMilliseconds(d, p) {\n    return pad(d.getMilliseconds(), p, 3);\n  }\n\n  function formatMonthNumber(d, p) {\n    return pad(d.getMonth() + 1, p, 2);\n  }\n\n  function formatMinutes(d, p) {\n    return pad(d.getMinutes(), p, 2);\n  }\n\n  function formatSeconds(d, p) {\n    return pad(d.getSeconds(), p, 2);\n  }\n\n  function formatWeekNumberSunday(d, p) {\n    return pad(timeWeek.count(year(d), d), p, 2);\n  }\n\n  function formatWeekdayNumber(d) {\n    return d.getDay();\n  }\n\n  function formatWeekNumberMonday(d, p) {\n    return pad(timeMonday.count(year(d), d), p, 2);\n  }\n\n  function formatYear(d, p) {\n    return pad(d.getFullYear() % 100, p, 2);\n  }\n\n  function formatFullYear(d, p) {\n    return pad(d.getFullYear() % 10000, p, 4);\n  }\n\n  function formatZone(d) {\n    var z = d.getTimezoneOffset();\n    return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n        + pad(z / 60 | 0, \"0\", 2)\n        + pad(z % 60, \"0\", 2);\n  }\n\n  function formatUTCDayOfMonth(d, p) {\n    return pad(d.getUTCDate(), p, 2);\n  }\n\n  function formatUTCHour24(d, p) {\n    return pad(d.getUTCHours(), p, 2);\n  }\n\n  function formatUTCHour12(d, p) {\n    return pad(d.getUTCHours() % 12 || 12, p, 2);\n  }\n\n  function formatUTCDayOfYear(d, p) {\n    return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n  }\n\n  function formatUTCMilliseconds(d, p) {\n    return pad(d.getUTCMilliseconds(), p, 3);\n  }\n\n  function formatUTCMonthNumber(d, p) {\n    return pad(d.getUTCMonth() + 1, p, 2);\n  }\n\n  function formatUTCMinutes(d, p) {\n    return pad(d.getUTCMinutes(), p, 2);\n  }\n\n  function formatUTCSeconds(d, p) {\n    return pad(d.getUTCSeconds(), p, 2);\n  }\n\n  function formatUTCWeekNumberSunday(d, p) {\n    return pad(utcWeek.count(utcYear(d), d), p, 2);\n  }\n\n  function formatUTCWeekdayNumber(d) {\n    return d.getUTCDay();\n  }\n\n  function formatUTCWeekNumberMonday(d, p) {\n    return pad(utcMonday.count(utcYear(d), d), p, 2);\n  }\n\n  function formatUTCYear(d, p) {\n    return pad(d.getUTCFullYear() % 100, p, 2);\n  }\n\n  function formatUTCFullYear(d, p) {\n    return pad(d.getUTCFullYear() % 10000, p, 4);\n  }\n\n  function formatUTCZone() {\n    return \"+0000\";\n  }\n\n  function formatLiteralPercent() {\n    return \"%\";\n  }\n\n  var locale$1;\n  exports.timeFormat;\n  exports.timeParse;\n  exports.utcFormat;\n  exports.utcParse;\n\n  defaultLocale$1({\n    dateTime: \"%x, %X\",\n    date: \"%-m/%-d/%Y\",\n    time: \"%-I:%M:%S %p\",\n    periods: [\"AM\", \"PM\"],\n    days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n  });\n\n  function defaultLocale$1(definition) {\n    locale$1 = formatLocale$1(definition);\n    exports.timeFormat = locale$1.format;\n    exports.timeParse = locale$1.parse;\n    exports.utcFormat = locale$1.utcFormat;\n    exports.utcParse = locale$1.utcParse;\n    return locale$1;\n  }\n\n  var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\n  function formatIsoNative(date) {\n    return date.toISOString();\n  }\n\n  var formatIso = Date.prototype.toISOString\n      ? formatIsoNative\n      : exports.utcFormat(isoSpecifier);\n\n  function parseIsoNative(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  }\n\n  var parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n      ? parseIsoNative\n      : exports.utcParse(isoSpecifier);\n\n  var array$2 = Array.prototype;\n\n  var map$2 = array$2.map;\n  var slice$3 = array$2.slice;\n\n  var implicit = {name: \"implicit\"};\n\n  function ordinal(range) {\n    var index = map$1(),\n        domain = [],\n        unknown = implicit;\n\n    range = range == null ? [] : slice$3.call(range);\n\n    function scale(d) {\n      var key = d + \"\", i = index.get(key);\n      if (!i) {\n        if (unknown !== implicit) return unknown;\n        index.set(key, i = domain.push(d));\n      }\n      return range[(i - 1) % range.length];\n    }\n\n    scale.domain = function(_) {\n      if (!arguments.length) return domain.slice();\n      domain = [], index = map$1();\n      var i = -1, n = _.length, d, key;\n      while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n      return scale;\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice$3.call(_), scale) : range.slice();\n    };\n\n    scale.unknown = function(_) {\n      return arguments.length ? (unknown = _, scale) : unknown;\n    };\n\n    scale.copy = function() {\n      return ordinal()\n          .domain(domain)\n          .range(range)\n          .unknown(unknown);\n    };\n\n    return scale;\n  }\n\n  function band() {\n    var scale = ordinal().unknown(undefined),\n        domain = scale.domain,\n        ordinalRange = scale.range,\n        range$$ = [0, 1],\n        step,\n        bandwidth,\n        round = false,\n        paddingInner = 0,\n        paddingOuter = 0,\n        align = 0.5;\n\n    delete scale.unknown;\n\n    function rescale() {\n      var n = domain().length,\n          reverse = range$$[1] < range$$[0],\n          start = range$$[reverse - 0],\n          stop = range$$[1 - reverse];\n      step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n      if (round) step = Math.floor(step);\n      start += (stop - start - step * (n - paddingInner)) * align;\n      bandwidth = step * (1 - paddingInner);\n      if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n      var values = range(n).map(function(i) { return start + step * i; });\n      return ordinalRange(reverse ? values.reverse() : values);\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain(_), rescale()) : domain();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range$$ = [+_[0], +_[1]], rescale()) : range$$.slice();\n    };\n\n    scale.rangeRound = function(_) {\n      return range$$ = [+_[0], +_[1]], round = true, rescale();\n    };\n\n    scale.bandwidth = function() {\n      return bandwidth;\n    };\n\n    scale.step = function() {\n      return step;\n    };\n\n    scale.round = function(_) {\n      return arguments.length ? (round = !!_, rescale()) : round;\n    };\n\n    scale.padding = function(_) {\n      return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n    };\n\n    scale.paddingInner = function(_) {\n      return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n    };\n\n    scale.paddingOuter = function(_) {\n      return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n    };\n\n    scale.align = function(_) {\n      return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n    };\n\n    scale.copy = function() {\n      return band()\n          .domain(domain())\n          .range(range$$)\n          .round(round)\n          .paddingInner(paddingInner)\n          .paddingOuter(paddingOuter)\n          .align(align);\n    };\n\n    return rescale();\n  }\n\n  function pointish(scale) {\n    var copy = scale.copy;\n\n    scale.padding = scale.paddingOuter;\n    delete scale.paddingInner;\n    delete scale.paddingOuter;\n\n    scale.copy = function() {\n      return pointish(copy());\n    };\n\n    return scale;\n  }\n\n  function point$4() {\n    return pointish(band().paddingInner(1));\n  }\n\n  function constant$3(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function number$1(x) {\n    return +x;\n  }\n\n  var unit = [0, 1];\n\n  function deinterpolate(a, b) {\n    return (b -= (a = +a))\n        ? function(x) { return (x - a) / b; }\n        : constant$3(b);\n  }\n\n  function deinterpolateClamp(deinterpolate) {\n    return function(a, b) {\n      var d = deinterpolate(a = +a, b = +b);\n      return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n    };\n  }\n\n  function reinterpolateClamp(reinterpolate) {\n    return function(a, b) {\n      var r = reinterpolate(a = +a, b = +b);\n      return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n    };\n  }\n\n  function bimap(domain, range, deinterpolate, reinterpolate) {\n    var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n    if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n    else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n    return function(x) { return r0(d0(x)); };\n  }\n\n  function polymap(domain, range, deinterpolate, reinterpolate) {\n    var j = Math.min(domain.length, range.length) - 1,\n        d = new Array(j),\n        r = new Array(j),\n        i = -1;\n\n    // Reverse descending domains.\n    if (domain[j] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n\n    while (++i < j) {\n      d[i] = deinterpolate(domain[i], domain[i + 1]);\n      r[i] = reinterpolate(range[i], range[i + 1]);\n    }\n\n    return function(x) {\n      var i = bisectRight(domain, x, 1, j) - 1;\n      return r[i](d[i](x));\n    };\n  }\n\n  function copy(source, target) {\n    return target\n        .domain(source.domain())\n        .range(source.range())\n        .interpolate(source.interpolate())\n        .clamp(source.clamp());\n  }\n\n  // deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n  // reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\n  function continuous(deinterpolate$$, reinterpolate) {\n    var domain = unit,\n        range = unit,\n        interpolate$$ = interpolate,\n        clamp = false,\n        piecewise,\n        output,\n        input;\n\n    function rescale() {\n      piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n      output = input = null;\n      return scale;\n    }\n\n    function scale(x) {\n      return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate$$) : deinterpolate$$, interpolate$$)))(+x);\n    }\n\n    scale.invert = function(y) {\n      return (input || (input = piecewise(range, domain, deinterpolate, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n    };\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain = map$2.call(_, number$1), rescale()) : domain.slice();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice$3.call(_), rescale()) : range.slice();\n    };\n\n    scale.rangeRound = function(_) {\n      return range = slice$3.call(_), interpolate$$ = interpolateRound, rescale();\n    };\n\n    scale.clamp = function(_) {\n      return arguments.length ? (clamp = !!_, rescale()) : clamp;\n    };\n\n    scale.interpolate = function(_) {\n      return arguments.length ? (interpolate$$ = _, rescale()) : interpolate$$;\n    };\n\n    return rescale();\n  }\n\n  function tickFormat(domain, count, specifier) {\n    var start = domain[0],\n        stop = domain[domain.length - 1],\n        step = tickStep(start, stop, count == null ? 10 : count),\n        precision;\n    specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n    switch (specifier.type) {\n      case \"s\": {\n        var value = Math.max(Math.abs(start), Math.abs(stop));\n        if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n        return exports.formatPrefix(specifier, value);\n      }\n      case \"\":\n      case \"e\":\n      case \"g\":\n      case \"p\":\n      case \"r\": {\n        if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n        break;\n      }\n      case \"f\":\n      case \"%\": {\n        if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n        break;\n      }\n    }\n    return exports.format(specifier);\n  }\n\n  function linearish(scale) {\n    var domain = scale.domain;\n\n    scale.ticks = function(count) {\n      var d = domain();\n      return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n    };\n\n    scale.tickFormat = function(count, specifier) {\n      return tickFormat(domain(), count, specifier);\n    };\n\n    scale.nice = function(count) {\n      var d = domain(),\n          i = d.length - 1,\n          n = count == null ? 10 : count,\n          start = d[0],\n          stop = d[i],\n          step = tickStep(start, stop, n);\n\n      if (step) {\n        step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n        d[0] = Math.floor(start / step) * step;\n        d[i] = Math.ceil(stop / step) * step;\n        domain(d);\n      }\n\n      return scale;\n    };\n\n    return scale;\n  }\n\n  function linear$2() {\n    var scale = continuous(deinterpolate, interpolateNumber);\n\n    scale.copy = function() {\n      return copy(scale, linear$2());\n    };\n\n    return linearish(scale);\n  }\n\n  function identity$4() {\n    var domain = [0, 1];\n\n    function scale(x) {\n      return +x;\n    }\n\n    scale.invert = scale;\n\n    scale.domain = scale.range = function(_) {\n      return arguments.length ? (domain = map$2.call(_, number$1), scale) : domain.slice();\n    };\n\n    scale.copy = function() {\n      return identity$4().domain(domain);\n    };\n\n    return linearish(scale);\n  }\n\n  function nice(domain, interval) {\n    domain = domain.slice();\n\n    var i0 = 0,\n        i1 = domain.length - 1,\n        x0 = domain[i0],\n        x1 = domain[i1],\n        t;\n\n    if (x1 < x0) {\n      t = i0, i0 = i1, i1 = t;\n      t = x0, x0 = x1, x1 = t;\n    }\n\n    domain[i0] = interval.floor(x0);\n    domain[i1] = interval.ceil(x1);\n    return domain;\n  }\n\n  function deinterpolate$1(a, b) {\n    return (b = Math.log(b / a))\n        ? function(x) { return Math.log(x / a) / b; }\n        : constant$3(b);\n  }\n\n  function reinterpolate(a, b) {\n    return a < 0\n        ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n        : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n  }\n\n  function pow10(x) {\n    return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n  }\n\n  function powp(base) {\n    return base === 10 ? pow10\n        : base === Math.E ? Math.exp\n        : function(x) { return Math.pow(base, x); };\n  }\n\n  function logp(base) {\n    return base === Math.E ? Math.log\n        : base === 10 && Math.log10\n        || base === 2 && Math.log2\n        || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n  }\n\n  function reflect(f) {\n    return function(x) {\n      return -f(-x);\n    };\n  }\n\n  function log() {\n    var scale = continuous(deinterpolate$1, reinterpolate).domain([1, 10]),\n        domain = scale.domain,\n        base = 10,\n        logs = logp(10),\n        pows = powp(10);\n\n    function rescale() {\n      logs = logp(base), pows = powp(base);\n      if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n      return scale;\n    }\n\n    scale.base = function(_) {\n      return arguments.length ? (base = +_, rescale()) : base;\n    };\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain(_), rescale()) : domain();\n    };\n\n    scale.ticks = function(count) {\n      var d = domain(),\n          u = d[0],\n          v = d[d.length - 1],\n          r;\n\n      if (r = v < u) i = u, u = v, v = i;\n\n      var i = logs(u),\n          j = logs(v),\n          p,\n          k,\n          t,\n          n = count == null ? 10 : +count,\n          z = [];\n\n      if (!(base % 1) && j - i < n) {\n        i = Math.round(i) - 1, j = Math.round(j) + 1;\n        if (u > 0) for (; i < j; ++i) {\n          for (k = 1, p = pows(i); k < base; ++k) {\n            t = p * k;\n            if (t < u) continue;\n            if (t > v) break;\n            z.push(t);\n          }\n        } else for (; i < j; ++i) {\n          for (k = base - 1, p = pows(i); k >= 1; --k) {\n            t = p * k;\n            if (t < u) continue;\n            if (t > v) break;\n            z.push(t);\n          }\n        }\n      } else {\n        z = ticks(i, j, Math.min(j - i, n)).map(pows);\n      }\n\n      return r ? z.reverse() : z;\n    };\n\n    scale.tickFormat = function(count, specifier) {\n      if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n      if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n      if (count === Infinity) return specifier;\n      if (count == null) count = 10;\n      var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n      return function(d) {\n        var i = d / pows(Math.round(logs(d)));\n        if (i * base < base - 0.5) i *= base;\n        return i <= k ? specifier(d) : \"\";\n      };\n    };\n\n    scale.nice = function() {\n      return domain(nice(domain(), {\n        floor: function(x) { return pows(Math.floor(logs(x))); },\n        ceil: function(x) { return pows(Math.ceil(logs(x))); }\n      }));\n    };\n\n    scale.copy = function() {\n      return copy(scale, log().base(base));\n    };\n\n    return scale;\n  }\n\n  function raise(x, exponent) {\n    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n  }\n\n  function pow() {\n    var exponent = 1,\n        scale = continuous(deinterpolate, reinterpolate),\n        domain = scale.domain;\n\n    function deinterpolate(a, b) {\n      return (b = raise(b, exponent) - (a = raise(a, exponent)))\n          ? function(x) { return (raise(x, exponent) - a) / b; }\n          : constant$3(b);\n    }\n\n    function reinterpolate(a, b) {\n      b = raise(b, exponent) - (a = raise(a, exponent));\n      return function(t) { return raise(a + b * t, 1 / exponent); };\n    }\n\n    scale.exponent = function(_) {\n      return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n    };\n\n    scale.copy = function() {\n      return copy(scale, pow().exponent(exponent));\n    };\n\n    return linearish(scale);\n  }\n\n  function sqrt() {\n    return pow().exponent(0.5);\n  }\n\n  function quantile() {\n    var domain = [],\n        range = [],\n        thresholds = [];\n\n    function rescale() {\n      var i = 0, n = Math.max(1, range.length);\n      thresholds = new Array(n - 1);\n      while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n      return scale;\n    }\n\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[bisectRight(thresholds, x)];\n    }\n\n    scale.invertExtent = function(y) {\n      var i = range.indexOf(y);\n      return i < 0 ? [NaN, NaN] : [\n        i > 0 ? thresholds[i - 1] : domain[0],\n        i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n      ];\n    };\n\n    scale.domain = function(_) {\n      if (!arguments.length) return domain.slice();\n      domain = [];\n      for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n      domain.sort(ascending);\n      return rescale();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice$3.call(_), rescale()) : range.slice();\n    };\n\n    scale.quantiles = function() {\n      return thresholds.slice();\n    };\n\n    scale.copy = function() {\n      return quantile()\n          .domain(domain)\n          .range(range);\n    };\n\n    return scale;\n  }\n\n  function quantize$1() {\n    var x0 = 0,\n        x1 = 1,\n        n = 1,\n        domain = [0.5],\n        range = [0, 1];\n\n    function scale(x) {\n      if (x <= x) return range[bisectRight(domain, x, 0, n)];\n    }\n\n    function rescale() {\n      var i = -1;\n      domain = new Array(n);\n      while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n      return scale;\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (n = (range = slice$3.call(_)).length - 1, rescale()) : range.slice();\n    };\n\n    scale.invertExtent = function(y) {\n      var i = range.indexOf(y);\n      return i < 0 ? [NaN, NaN]\n          : i < 1 ? [x0, domain[0]]\n          : i >= n ? [domain[n - 1], x1]\n          : [domain[i - 1], domain[i]];\n    };\n\n    scale.copy = function() {\n      return quantize$1()\n          .domain([x0, x1])\n          .range(range);\n    };\n\n    return linearish(scale);\n  }\n\n  function threshold$1() {\n    var domain = [0.5],\n        range = [0, 1],\n        n = 1;\n\n    function scale(x) {\n      if (x <= x) return range[bisectRight(domain, x, 0, n)];\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (domain = slice$3.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n    };\n\n    scale.range = function(_) {\n      return arguments.length ? (range = slice$3.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n    };\n\n    scale.invertExtent = function(y) {\n      var i = range.indexOf(y);\n      return [domain[i - 1], domain[i]];\n    };\n\n    scale.copy = function() {\n      return threshold$1()\n          .domain(domain)\n          .range(range);\n    };\n\n    return scale;\n  }\n\nvar   durationSecond$1 = 1000;\nvar   durationMinute$1 = durationSecond$1 * 60;\nvar   durationHour$1 = durationMinute$1 * 60;\nvar   durationDay$1 = durationHour$1 * 24;\nvar   durationWeek$1 = durationDay$1 * 7;\n  var durationMonth = durationDay$1 * 30;\n  var durationYear = durationDay$1 * 365;\n  function date$1(t) {\n    return new Date(t);\n  }\n\n  function number$2(t) {\n    return t instanceof Date ? +t : +new Date(+t);\n  }\n\n  function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n    var scale = continuous(deinterpolate, interpolateNumber),\n        invert = scale.invert,\n        domain = scale.domain;\n\n    var formatMillisecond = format(\".%L\"),\n        formatSecond = format(\":%S\"),\n        formatMinute = format(\"%I:%M\"),\n        formatHour = format(\"%I %p\"),\n        formatDay = format(\"%a %d\"),\n        formatWeek = format(\"%b %d\"),\n        formatMonth = format(\"%B\"),\n        formatYear = format(\"%Y\");\n\n    var tickIntervals = [\n      [second,  1,      durationSecond$1],\n      [second,  5,  5 * durationSecond$1],\n      [second, 15, 15 * durationSecond$1],\n      [second, 30, 30 * durationSecond$1],\n      [minute,  1,      durationMinute$1],\n      [minute,  5,  5 * durationMinute$1],\n      [minute, 15, 15 * durationMinute$1],\n      [minute, 30, 30 * durationMinute$1],\n      [  hour,  1,      durationHour$1  ],\n      [  hour,  3,  3 * durationHour$1  ],\n      [  hour,  6,  6 * durationHour$1  ],\n      [  hour, 12, 12 * durationHour$1  ],\n      [   day,  1,      durationDay$1   ],\n      [   day,  2,  2 * durationDay$1   ],\n      [  week,  1,      durationWeek$1  ],\n      [ month,  1,      durationMonth ],\n      [ month,  3,  3 * durationMonth ],\n      [  year,  1,      durationYear  ]\n    ];\n\n    function tickFormat(date) {\n      return (second(date) < date ? formatMillisecond\n          : minute(date) < date ? formatSecond\n          : hour(date) < date ? formatMinute\n          : day(date) < date ? formatHour\n          : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n          : year(date) < date ? formatMonth\n          : formatYear)(date);\n    }\n\n    function tickInterval(interval, start, stop, step) {\n      if (interval == null) interval = 10;\n\n      // If a desired tick count is specified, pick a reasonable tick interval\n      // based on the extent of the domain and a rough estimate of tick size.\n      // Otherwise, assume interval is already a time interval and use it.\n      if (typeof interval === \"number\") {\n        var target = Math.abs(stop - start) / interval,\n            i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n        if (i === tickIntervals.length) {\n          step = tickStep(start / durationYear, stop / durationYear, interval);\n          interval = year;\n        } else if (i) {\n          i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n          step = i[1];\n          interval = i[0];\n        } else {\n          step = tickStep(start, stop, interval);\n          interval = millisecond;\n        }\n      }\n\n      return step == null ? interval : interval.every(step);\n    }\n\n    scale.invert = function(y) {\n      return new Date(invert(y));\n    };\n\n    scale.domain = function(_) {\n      return arguments.length ? domain(map$2.call(_, number$2)) : domain().map(date$1);\n    };\n\n    scale.ticks = function(interval, step) {\n      var d = domain(),\n          t0 = d[0],\n          t1 = d[d.length - 1],\n          r = t1 < t0,\n          t;\n      if (r) t = t0, t0 = t1, t1 = t;\n      t = tickInterval(interval, t0, t1, step);\n      t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n      return r ? t.reverse() : t;\n    };\n\n    scale.tickFormat = function(count, specifier) {\n      return specifier == null ? tickFormat : format(specifier);\n    };\n\n    scale.nice = function(interval, step) {\n      var d = domain();\n      return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n          ? domain(nice(d, interval))\n          : scale;\n    };\n\n    scale.copy = function() {\n      return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n    };\n\n    return scale;\n  }\n\n  function time() {\n    return calendar(year, month, timeWeek, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n  }\n\n  function utcTime() {\n    return calendar(utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n  }\n\n  function colors(s) {\n    return s.match(/.{6}/g).map(function(x) {\n      return \"#\" + x;\n    });\n  }\n\n  var category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\n  var category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\n  var category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\n  var category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\n  var cubehelix$3 = interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\n  var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\n  var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\n  var rainbow = cubehelix();\n\n  function rainbow$1(t) {\n    if (t < 0 || t > 1) t -= Math.floor(t);\n    var ts = Math.abs(t - 0.5);\n    rainbow.h = 360 * t - 100;\n    rainbow.s = 1.5 - 1.5 * ts;\n    rainbow.l = 0.8 - 0.9 * ts;\n    return rainbow + \"\";\n  }\n\n  function ramp(range) {\n    var n = range.length;\n    return function(t) {\n      return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n    };\n  }\n\n  var viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\n  var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\n  var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\n  var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\n  function sequential(interpolator) {\n    var x0 = 0,\n        x1 = 1,\n        clamp = false;\n\n    function scale(x) {\n      var t = (x - x0) / (x1 - x0);\n      return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n    }\n\n    scale.domain = function(_) {\n      return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n    };\n\n    scale.clamp = function(_) {\n      return arguments.length ? (clamp = !!_, scale) : clamp;\n    };\n\n    scale.interpolator = function(_) {\n      return arguments.length ? (interpolator = _, scale) : interpolator;\n    };\n\n    scale.copy = function() {\n      return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n    };\n\n    return linearish(scale);\n  }\n\n  var xhtml = \"http://www.w3.org/1999/xhtml\";\n\n  var namespaces = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: xhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n\n  function namespace(name) {\n    var prefix = name += \"\", i = prefix.indexOf(\":\");\n    if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n    return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n  }\n\n  function creatorInherit(name) {\n    return function() {\n      var document = this.ownerDocument,\n          uri = this.namespaceURI;\n      return uri === xhtml && document.documentElement.namespaceURI === xhtml\n          ? document.createElement(name)\n          : document.createElementNS(uri, name);\n    };\n  }\n\n  function creatorFixed(fullname) {\n    return function() {\n      return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n    };\n  }\n\n  function creator(name) {\n    var fullname = namespace(name);\n    return (fullname.local\n        ? creatorFixed\n        : creatorInherit)(fullname);\n  }\n\n  var nextId = 0;\n\n  function local() {\n    return new Local;\n  }\n\n  function Local() {\n    this._ = \"@\" + (++nextId).toString(36);\n  }\n\n  Local.prototype = local.prototype = {\n    constructor: Local,\n    get: function(node) {\n      var id = this._;\n      while (!(id in node)) if (!(node = node.parentNode)) return;\n      return node[id];\n    },\n    set: function(node, value) {\n      return node[this._] = value;\n    },\n    remove: function(node) {\n      return this._ in node && delete node[this._];\n    },\n    toString: function() {\n      return this._;\n    }\n  };\n\n  var matcher = function(selector) {\n    return function() {\n      return this.matches(selector);\n    };\n  };\n\n  if (typeof document !== \"undefined\") {\n    var element = document.documentElement;\n    if (!element.matches) {\n      var vendorMatches = element.webkitMatchesSelector\n          || element.msMatchesSelector\n          || element.mozMatchesSelector\n          || element.oMatchesSelector;\n      matcher = function(selector) {\n        return function() {\n          return vendorMatches.call(this, selector);\n        };\n      };\n    }\n  }\n\n  var matcher$1 = matcher;\n\n  var filterEvents = {};\n\n  exports.event = null;\n\n  if (typeof document !== \"undefined\") {\n    var element$1 = document.documentElement;\n    if (!(\"onmouseenter\" in element$1)) {\n      filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n    }\n  }\n\n  function filterContextListener(listener, index, group) {\n    listener = contextListener(listener, index, group);\n    return function(event) {\n      var related = event.relatedTarget;\n      if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n        listener.call(this, event);\n      }\n    };\n  }\n\n  function contextListener(listener, index, group) {\n    return function(event1) {\n      var event0 = exports.event; // Events can be reentrant (e.g., focus).\n      exports.event = event1;\n      try {\n        listener.call(this, this.__data__, index, group);\n      } finally {\n        exports.event = event0;\n      }\n    };\n  }\n\n  function parseTypenames$1(typenames) {\n    return typenames.trim().split(/^|\\s+/).map(function(t) {\n      var name = \"\", i = t.indexOf(\".\");\n      if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n      return {type: t, name: name};\n    });\n  }\n\n  function onRemove(typename) {\n    return function() {\n      var on = this.__on;\n      if (!on) return;\n      for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n        if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n          this.removeEventListener(o.type, o.listener, o.capture);\n        } else {\n          on[++i] = o;\n        }\n      }\n      if (++i) on.length = i;\n      else delete this.__on;\n    };\n  }\n\n  function onAdd(typename, value, capture) {\n    var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n    return function(d, i, group) {\n      var on = this.__on, o, listener = wrap(value, i, group);\n      if (on) for (var j = 0, m = on.length; j < m; ++j) {\n        if ((o = on[j]).type === typename.type && o.name === typename.name) {\n          this.removeEventListener(o.type, o.listener, o.capture);\n          this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n          o.value = value;\n          return;\n        }\n      }\n      this.addEventListener(typename.type, listener, capture);\n      o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n      if (!on) this.__on = [o];\n      else on.push(o);\n    };\n  }\n\n  function selection_on(typename, value, capture) {\n    var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n    if (arguments.length < 2) {\n      var on = this.node().__on;\n      if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n        for (i = 0, o = on[j]; i < n; ++i) {\n          if ((t = typenames[i]).type === o.type && t.name === o.name) {\n            return o.value;\n          }\n        }\n      }\n      return;\n    }\n\n    on = value ? onAdd : onRemove;\n    if (capture == null) capture = false;\n    for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n    return this;\n  }\n\n  function customEvent(event1, listener, that, args) {\n    var event0 = exports.event;\n    event1.sourceEvent = exports.event;\n    exports.event = event1;\n    try {\n      return listener.apply(that, args);\n    } finally {\n      exports.event = event0;\n    }\n  }\n\n  function sourceEvent() {\n    var current = exports.event, source;\n    while (source = current.sourceEvent) current = source;\n    return current;\n  }\n\n  function point$5(node, event) {\n    var svg = node.ownerSVGElement || node;\n\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      point.x = event.clientX, point.y = event.clientY;\n      point = point.matrixTransform(node.getScreenCTM().inverse());\n      return [point.x, point.y];\n    }\n\n    var rect = node.getBoundingClientRect();\n    return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n  }\n\n  function mouse(node) {\n    var event = sourceEvent();\n    if (event.changedTouches) event = event.changedTouches[0];\n    return point$5(node, event);\n  }\n\n  function none$2() {}\n\n  function selector(selector) {\n    return selector == null ? none$2 : function() {\n      return this.querySelector(selector);\n    };\n  }\n\n  function selection_select(select) {\n    if (typeof select !== \"function\") select = selector(select);\n\n    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n        if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          subgroup[i] = subnode;\n        }\n      }\n    }\n\n    return new Selection(subgroups, this._parents);\n  }\n\n  function empty() {\n    return [];\n  }\n\n  function selectorAll(selector) {\n    return selector == null ? empty : function() {\n      return this.querySelectorAll(selector);\n    };\n  }\n\n  function selection_selectAll(select) {\n    if (typeof select !== \"function\") select = selectorAll(select);\n\n    for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          subgroups.push(select.call(node, node.__data__, i, group));\n          parents.push(node);\n        }\n      }\n    }\n\n    return new Selection(subgroups, parents);\n  }\n\n  function selection_filter(match) {\n    if (typeof match !== \"function\") match = matcher$1(match);\n\n    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n        if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n          subgroup.push(node);\n        }\n      }\n    }\n\n    return new Selection(subgroups, this._parents);\n  }\n\n  function sparse(update) {\n    return new Array(update.length);\n  }\n\n  function selection_enter() {\n    return new Selection(this._enter || this._groups.map(sparse), this._parents);\n  }\n\n  function EnterNode(parent, datum) {\n    this.ownerDocument = parent.ownerDocument;\n    this.namespaceURI = parent.namespaceURI;\n    this._next = null;\n    this._parent = parent;\n    this.__data__ = datum;\n  }\n\n  EnterNode.prototype = {\n    constructor: EnterNode,\n    appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n    insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n    querySelector: function(selector) { return this._parent.querySelector(selector); },\n    querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n  };\n\n  function constant$4(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  var keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\n  function bindIndex(parent, group, enter, update, exit, data) {\n    var i = 0,\n        node,\n        groupLength = group.length,\n        dataLength = data.length;\n\n    // Put any non-null nodes that fit into update.\n    // Put any null nodes into enter.\n    // Put any remaining data into enter.\n    for (; i < dataLength; ++i) {\n      if (node = group[i]) {\n        node.__data__ = data[i];\n        update[i] = node;\n      } else {\n        enter[i] = new EnterNode(parent, data[i]);\n      }\n    }\n\n    // Put any non-null nodes that don’t fit into exit.\n    for (; i < groupLength; ++i) {\n      if (node = group[i]) {\n        exit[i] = node;\n      }\n    }\n  }\n\n  function bindKey(parent, group, enter, update, exit, data, key) {\n    var i,\n        node,\n        nodeByKeyValue = {},\n        groupLength = group.length,\n        dataLength = data.length,\n        keyValues = new Array(groupLength),\n        keyValue;\n\n    // Compute the key for each node.\n    // If multiple nodes have the same key, the duplicates are added to exit.\n    for (i = 0; i < groupLength; ++i) {\n      if (node = group[i]) {\n        keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n        if (keyValue in nodeByKeyValue) {\n          exit[i] = node;\n        } else {\n          nodeByKeyValue[keyValue] = node;\n        }\n      }\n    }\n\n    // Compute the key for each datum.\n    // If there a node associated with this key, join and add it to update.\n    // If there is not (or the key is a duplicate), add it to enter.\n    for (i = 0; i < dataLength; ++i) {\n      keyValue = keyPrefix + key.call(parent, data[i], i, data);\n      if (node = nodeByKeyValue[keyValue]) {\n        update[i] = node;\n        node.__data__ = data[i];\n        nodeByKeyValue[keyValue] = null;\n      } else {\n        enter[i] = new EnterNode(parent, data[i]);\n      }\n    }\n\n    // Add any remaining nodes that were not bound to data to exit.\n    for (i = 0; i < groupLength; ++i) {\n      if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n        exit[i] = node;\n      }\n    }\n  }\n\n  function selection_data(value, key) {\n    if (!value) {\n      data = new Array(this.size()), j = -1;\n      this.each(function(d) { data[++j] = d; });\n      return data;\n    }\n\n    var bind = key ? bindKey : bindIndex,\n        parents = this._parents,\n        groups = this._groups;\n\n    if (typeof value !== \"function\") value = constant$4(value);\n\n    for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n      var parent = parents[j],\n          group = groups[j],\n          groupLength = group.length,\n          data = value.call(parent, parent && parent.__data__, j, parents),\n          dataLength = data.length,\n          enterGroup = enter[j] = new Array(dataLength),\n          updateGroup = update[j] = new Array(dataLength),\n          exitGroup = exit[j] = new Array(groupLength);\n\n      bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n      // Now connect the enter nodes to their following update node, such that\n      // appendChild can insert the materialized enter node before this node,\n      // rather than at the end of the parent node.\n      for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n        if (previous = enterGroup[i0]) {\n          if (i0 >= i1) i1 = i0 + 1;\n          while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n          previous._next = next || null;\n        }\n      }\n    }\n\n    update = new Selection(update, parents);\n    update._enter = enter;\n    update._exit = exit;\n    return update;\n  }\n\n  function selection_exit() {\n    return new Selection(this._exit || this._groups.map(sparse), this._parents);\n  }\n\n  function selection_merge(selection) {\n\n    for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n      for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n        if (node = group0[i] || group1[i]) {\n          merge[i] = node;\n        }\n      }\n    }\n\n    for (; j < m0; ++j) {\n      merges[j] = groups0[j];\n    }\n\n    return new Selection(merges, this._parents);\n  }\n\n  function selection_order() {\n\n    for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n      for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function selection_sort(compare) {\n    if (!compare) compare = ascending$2;\n\n    function compareNode(a, b) {\n      return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n    }\n\n    for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          sortgroup[i] = node;\n        }\n      }\n      sortgroup.sort(compareNode);\n    }\n\n    return new Selection(sortgroups, this._parents).order();\n  }\n\n  function ascending$2(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  function selection_call() {\n    var callback = arguments[0];\n    arguments[0] = this;\n    callback.apply(null, arguments);\n    return this;\n  }\n\n  function selection_nodes() {\n    var nodes = new Array(this.size()), i = -1;\n    this.each(function() { nodes[++i] = this; });\n    return nodes;\n  }\n\n  function selection_node() {\n\n    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n      for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n\n    return null;\n  }\n\n  function selection_size() {\n    var size = 0;\n    this.each(function() { ++size; });\n    return size;\n  }\n\n  function selection_empty() {\n    return !this.node();\n  }\n\n  function selection_each(callback) {\n\n    for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n        if (node = group[i]) callback.call(node, node.__data__, i, group);\n      }\n    }\n\n    return this;\n  }\n\n  function attrRemove(name) {\n    return function() {\n      this.removeAttribute(name);\n    };\n  }\n\n  function attrRemoveNS(fullname) {\n    return function() {\n      this.removeAttributeNS(fullname.space, fullname.local);\n    };\n  }\n\n  function attrConstant(name, value) {\n    return function() {\n      this.setAttribute(name, value);\n    };\n  }\n\n  function attrConstantNS(fullname, value) {\n    return function() {\n      this.setAttributeNS(fullname.space, fullname.local, value);\n    };\n  }\n\n  function attrFunction(name, value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) this.removeAttribute(name);\n      else this.setAttribute(name, v);\n    };\n  }\n\n  function attrFunctionNS(fullname, value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n      else this.setAttributeNS(fullname.space, fullname.local, v);\n    };\n  }\n\n  function selection_attr(name, value) {\n    var fullname = namespace(name);\n\n    if (arguments.length < 2) {\n      var node = this.node();\n      return fullname.local\n          ? node.getAttributeNS(fullname.space, fullname.local)\n          : node.getAttribute(fullname);\n    }\n\n    return this.each((value == null\n        ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n        ? (fullname.local ? attrFunctionNS : attrFunction)\n        : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n  }\n\n  function window(node) {\n    return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n        || (node.document && node) // node is a Window\n        || node.defaultView; // node is a Document\n  }\n\n  function styleRemove(name) {\n    return function() {\n      this.style.removeProperty(name);\n    };\n  }\n\n  function styleConstant(name, value, priority) {\n    return function() {\n      this.style.setProperty(name, value, priority);\n    };\n  }\n\n  function styleFunction(name, value, priority) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) this.style.removeProperty(name);\n      else this.style.setProperty(name, v, priority);\n    };\n  }\n\n  function selection_style(name, value, priority) {\n    var node;\n    return arguments.length > 1\n        ? this.each((value == null\n              ? styleRemove : typeof value === \"function\"\n              ? styleFunction\n              : styleConstant)(name, value, priority == null ? \"\" : priority))\n        : window(node = this.node())\n            .getComputedStyle(node, null)\n            .getPropertyValue(name);\n  }\n\n  function propertyRemove(name) {\n    return function() {\n      delete this[name];\n    };\n  }\n\n  function propertyConstant(name, value) {\n    return function() {\n      this[name] = value;\n    };\n  }\n\n  function propertyFunction(name, value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) delete this[name];\n      else this[name] = v;\n    };\n  }\n\n  function selection_property(name, value) {\n    return arguments.length > 1\n        ? this.each((value == null\n            ? propertyRemove : typeof value === \"function\"\n            ? propertyFunction\n            : propertyConstant)(name, value))\n        : this.node()[name];\n  }\n\n  function classArray(string) {\n    return string.trim().split(/^|\\s+/);\n  }\n\n  function classList(node) {\n    return node.classList || new ClassList(node);\n  }\n\n  function ClassList(node) {\n    this._node = node;\n    this._names = classArray(node.getAttribute(\"class\") || \"\");\n  }\n\n  ClassList.prototype = {\n    add: function(name) {\n      var i = this._names.indexOf(name);\n      if (i < 0) {\n        this._names.push(name);\n        this._node.setAttribute(\"class\", this._names.join(\" \"));\n      }\n    },\n    remove: function(name) {\n      var i = this._names.indexOf(name);\n      if (i >= 0) {\n        this._names.splice(i, 1);\n        this._node.setAttribute(\"class\", this._names.join(\" \"));\n      }\n    },\n    contains: function(name) {\n      return this._names.indexOf(name) >= 0;\n    }\n  };\n\n  function classedAdd(node, names) {\n    var list = classList(node), i = -1, n = names.length;\n    while (++i < n) list.add(names[i]);\n  }\n\n  function classedRemove(node, names) {\n    var list = classList(node), i = -1, n = names.length;\n    while (++i < n) list.remove(names[i]);\n  }\n\n  function classedTrue(names) {\n    return function() {\n      classedAdd(this, names);\n    };\n  }\n\n  function classedFalse(names) {\n    return function() {\n      classedRemove(this, names);\n    };\n  }\n\n  function classedFunction(names, value) {\n    return function() {\n      (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n    };\n  }\n\n  function selection_classed(name, value) {\n    var names = classArray(name + \"\");\n\n    if (arguments.length < 2) {\n      var list = classList(this.node()), i = -1, n = names.length;\n      while (++i < n) if (!list.contains(names[i])) return false;\n      return true;\n    }\n\n    return this.each((typeof value === \"function\"\n        ? classedFunction : value\n        ? classedTrue\n        : classedFalse)(names, value));\n  }\n\n  function textRemove() {\n    this.textContent = \"\";\n  }\n\n  function textConstant(value) {\n    return function() {\n      this.textContent = value;\n    };\n  }\n\n  function textFunction(value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    };\n  }\n\n  function selection_text(value) {\n    return arguments.length\n        ? this.each(value == null\n            ? textRemove : (typeof value === \"function\"\n            ? textFunction\n            : textConstant)(value))\n        : this.node().textContent;\n  }\n\n  function htmlRemove() {\n    this.innerHTML = \"\";\n  }\n\n  function htmlConstant(value) {\n    return function() {\n      this.innerHTML = value;\n    };\n  }\n\n  function htmlFunction(value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    };\n  }\n\n  function selection_html(value) {\n    return arguments.length\n        ? this.each(value == null\n            ? htmlRemove : (typeof value === \"function\"\n            ? htmlFunction\n            : htmlConstant)(value))\n        : this.node().innerHTML;\n  }\n\n  function raise$1() {\n    if (this.nextSibling) this.parentNode.appendChild(this);\n  }\n\n  function selection_raise() {\n    return this.each(raise$1);\n  }\n\n  function lower() {\n    if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n  }\n\n  function selection_lower() {\n    return this.each(lower);\n  }\n\n  function selection_append(name) {\n    var create = typeof name === \"function\" ? name : creator(name);\n    return this.select(function() {\n      return this.appendChild(create.apply(this, arguments));\n    });\n  }\n\n  function constantNull() {\n    return null;\n  }\n\n  function selection_insert(name, before) {\n    var create = typeof name === \"function\" ? name : creator(name),\n        select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n    return this.select(function() {\n      return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n    });\n  }\n\n  function remove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n\n  function selection_remove() {\n    return this.each(remove);\n  }\n\n  function selection_datum(value) {\n    return arguments.length\n        ? this.property(\"__data__\", value)\n        : this.node().__data__;\n  }\n\n  function dispatchEvent(node, type, params) {\n    var window$$ = window(node),\n        event = window$$.CustomEvent;\n\n    if (event) {\n      event = new event(type, params);\n    } else {\n      event = window$$.document.createEvent(\"Event\");\n      if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n      else event.initEvent(type, false, false);\n    }\n\n    node.dispatchEvent(event);\n  }\n\n  function dispatchConstant(type, params) {\n    return function() {\n      return dispatchEvent(this, type, params);\n    };\n  }\n\n  function dispatchFunction(type, params) {\n    return function() {\n      return dispatchEvent(this, type, params.apply(this, arguments));\n    };\n  }\n\n  function selection_dispatch(type, params) {\n    return this.each((typeof params === \"function\"\n        ? dispatchFunction\n        : dispatchConstant)(type, params));\n  }\n\n  var root = [null];\n\n  function Selection(groups, parents) {\n    this._groups = groups;\n    this._parents = parents;\n  }\n\n  function selection() {\n    return new Selection([[document.documentElement]], root);\n  }\n\n  Selection.prototype = selection.prototype = {\n    constructor: Selection,\n    select: selection_select,\n    selectAll: selection_selectAll,\n    filter: selection_filter,\n    data: selection_data,\n    enter: selection_enter,\n    exit: selection_exit,\n    merge: selection_merge,\n    order: selection_order,\n    sort: selection_sort,\n    call: selection_call,\n    nodes: selection_nodes,\n    node: selection_node,\n    size: selection_size,\n    empty: selection_empty,\n    each: selection_each,\n    attr: selection_attr,\n    style: selection_style,\n    property: selection_property,\n    classed: selection_classed,\n    text: selection_text,\n    html: selection_html,\n    raise: selection_raise,\n    lower: selection_lower,\n    append: selection_append,\n    insert: selection_insert,\n    remove: selection_remove,\n    datum: selection_datum,\n    on: selection_on,\n    dispatch: selection_dispatch\n  };\n\n  function select(selector) {\n    return typeof selector === \"string\"\n        ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n        : new Selection([[selector]], root);\n  }\n\n  function selectAll(selector) {\n    return typeof selector === \"string\"\n        ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n        : new Selection([selector == null ? [] : selector], root);\n  }\n\n  function touch(node, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n    for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return point$5(node, touch);\n      }\n    }\n\n    return null;\n  }\n\n  function touches(node, touches) {\n    if (touches == null) touches = sourceEvent().touches;\n\n    for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n      points[i] = point$5(node, touches[i]);\n    }\n\n    return points;\n  }\n\n  var emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\n  var emptyTween = [];\n\n  var CREATED = 0;\n  var SCHEDULED = 1;\n  var STARTING = 2;\n  var STARTED = 3;\n  var ENDING = 4;\n  var ENDED = 5;\n\n  function schedule(node, name, id, index, group, timing) {\n    var schedules = node.__transition;\n    if (!schedules) node.__transition = {};\n    else if (id in schedules) return;\n    create(node, id, {\n      name: name,\n      index: index, // For context during callback.\n      group: group, // For context during callback.\n      on: emptyOn,\n      tween: emptyTween,\n      time: timing.time,\n      delay: timing.delay,\n      duration: timing.duration,\n      ease: timing.ease,\n      timer: null,\n      state: CREATED\n    });\n  }\n\n  function init(node, id) {\n    var schedule = node.__transition;\n    if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n    return schedule;\n  }\n\n  function set$2(node, id) {\n    var schedule = node.__transition;\n    if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n    return schedule;\n  }\n\n  function get$1(node, id) {\n    var schedule = node.__transition;\n    if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n    return schedule;\n  }\n\n  function create(node, id, self) {\n    var schedules = node.__transition,\n        tween;\n\n    // Initialize the self timer when the transition is created.\n    // Note the actual delay is not known until the first callback!\n    schedules[id] = self;\n    self.timer = timer(schedule, 0, self.time);\n\n    // If the delay is greater than this first sleep, sleep some more;\n    // otherwise, start immediately.\n    function schedule(elapsed) {\n      self.state = SCHEDULED;\n      if (self.delay <= elapsed) start(elapsed - self.delay);\n      else self.timer.restart(start, self.delay, self.time);\n    }\n\n    function start(elapsed) {\n      var i, j, n, o;\n\n      for (i in schedules) {\n        o = schedules[i];\n        if (o.name !== self.name) continue;\n\n        // Interrupt the active transition, if any.\n        // Dispatch the interrupt event.\n        if (o.state === STARTED) {\n          o.state = ENDED;\n          o.timer.stop();\n          o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n          delete schedules[i];\n        }\n\n        // Cancel any pre-empted transitions. No interrupt event is dispatched\n        // because the cancelled transitions never started. Note that this also\n        // removes this transition from the pending list!\n        else if (+i < id) {\n          o.state = ENDED;\n          o.timer.stop();\n          delete schedules[i];\n        }\n      }\n\n      // Defer the first tick to end of the current frame; see mbostock/d3#1576.\n      // Note the transition may be canceled after start and before the first tick!\n      // Note this must be scheduled before the start event; see d3/d3-transition#16!\n      // Assuming this is successful, subsequent callbacks go straight to tick.\n      timeout$1(function() {\n        if (self.state === STARTED) {\n          self.timer.restart(tick, self.delay, self.time);\n          tick(elapsed);\n        }\n      });\n\n      // Dispatch the start event.\n      // Note this must be done before the tween are initialized.\n      self.state = STARTING;\n      self.on.call(\"start\", node, node.__data__, self.index, self.group);\n      if (self.state !== STARTING) return; // interrupted\n      self.state = STARTED;\n\n      // Initialize the tween, deleting null tween.\n      tween = new Array(n = self.tween.length);\n      for (i = 0, j = -1; i < n; ++i) {\n        if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n          tween[++j] = o;\n        }\n      }\n      tween.length = j + 1;\n    }\n\n    function tick(elapsed) {\n      var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.state = ENDING, 1),\n          i = -1,\n          n = tween.length;\n\n      while (++i < n) {\n        tween[i].call(null, t);\n      }\n\n      // Dispatch the end event.\n      if (self.state === ENDING) {\n        self.state = ENDED;\n        self.timer.stop();\n        self.on.call(\"end\", node, node.__data__, self.index, self.group);\n        for (i in schedules) if (+i !== id) return void delete schedules[id];\n        delete node.__transition;\n      }\n    }\n  }\n\n  function interrupt(node, name) {\n    var schedules = node.__transition,\n        schedule,\n        active,\n        empty = true,\n        i;\n\n    if (!schedules) return;\n\n    name = name == null ? null : name + \"\";\n\n    for (i in schedules) {\n      if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n      active = schedule.state === STARTED;\n      schedule.state = ENDED;\n      schedule.timer.stop();\n      if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n      delete schedules[i];\n    }\n\n    if (empty) delete node.__transition;\n  }\n\n  function selection_interrupt(name) {\n    return this.each(function() {\n      interrupt(this, name);\n    });\n  }\n\n  function tweenRemove(id, name) {\n    var tween0, tween1;\n    return function() {\n      var schedule = set$2(this, id),\n          tween = schedule.tween;\n\n      // If this node shared tween with the previous node,\n      // just assign the updated shared tween and we’re done!\n      // Otherwise, copy-on-write.\n      if (tween !== tween0) {\n        tween1 = tween0 = tween;\n        for (var i = 0, n = tween1.length; i < n; ++i) {\n          if (tween1[i].name === name) {\n            tween1 = tween1.slice();\n            tween1.splice(i, 1);\n            break;\n          }\n        }\n      }\n\n      schedule.tween = tween1;\n    };\n  }\n\n  function tweenFunction(id, name, value) {\n    var tween0, tween1;\n    if (typeof value !== \"function\") throw new Error;\n    return function() {\n      var schedule = set$2(this, id),\n          tween = schedule.tween;\n\n      // If this node shared tween with the previous node,\n      // just assign the updated shared tween and we’re done!\n      // Otherwise, copy-on-write.\n      if (tween !== tween0) {\n        tween1 = (tween0 = tween).slice();\n        for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n          if (tween1[i].name === name) {\n            tween1[i] = t;\n            break;\n          }\n        }\n        if (i === n) tween1.push(t);\n      }\n\n      schedule.tween = tween1;\n    };\n  }\n\n  function transition_tween(name, value) {\n    var id = this._id;\n\n    name += \"\";\n\n    if (arguments.length < 2) {\n      var tween = get$1(this.node(), id).tween;\n      for (var i = 0, n = tween.length, t; i < n; ++i) {\n        if ((t = tween[i]).name === name) {\n          return t.value;\n        }\n      }\n      return null;\n    }\n\n    return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n  }\n\n  function tweenValue(transition, name, value) {\n    var id = transition._id;\n\n    transition.each(function() {\n      var schedule = set$2(this, id);\n      (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n    });\n\n    return function(node) {\n      return get$1(node, id).value[name];\n    };\n  }\n\n  function interpolate$1(a, b) {\n    var c;\n    return (typeof b === \"number\" ? interpolateNumber\n        : b instanceof color ? interpolateRgb\n        : (c = color(b)) ? (b = c, interpolateRgb)\n        : interpolateString)(a, b);\n  }\n\n  function attrRemove$1(name) {\n    return function() {\n      this.removeAttribute(name);\n    };\n  }\n\n  function attrRemoveNS$1(fullname) {\n    return function() {\n      this.removeAttributeNS(fullname.space, fullname.local);\n    };\n  }\n\n  function attrConstant$1(name, interpolate, value1) {\n    var value00,\n        interpolate0;\n    return function() {\n      var value0 = this.getAttribute(name);\n      return value0 === value1 ? null\n          : value0 === value00 ? interpolate0\n          : interpolate0 = interpolate(value00 = value0, value1);\n    };\n  }\n\n  function attrConstantNS$1(fullname, interpolate, value1) {\n    var value00,\n        interpolate0;\n    return function() {\n      var value0 = this.getAttributeNS(fullname.space, fullname.local);\n      return value0 === value1 ? null\n          : value0 === value00 ? interpolate0\n          : interpolate0 = interpolate(value00 = value0, value1);\n    };\n  }\n\n  function attrFunction$1(name, interpolate, value) {\n    var value00,\n        value10,\n        interpolate0;\n    return function() {\n      var value0, value1 = value(this);\n      if (value1 == null) return void this.removeAttribute(name);\n      value0 = this.getAttribute(name);\n      return value0 === value1 ? null\n          : value0 === value00 && value1 === value10 ? interpolate0\n          : interpolate0 = interpolate(value00 = value0, value10 = value1);\n    };\n  }\n\n  function attrFunctionNS$1(fullname, interpolate, value) {\n    var value00,\n        value10,\n        interpolate0;\n    return function() {\n      var value0, value1 = value(this);\n      if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n      value0 = this.getAttributeNS(fullname.space, fullname.local);\n      return value0 === value1 ? null\n          : value0 === value00 && value1 === value10 ? interpolate0\n          : interpolate0 = interpolate(value00 = value0, value10 = value1);\n    };\n  }\n\n  function transition_attr(name, value) {\n    var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform$2 : interpolate$1;\n    return this.attrTween(name, typeof value === \"function\"\n        ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n        : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n        : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value));\n  }\n\n  function attrTweenNS(fullname, value) {\n    function tween() {\n      var node = this, i = value.apply(node, arguments);\n      return i && function(t) {\n        node.setAttributeNS(fullname.space, fullname.local, i(t));\n      };\n    }\n    tween._value = value;\n    return tween;\n  }\n\n  function attrTween(name, value) {\n    function tween() {\n      var node = this, i = value.apply(node, arguments);\n      return i && function(t) {\n        node.setAttribute(name, i(t));\n      };\n    }\n    tween._value = value;\n    return tween;\n  }\n\n  function transition_attrTween(name, value) {\n    var key = \"attr.\" + name;\n    if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n    if (value == null) return this.tween(key, null);\n    if (typeof value !== \"function\") throw new Error;\n    var fullname = namespace(name);\n    return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n  }\n\n  function delayFunction(id, value) {\n    return function() {\n      init(this, id).delay = +value.apply(this, arguments);\n    };\n  }\n\n  function delayConstant(id, value) {\n    return value = +value, function() {\n      init(this, id).delay = value;\n    };\n  }\n\n  function transition_delay(value) {\n    var id = this._id;\n\n    return arguments.length\n        ? this.each((typeof value === \"function\"\n            ? delayFunction\n            : delayConstant)(id, value))\n        : get$1(this.node(), id).delay;\n  }\n\n  function durationFunction(id, value) {\n    return function() {\n      set$2(this, id).duration = +value.apply(this, arguments);\n    };\n  }\n\n  function durationConstant(id, value) {\n    return value = +value, function() {\n      set$2(this, id).duration = value;\n    };\n  }\n\n  function transition_duration(value) {\n    var id = this._id;\n\n    return arguments.length\n        ? this.each((typeof value === \"function\"\n            ? durationFunction\n            : durationConstant)(id, value))\n        : get$1(this.node(), id).duration;\n  }\n\n  function easeConstant(id, value) {\n    if (typeof value !== \"function\") throw new Error;\n    return function() {\n      set$2(this, id).ease = value;\n    };\n  }\n\n  function transition_ease(value) {\n    var id = this._id;\n\n    return arguments.length\n        ? this.each(easeConstant(id, value))\n        : get$1(this.node(), id).ease;\n  }\n\n  function transition_filter(match) {\n    if (typeof match !== \"function\") match = matcher$1(match);\n\n    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n        if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n          subgroup.push(node);\n        }\n      }\n    }\n\n    return new Transition(subgroups, this._parents, this._name, this._id);\n  }\n\n  function transition_merge(transition) {\n    if (transition._id !== this._id) throw new Error;\n\n    for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n      for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n        if (node = group0[i] || group1[i]) {\n          merge[i] = node;\n        }\n      }\n    }\n\n    for (; j < m0; ++j) {\n      merges[j] = groups0[j];\n    }\n\n    return new Transition(merges, this._parents, this._name, this._id);\n  }\n\n  function start$1(name) {\n    return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n      var i = t.indexOf(\".\");\n      if (i >= 0) t = t.slice(0, i);\n      return !t || t === \"start\";\n    });\n  }\n\n  function onFunction(id, name, listener) {\n    var on0, on1, sit = start$1(name) ? init : set$2;\n    return function() {\n      var schedule = sit(this, id),\n          on = schedule.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n      schedule.on = on1;\n    };\n  }\n\n  function transition_on(name, listener) {\n    var id = this._id;\n\n    return arguments.length < 2\n        ? get$1(this.node(), id).on.on(name)\n        : this.each(onFunction(id, name, listener));\n  }\n\n  function removeFunction(id) {\n    return function() {\n      var parent = this.parentNode;\n      for (var i in this.__transition) if (+i !== id) return;\n      if (parent) parent.removeChild(this);\n    };\n  }\n\n  function transition_remove() {\n    return this.on(\"end.remove\", removeFunction(this._id));\n  }\n\n  function transition_select(select) {\n    var name = this._name,\n        id = this._id;\n\n    if (typeof select !== \"function\") select = selector(select);\n\n    for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n        if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          subgroup[i] = subnode;\n          schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n        }\n      }\n    }\n\n    return new Transition(subgroups, this._parents, name, id);\n  }\n\n  function transition_selectAll(select) {\n    var name = this._name,\n        id = this._id;\n\n    if (typeof select !== \"function\") select = selectorAll(select);\n\n    for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          for (var children = select.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n            if (child = children[k]) {\n              schedule(child, name, id, k, children, inherit);\n            }\n          }\n          subgroups.push(children);\n          parents.push(node);\n        }\n      }\n    }\n\n    return new Transition(subgroups, parents, name, id);\n  }\n\n  var Selection$1 = selection.prototype.constructor;\n\n  function transition_selection() {\n    return new Selection$1(this._groups, this._parents);\n  }\n\n  function styleRemove$1(name, interpolate) {\n    var value00,\n        value10,\n        interpolate0;\n    return function() {\n      var style = window(this).getComputedStyle(this, null),\n          value0 = style.getPropertyValue(name),\n          value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n      return value0 === value1 ? null\n          : value0 === value00 && value1 === value10 ? interpolate0\n          : interpolate0 = interpolate(value00 = value0, value10 = value1);\n    };\n  }\n\n  function styleRemoveEnd(name) {\n    return function() {\n      this.style.removeProperty(name);\n    };\n  }\n\n  function styleConstant$1(name, interpolate, value1) {\n    var value00,\n        interpolate0;\n    return function() {\n      var value0 = window(this).getComputedStyle(this, null).getPropertyValue(name);\n      return value0 === value1 ? null\n          : value0 === value00 ? interpolate0\n          : interpolate0 = interpolate(value00 = value0, value1);\n    };\n  }\n\n  function styleFunction$1(name, interpolate, value) {\n    var value00,\n        value10,\n        interpolate0;\n    return function() {\n      var style = window(this).getComputedStyle(this, null),\n          value0 = style.getPropertyValue(name),\n          value1 = value(this);\n      if (value1 == null) value1 = (this.style.removeProperty(name), style.getPropertyValue(name));\n      return value0 === value1 ? null\n          : value0 === value00 && value1 === value10 ? interpolate0\n          : interpolate0 = interpolate(value00 = value0, value10 = value1);\n    };\n  }\n\n  function transition_style(name, value, priority) {\n    var i = (name += \"\") === \"transform\" ? interpolateTransform$1 : interpolate$1;\n    return value == null ? this\n            .styleTween(name, styleRemove$1(name, i))\n            .on(\"end.style.\" + name, styleRemoveEnd(name))\n        : this.styleTween(name, typeof value === \"function\"\n            ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n            : styleConstant$1(name, i, value), priority);\n  }\n\n  function styleTween(name, value, priority) {\n    function tween() {\n      var node = this, i = value.apply(node, arguments);\n      return i && function(t) {\n        node.style.setProperty(name, i(t), priority);\n      };\n    }\n    tween._value = value;\n    return tween;\n  }\n\n  function transition_styleTween(name, value, priority) {\n    var key = \"style.\" + (name += \"\");\n    if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n    if (value == null) return this.tween(key, null);\n    if (typeof value !== \"function\") throw new Error;\n    return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n  }\n\n  function textConstant$1(value) {\n    return function() {\n      this.textContent = value;\n    };\n  }\n\n  function textFunction$1(value) {\n    return function() {\n      var value1 = value(this);\n      this.textContent = value1 == null ? \"\" : value1;\n    };\n  }\n\n  function transition_text(value) {\n    return this.tween(\"text\", typeof value === \"function\"\n        ? textFunction$1(tweenValue(this, \"text\", value))\n        : textConstant$1(value == null ? \"\" : value + \"\"));\n  }\n\n  function transition_transition() {\n    var name = this._name,\n        id0 = this._id,\n        id1 = newId();\n\n    for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          var inherit = get$1(node, id0);\n          schedule(node, name, id1, i, group, {\n            time: inherit.time + inherit.delay + inherit.duration,\n            delay: 0,\n            duration: inherit.duration,\n            ease: inherit.ease\n          });\n        }\n      }\n    }\n\n    return new Transition(groups, this._parents, name, id1);\n  }\n\n  var id = 0;\n\n  function Transition(groups, parents, name, id) {\n    this._groups = groups;\n    this._parents = parents;\n    this._name = name;\n    this._id = id;\n  }\n\n  function transition(name) {\n    return selection().transition(name);\n  }\n\n  function newId() {\n    return ++id;\n  }\n\n  var selection_prototype = selection.prototype;\n\n  Transition.prototype = transition.prototype = {\n    constructor: Transition,\n    select: transition_select,\n    selectAll: transition_selectAll,\n    filter: transition_filter,\n    merge: transition_merge,\n    selection: transition_selection,\n    transition: transition_transition,\n    call: selection_prototype.call,\n    nodes: selection_prototype.nodes,\n    node: selection_prototype.node,\n    size: selection_prototype.size,\n    empty: selection_prototype.empty,\n    each: selection_prototype.each,\n    on: transition_on,\n    attr: transition_attr,\n    attrTween: transition_attrTween,\n    style: transition_style,\n    styleTween: transition_styleTween,\n    text: transition_text,\n    remove: transition_remove,\n    tween: transition_tween,\n    delay: transition_delay,\n    duration: transition_duration,\n    ease: transition_ease\n  };\n\n  var defaultTiming = {\n    time: null, // Set on use.\n    delay: 0,\n    duration: 250,\n    ease: easeCubicInOut\n  };\n\n  function inherit(node, id) {\n    var timing;\n    while (!(timing = node.__transition) || !(timing = timing[id])) {\n      if (!(node = node.parentNode)) {\n        return defaultTiming.time = now(), defaultTiming;\n      }\n    }\n    return timing;\n  }\n\n  function selection_transition(name) {\n    var id,\n        timing;\n\n    if (name instanceof Transition) {\n      id = name._id, name = name._name;\n    } else {\n      id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n    }\n\n    for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          schedule(node, name, id, i, group, timing || inherit(node, id));\n        }\n      }\n    }\n\n    return new Transition(groups, this._parents, name, id);\n  }\n\n  selection.prototype.interrupt = selection_interrupt;\n  selection.prototype.transition = selection_transition;\n\n  var root$1 = [null];\n\n  function active(node, name) {\n    var schedules = node.__transition,\n        schedule,\n        i;\n\n    if (schedules) {\n      name = name == null ? null : name + \"\";\n      for (i in schedules) {\n        if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n          return new Transition([[node]], root$1, name, +i);\n        }\n      }\n    }\n\n    return null;\n  }\n\n  var slice$4 = Array.prototype.slice;\n\n  function identity$5(x) {\n    return x;\n  }\n\n  var top = 1;\n  var right = 2;\n  var bottom = 3;\n  var left = 4;\nvar   epsilon$2 = 1e-6;\n  function translateX(scale0, scale1, d) {\n    var x = scale0(d);\n    return \"translate(\" + (isFinite(x) ? x : scale1(d)) + \",0)\";\n  }\n\n  function translateY(scale0, scale1, d) {\n    var y = scale0(d);\n    return \"translate(0,\" + (isFinite(y) ? y : scale1(d)) + \")\";\n  }\n\n  function center(scale) {\n    var width = scale.bandwidth() / 2;\n    return function(d) {\n      return scale(d) + width;\n    };\n  }\n\n  function entering() {\n    return !this.__axis;\n  }\n\n  function axis(orient, scale) {\n    var tickArguments = [],\n        tickValues = null,\n        tickFormat = null,\n        tickSizeInner = 6,\n        tickSizeOuter = 6,\n        tickPadding = 3;\n\n    function axis(context) {\n      var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n          format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$5) : tickFormat,\n          spacing = Math.max(tickSizeInner, 0) + tickPadding,\n          transform = orient === top || orient === bottom ? translateX : translateY,\n          range = scale.range(),\n          range0 = range[0] + 0.5,\n          range1 = range[range.length - 1] + 0.5,\n          position = (scale.bandwidth ? center : identity$5)(scale.copy()),\n          selection = context.selection ? context.selection() : context,\n          path = selection.selectAll(\".domain\").data([null]),\n          tick = selection.selectAll(\".tick\").data(values, scale).order(),\n          tickExit = tick.exit(),\n          tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n          line = tick.select(\"line\"),\n          text = tick.select(\"text\"),\n          k = orient === top || orient === left ? -1 : 1,\n          x, y = orient === left || orient === right ? (x = \"x\", \"y\") : (x = \"y\", \"x\");\n\n      path = path.merge(path.enter().insert(\"path\", \".tick\")\n          .attr(\"class\", \"domain\")\n          .attr(\"stroke\", \"#000\"));\n\n      tick = tick.merge(tickEnter);\n\n      line = line.merge(tickEnter.append(\"line\")\n          .attr(\"stroke\", \"#000\")\n          .attr(x + \"2\", k * tickSizeInner)\n          .attr(y + \"1\", 0.5)\n          .attr(y + \"2\", 0.5));\n\n      text = text.merge(tickEnter.append(\"text\")\n          .attr(\"fill\", \"#000\")\n          .attr(x, k * spacing)\n          .attr(y, 0.5)\n          .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \".71em\" : \".32em\"));\n\n      if (context !== selection) {\n        path = path.transition(context);\n        tick = tick.transition(context);\n        line = line.transition(context);\n        text = text.transition(context);\n\n        tickExit = tickExit.transition(context)\n            .attr(\"opacity\", epsilon$2)\n            .attr(\"transform\", function(d) { return transform(position, this.parentNode.__axis || position, d); });\n\n        tickEnter\n            .attr(\"opacity\", epsilon$2)\n            .attr(\"transform\", function(d) { return transform(this.parentNode.__axis || position, position, d); });\n      }\n\n      tickExit.remove();\n\n      path\n          .attr(\"d\", orient === left || orient == right\n              ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n              : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n      tick\n          .attr(\"opacity\", 1)\n          .attr(\"transform\", function(d) { return transform(position, position, d); });\n\n      line\n          .attr(x + \"2\", k * tickSizeInner);\n\n      text\n          .attr(x, k * spacing)\n          .text(format);\n\n      selection.filter(entering)\n          .attr(\"fill\", \"none\")\n          .attr(\"font-size\", 10)\n          .attr(\"font-family\", \"sans-serif\")\n          .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n      selection\n          .each(function() { this.__axis = position; });\n    }\n\n    axis.scale = function(_) {\n      return arguments.length ? (scale = _, axis) : scale;\n    };\n\n    axis.ticks = function() {\n      return tickArguments = slice$4.call(arguments), axis;\n    };\n\n    axis.tickArguments = function(_) {\n      return arguments.length ? (tickArguments = _ == null ? [] : slice$4.call(_), axis) : tickArguments.slice();\n    };\n\n    axis.tickValues = function(_) {\n      return arguments.length ? (tickValues = _ == null ? null : slice$4.call(_), axis) : tickValues && tickValues.slice();\n    };\n\n    axis.tickFormat = function(_) {\n      return arguments.length ? (tickFormat = _, axis) : tickFormat;\n    };\n\n    axis.tickSize = function(_) {\n      return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n    };\n\n    axis.tickSizeInner = function(_) {\n      return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n    };\n\n    axis.tickSizeOuter = function(_) {\n      return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n    };\n\n    axis.tickPadding = function(_) {\n      return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n    };\n\n    return axis;\n  }\n\n  function axisTop(scale) {\n    return axis(top, scale);\n  }\n\n  function axisRight(scale) {\n    return axis(right, scale);\n  }\n\n  function axisBottom(scale) {\n    return axis(bottom, scale);\n  }\n\n  function axisLeft(scale) {\n    return axis(left, scale);\n  }\n\n  function defaultSeparation(a, b) {\n    return a.parent === b.parent ? 1 : 2;\n  }\n\n  function meanX(children) {\n    return children.reduce(meanXReduce, 0) / children.length;\n  }\n\n  function meanXReduce(x, c) {\n    return x + c.x;\n  }\n\n  function maxY(children) {\n    return 1 + children.reduce(maxYReduce, 0);\n  }\n\n  function maxYReduce(y, c) {\n    return Math.max(y, c.y);\n  }\n\n  function leafLeft(node) {\n    var children;\n    while (children = node.children) node = children[0];\n    return node;\n  }\n\n  function leafRight(node) {\n    var children;\n    while (children = node.children) node = children[children.length - 1];\n    return node;\n  }\n\n  function cluster() {\n    var separation = defaultSeparation,\n        dx = 1,\n        dy = 1,\n        nodeSize = false;\n\n    function cluster(root) {\n      var previousNode,\n          x = 0;\n\n      // First walk, computing the initial x & y values.\n      root.eachAfter(function(node) {\n        var children = node.children;\n        if (children) {\n          node.x = meanX(children);\n          node.y = maxY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n\n      var left = leafLeft(root),\n          right = leafRight(root),\n          x0 = left.x - separation(left, right) / 2,\n          x1 = right.x + separation(right, left) / 2;\n\n      // Second walk, normalizing x & y to the desired size.\n      return root.eachAfter(nodeSize ? function(node) {\n        node.x = (node.x - root.x) * dx;\n        node.y = (root.y - node.y) * dy;\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * dx;\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n      });\n    }\n\n    cluster.separation = function(x) {\n      return arguments.length ? (separation = x, cluster) : separation;\n    };\n\n    cluster.size = function(x) {\n      return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n    };\n\n    cluster.nodeSize = function(x) {\n      return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n    };\n\n    return cluster;\n  }\n\n  function node_each(callback) {\n    var node = this, current, next = [node], children, i, n;\n    do {\n      current = next.reverse(), next = [];\n      while (node = current.pop()) {\n        callback(node), children = node.children;\n        if (children) for (i = 0, n = children.length; i < n; ++i) {\n          next.push(children[i]);\n        }\n      }\n    } while (next.length);\n    return this;\n  }\n\n  function node_eachBefore(callback) {\n    var node = this, nodes = [node], children, i;\n    while (node = nodes.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = children.length - 1; i >= 0; --i) {\n        nodes.push(children[i]);\n      }\n    }\n    return this;\n  }\n\n  function node_eachAfter(callback) {\n    var node = this, nodes = [node], next = [], children, i, n;\n    while (node = nodes.pop()) {\n      next.push(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        nodes.push(children[i]);\n      }\n    }\n    while (node = next.pop()) {\n      callback(node);\n    }\n    return this;\n  }\n\n  function node_sum(value) {\n    return this.eachAfter(function(node) {\n      var sum = +value(node.data) || 0,\n          children = node.children,\n          i = children && children.length;\n      while (--i >= 0) sum += children[i].value;\n      node.value = sum;\n    });\n  }\n\n  function node_sort(compare) {\n    return this.eachBefore(function(node) {\n      if (node.children) {\n        node.children.sort(compare);\n      }\n    });\n  }\n\n  function node_path(end) {\n    var start = this,\n        ancestor = leastCommonAncestor(start, end),\n        nodes = [start];\n    while (start !== ancestor) {\n      start = start.parent;\n      nodes.push(start);\n    }\n    var k = nodes.length;\n    while (end !== ancestor) {\n      nodes.splice(k, 0, end);\n      end = end.parent;\n    }\n    return nodes;\n  }\n\n  function leastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = a.ancestors(),\n        bNodes = b.ancestors(),\n        c = null;\n    a = aNodes.pop();\n    b = bNodes.pop();\n    while (a === b) {\n      c = a;\n      a = aNodes.pop();\n      b = bNodes.pop();\n    }\n    return c;\n  }\n\n  function node_ancestors() {\n    var node = this, nodes = [node];\n    while (node = node.parent) {\n      nodes.push(node);\n    }\n    return nodes;\n  }\n\n  function node_descendants() {\n    var nodes = [];\n    this.each(function(node) {\n      nodes.push(node);\n    });\n    return nodes;\n  }\n\n  function node_leaves() {\n    var leaves = [];\n    this.eachBefore(function(node) {\n      if (!node.children) {\n        leaves.push(node);\n      }\n    });\n    return leaves;\n  }\n\n  function node_links() {\n    var root = this, links = [];\n    root.each(function(node) {\n      if (node !== root) { // Don’t include the root’s parent, if any.\n        links.push({source: node.parent, target: node});\n      }\n    });\n    return links;\n  }\n\n  function hierarchy(data, children) {\n    var root = new Node(data),\n        valued = +data.value && (root.value = data.value),\n        node,\n        nodes = [root],\n        child,\n        childs,\n        i,\n        n;\n\n    if (children == null) children = defaultChildren;\n\n    while (node = nodes.pop()) {\n      if (valued) node.value = +node.data.value;\n      if ((childs = children(node.data)) && (n = childs.length)) {\n        node.children = new Array(n);\n        for (i = n - 1; i >= 0; --i) {\n          nodes.push(child = node.children[i] = new Node(childs[i]));\n          child.parent = node;\n          child.depth = node.depth + 1;\n        }\n      }\n    }\n\n    return root.eachBefore(computeHeight);\n  }\n\n  function node_copy() {\n    return hierarchy(this).eachBefore(copyData);\n  }\n\n  function defaultChildren(d) {\n    return d.children;\n  }\n\n  function copyData(node) {\n    node.data = node.data.data;\n  }\n\n  function computeHeight(node) {\n    var height = 0;\n    do node.height = height;\n    while ((node = node.parent) && (node.height < ++height));\n  }\n\n  function Node(data) {\n    this.data = data;\n    this.depth =\n    this.height = 0;\n    this.parent = null;\n  }\n\n  Node.prototype = hierarchy.prototype = {\n    constructor: Node,\n    each: node_each,\n    eachAfter: node_eachAfter,\n    eachBefore: node_eachBefore,\n    sum: node_sum,\n    sort: node_sort,\n    path: node_path,\n    ancestors: node_ancestors,\n    descendants: node_descendants,\n    leaves: node_leaves,\n    links: node_links,\n    copy: node_copy\n  };\n\n  function Node$2(value) {\n    this._ = value;\n    this.next = null;\n  }\n\n  function shuffle$1(array) {\n    var i,\n        n = (array = array.slice()).length,\n        head = null,\n        node = head;\n\n    while (n) {\n      var next = new Node$2(array[n - 1]);\n      if (node) node = node.next = next;\n      else node = head = next;\n      array[i] = array[--n];\n    }\n\n    return {\n      head: head,\n      tail: node\n    };\n  }\n\n  function enclose(circles) {\n    return encloseN(shuffle$1(circles), []);\n  }\n\n  function encloses(a, b) {\n    var dx = b.x - a.x,\n        dy = b.y - a.y,\n        dr = a.r - b.r;\n    return dr * dr + 1e-6 > dx * dx + dy * dy;\n  }\n\n  // Returns the smallest circle that contains circles L and intersects circles B.\n  function encloseN(L, B) {\n    var circle,\n        l0 = null,\n        l1 = L.head,\n        l2,\n        p1;\n\n    switch (B.length) {\n      case 1: circle = enclose1(B[0]); break;\n      case 2: circle = enclose2(B[0], B[1]); break;\n      case 3: circle = enclose3(B[0], B[1], B[2]); break;\n    }\n\n    while (l1) {\n      p1 = l1._, l2 = l1.next;\n      if (!circle || !encloses(circle, p1)) {\n\n        // Temporarily truncate L before l1.\n        if (l0) L.tail = l0, l0.next = null;\n        else L.head = L.tail = null;\n\n        B.push(p1);\n        circle = encloseN(L, B); // Note: reorders L!\n        B.pop();\n\n        // Move l1 to the front of L and reconnect the truncated list L.\n        if (L.head) l1.next = L.head, L.head = l1;\n        else l1.next = null, L.head = L.tail = l1;\n        l0 = L.tail, l0.next = l2;\n\n      } else {\n        l0 = l1;\n      }\n      l1 = l2;\n    }\n\n    L.tail = l0;\n    return circle;\n  }\n\n  function enclose1(a) {\n    return {\n      x: a.x,\n      y: a.y,\n      r: a.r\n    };\n  }\n\n  function enclose2(a, b) {\n    var x1 = a.x, y1 = a.y, r1 = a.r,\n        x2 = b.x, y2 = b.y, r2 = b.r,\n        x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n        l = Math.sqrt(x21 * x21 + y21 * y21);\n    return {\n      x: (x1 + x2 + x21 / l * r21) / 2,\n      y: (y1 + y2 + y21 / l * r21) / 2,\n      r: (l + r1 + r2) / 2\n    };\n  }\n\n  function enclose3(a, b, c) {\n    var x1 = a.x, y1 = a.y, r1 = a.r,\n        x2 = b.x, y2 = b.y, r2 = b.r,\n        x3 = c.x, y3 = c.y, r3 = c.r,\n        a2 = 2 * (x1 - x2),\n        b2 = 2 * (y1 - y2),\n        c2 = 2 * (r2 - r1),\n        d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n        a3 = 2 * (x1 - x3),\n        b3 = 2 * (y1 - y3),\n        c3 = 2 * (r3 - r1),\n        d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n        ab = a3 * b2 - a2 * b3,\n        xa = (b2 * d3 - b3 * d2) / ab - x1,\n        xb = (b3 * c2 - b2 * c3) / ab,\n        ya = (a3 * d2 - a2 * d3) / ab - y1,\n        yb = (a2 * c3 - a3 * c2) / ab,\n        A = xb * xb + yb * yb - 1,\n        B = 2 * (xa * xb + ya * yb + r1),\n        C = xa * xa + ya * ya - r1 * r1,\n        r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n    return {\n      x: xa + xb * r + x1,\n      y: ya + yb * r + y1,\n      r: r\n    };\n  }\n\n  function place(a, b, c) {\n    var ax = a.x,\n        ay = a.y,\n        da = b.r + c.r,\n        db = a.r + c.r,\n        dx = b.x - ax,\n        dy = b.y - ay,\n        dc = dx * dx + dy * dy;\n    if (dc) {\n      var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n          y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = ax + x * dx + y * dy;\n      c.y = ay + x * dy - y * dx;\n    } else {\n      c.x = ax + db;\n      c.y = ay;\n    }\n  }\n\n  function intersects(a, b) {\n    var dx = b.x - a.x,\n        dy = b.y - a.y,\n        dr = a.r + b.r;\n    return dr * dr > dx * dx + dy * dy;\n  }\n\n  function distance2(circle, x, y) {\n    var dx = circle.x - x,\n        dy = circle.y - y;\n    return dx * dx + dy * dy;\n  }\n\n  function Node$1(circle) {\n    this._ = circle;\n    this.next = null;\n    this.previous = null;\n  }\n\n  function packEnclose(circles) {\n    if (!(n = circles.length)) return 0;\n\n    var a, b, c, n;\n\n    // Place the first circle.\n    a = circles[0], a.x = 0, a.y = 0;\n    if (!(n > 1)) return a.r;\n\n    // Place the second circle.\n    b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n    if (!(n > 2)) return a.r + b.r;\n\n    // Place the third circle.\n    place(b, a, c = circles[2]);\n\n    // Initialize the weighted centroid.\n    var aa = a.r * a.r,\n        ba = b.r * b.r,\n        ca = c.r * c.r,\n        oa = aa + ba + ca,\n        ox = aa * a.x + ba * b.x + ca * c.x,\n        oy = aa * a.y + ba * b.y + ca * c.y,\n        cx, cy, i, j, k, sj, sk;\n\n    // Initialize the front-chain using the first three circles a, b and c.\n    a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n    a.next = c.previous = b;\n    b.next = a.previous = c;\n    c.next = b.previous = a;\n\n    // Attempt to place each remaining circle…\n    pack: for (i = 3; i < n; ++i) {\n      place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n      // If there are only three elements in the front-chain…\n      if ((k = a.previous) === (j = b.next)) {\n        // If the new circle intersects the third circle,\n        // rotate the front chain to try the next position.\n        if (intersects(j._, c._)) {\n          a = b, b = j, --i;\n          continue pack;\n        }\n      }\n\n      // Find the closest intersecting circle on the front-chain, if any.\n      else {\n        sj = j._.r, sk = k._.r;\n        do {\n          if (sj <= sk) {\n            if (intersects(j._, c._)) {\n              b = j, a.next = b, b.previous = a, --i;\n              continue pack;\n            }\n            j = j.next, sj += j._.r;\n          } else {\n            if (intersects(k._, c._)) {\n              a = k, a.next = b, b.previous = a, --i;\n              continue pack;\n            }\n            k = k.previous, sk += k._.r;\n          }\n        } while (j !== k.next);\n      }\n\n      // Success! Insert the new circle c between a and b.\n      c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n      // Update the weighted centroid.\n      oa += ca = c._.r * c._.r;\n      ox += ca * c._.x;\n      oy += ca * c._.y;\n\n      // Compute the new closest circle a to centroid.\n      aa = distance2(a._, cx = ox / oa, cy = oy / oa);\n      while ((c = c.next) !== b) {\n        if ((ca = distance2(c._, cx, cy)) < aa) {\n          a = c, aa = ca;\n        }\n      }\n      b = a.next;\n    }\n\n    // Compute the enclosing circle of the front chain.\n    a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n    // Translate the circles to put the enclosing circle around the origin.\n    for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n    return c.r;\n  }\n\n  function siblings(circles) {\n    packEnclose(circles);\n    return circles;\n  }\n\n  function optional(f) {\n    return f == null ? null : required(f);\n  }\n\n  function required(f) {\n    if (typeof f !== \"function\") throw new Error;\n    return f;\n  }\n\n  function constantZero() {\n    return 0;\n  }\n\n  function constant$5(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function defaultRadius(d) {\n    return Math.sqrt(d.value);\n  }\n\n  function index() {\n    var radius = null,\n        dx = 1,\n        dy = 1,\n        padding = constantZero;\n\n    function pack(root) {\n      root.x = dx / 2, root.y = dy / 2;\n      if (radius) {\n        root.eachBefore(radiusLeaf(radius))\n            .eachAfter(packChildren(padding, 0.5))\n            .eachBefore(translateChild(1));\n      } else {\n        root.eachBefore(radiusLeaf(defaultRadius))\n            .eachAfter(packChildren(constantZero, 1))\n            .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n            .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n      }\n      return root;\n    }\n\n    pack.radius = function(x) {\n      return arguments.length ? (radius = optional(x), pack) : radius;\n    };\n\n    pack.size = function(x) {\n      return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n    };\n\n    pack.padding = function(x) {\n      return arguments.length ? (padding = typeof x === \"function\" ? x : constant$5(+x), pack) : padding;\n    };\n\n    return pack;\n  }\n\n  function radiusLeaf(radius) {\n    return function(node) {\n      if (!node.children) {\n        node.r = Math.max(0, +radius(node) || 0);\n      }\n    };\n  }\n\n  function packChildren(padding, k) {\n    return function(node) {\n      if (children = node.children) {\n        var children,\n            i,\n            n = children.length,\n            r = padding(node) * k || 0,\n            e;\n\n        if (r) for (i = 0; i < n; ++i) children[i].r += r;\n        e = packEnclose(children);\n        if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n        node.r = e + r;\n      }\n    };\n  }\n\n  function translateChild(k) {\n    return function(node) {\n      var parent = node.parent;\n      node.r *= k;\n      if (parent) {\n        node.x = parent.x + k * node.x;\n        node.y = parent.y + k * node.y;\n      }\n    };\n  }\n\n  function roundNode(node) {\n    node.x0 = Math.round(node.x0);\n    node.y0 = Math.round(node.y0);\n    node.x1 = Math.round(node.x1);\n    node.y1 = Math.round(node.y1);\n  }\n\n  function treemapDice(parent, x0, y0, x1, y1) {\n    var nodes = parent.children,\n        node,\n        i = -1,\n        n = nodes.length,\n        k = parent.value && (x1 - x0) / parent.value;\n\n    while (++i < n) {\n      node = nodes[i], node.y0 = y0, node.y1 = y1;\n      node.x0 = x0, node.x1 = x0 += node.value * k;\n    }\n  }\n\n  function partition() {\n    var dx = 1,\n        dy = 1,\n        padding = 0,\n        round = false;\n\n    function partition(root) {\n      var n = root.height + 1;\n      root.x0 =\n      root.y0 = padding;\n      root.x1 = dx;\n      root.y1 = dy / n;\n      root.eachBefore(positionNode(dy, n));\n      if (round) root.eachBefore(roundNode);\n      return root;\n    }\n\n    function positionNode(dy, n) {\n      return function(node) {\n        if (node.children) {\n          treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n        }\n        var x0 = node.x0,\n            y0 = node.y0,\n            x1 = node.x1 - padding,\n            y1 = node.y1 - padding;\n        if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n        if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n        node.x0 = x0;\n        node.y0 = y0;\n        node.x1 = x1;\n        node.y1 = y1;\n      };\n    }\n\n    partition.round = function(x) {\n      return arguments.length ? (round = !!x, partition) : round;\n    };\n\n    partition.size = function(x) {\n      return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n    };\n\n    partition.padding = function(x) {\n      return arguments.length ? (padding = +x, partition) : padding;\n    };\n\n    return partition;\n  }\n\nvar   keyPrefix$1 = \"$\";\n  var preroot = {depth: -1};\n  var ambiguous = {};\n  function defaultId(d) {\n    return d.id;\n  }\n\n  function defaultParentId(d) {\n    return d.parentId;\n  }\n\n  function stratify() {\n    var id = defaultId,\n        parentId = defaultParentId;\n\n    function stratify(data) {\n      var d,\n          i,\n          n = data.length,\n          root,\n          parent,\n          node,\n          nodes = new Array(n),\n          nodeId,\n          nodeKey,\n          nodeByKey = {};\n\n      for (i = 0; i < n; ++i) {\n        d = data[i], node = nodes[i] = new Node(d);\n        if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n          nodeKey = keyPrefix$1 + (node.id = nodeId);\n          nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n        }\n      }\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i], nodeId = parentId(data[i], i, data);\n        if (nodeId == null || !(nodeId += \"\")) {\n          if (root) throw new Error(\"multiple roots\");\n          root = node;\n        } else {\n          parent = nodeByKey[keyPrefix$1 + nodeId];\n          if (!parent) throw new Error(\"missing: \" + nodeId);\n          if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n          if (parent.children) parent.children.push(node);\n          else parent.children = [node];\n          node.parent = parent;\n        }\n      }\n\n      if (!root) throw new Error(\"no root\");\n      root.parent = preroot;\n      root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n      root.parent = null;\n      if (n > 0) throw new Error(\"cycle\");\n\n      return root;\n    }\n\n    stratify.id = function(x) {\n      return arguments.length ? (id = required(x), stratify) : id;\n    };\n\n    stratify.parentId = function(x) {\n      return arguments.length ? (parentId = required(x), stratify) : parentId;\n    };\n\n    return stratify;\n  }\n\n  function defaultSeparation$1(a, b) {\n    return a.parent === b.parent ? 1 : 2;\n  }\n\n  // function radialSeparation(a, b) {\n  //   return (a.parent === b.parent ? 1 : 2) / a.depth;\n  // }\n\n  // This function is used to traverse the left contour of a subtree (or\n  // subforest). It returns the successor of v on this contour. This successor is\n  // either given by the leftmost child of v or by the thread of v. The function\n  // returns null if and only if v is on the highest level of its subtree.\n  function nextLeft(v) {\n    var children = v.children;\n    return children ? children[0] : v.t;\n  }\n\n  // This function works analogously to nextLeft.\n  function nextRight(v) {\n    var children = v.children;\n    return children ? children[children.length - 1] : v.t;\n  }\n\n  // Shifts the current subtree rooted at w+. This is done by increasing\n  // prelim(w+) and mod(w+) by shift.\n  function moveSubtree(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n\n  // All other shifts, applied to the smaller subtrees between w- and w+, are\n  // performed by this function. To prepare the shifts, we have to adjust\n  // change(w+), shift(w+), and change(w-).\n  function executeShifts(v) {\n    var shift = 0,\n        change = 0,\n        children = v.children,\n        i = children.length,\n        w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n\n  // If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n  // returns the specified (default) ancestor.\n  function nextAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n\n  function TreeNode(node, i) {\n    this._ = node;\n    this.parent = null;\n    this.children = null;\n    this.A = null; // default ancestor\n    this.a = this; // ancestor\n    this.z = 0; // prelim\n    this.m = 0; // mod\n    this.c = 0; // change\n    this.s = 0; // shift\n    this.t = null; // thread\n    this.i = i; // number\n  }\n\n  TreeNode.prototype = Object.create(Node.prototype);\n\n  function treeRoot(root) {\n    var tree = new TreeNode(root, 0),\n        node,\n        nodes = [tree],\n        child,\n        children,\n        i,\n        n;\n\n    while (node = nodes.pop()) {\n      if (children = node._.children) {\n        node.children = new Array(n = children.length);\n        for (i = n - 1; i >= 0; --i) {\n          nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n          child.parent = node;\n        }\n      }\n    }\n\n    (tree.parent = new TreeNode(null, 0)).children = [tree];\n    return tree;\n  }\n\n  // Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\n  function tree() {\n    var separation = defaultSeparation$1,\n        dx = 1,\n        dy = 1,\n        nodeSize = null;\n\n    function tree(root) {\n      var t = treeRoot(root);\n\n      // Compute the layout using Buchheim et al.’s algorithm.\n      t.eachAfter(firstWalk), t.parent.m = -t.z;\n      t.eachBefore(secondWalk);\n\n      // If a fixed node size is specified, scale x and y.\n      if (nodeSize) root.eachBefore(sizeNode);\n\n      // If a fixed tree size is specified, scale x and y based on the extent.\n      // Compute the left-most, right-most, and depth-most nodes for extents.\n      else {\n        var left = root,\n            right = root,\n            bottom = root;\n        root.eachBefore(function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var s = left === right ? 1 : separation(left, right) / 2,\n            tx = s - left.x,\n            kx = dx / (right.x + s + tx),\n            ky = dy / (bottom.depth || 1);\n        root.eachBefore(function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n\n      return root;\n    }\n\n    // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n    // applied recursively to the children of v, as well as the function\n    // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n    // node v is placed to the midpoint of its outermost children.\n    function firstWalk(v) {\n      var children = v.children,\n          siblings = v.parent.children,\n          w = v.i ? siblings[v.i - 1] : null;\n      if (children) {\n        executeShifts(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n\n    // Computes all real x-coordinates by summing up the modifiers recursively.\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n\n    // The core of the algorithm. Here, a new subtree is combined with the\n    // previous subtrees. Threads are used to traverse the inside and outside\n    // contours of the left and right subtree up to the highest common level. The\n    // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n    // superscript o means outside and i means inside, the subscript - means left\n    // subtree and + means right subtree. For summing up the modifiers along the\n    // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n    // nodes of the inside contours conflict, we compute the left one of the\n    // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n    // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n    // Finally, we add a new thread (if necessary).\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v,\n            vop = v,\n            vim = w,\n            vom = vip.parent.children[0],\n            sip = vip.m,\n            sop = vop.m,\n            sim = vim.m,\n            som = vom.m,\n            shift;\n        while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n          vom = nextLeft(vom);\n          vop = nextRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !nextRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !nextLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n\n    function sizeNode(node) {\n      node.x *= dx;\n      node.y = node.depth * dy;\n    }\n\n    tree.separation = function(x) {\n      return arguments.length ? (separation = x, tree) : separation;\n    };\n\n    tree.size = function(x) {\n      return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n    };\n\n    tree.nodeSize = function(x) {\n      return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n    };\n\n    return tree;\n  }\n\n  function treemapSlice(parent, x0, y0, x1, y1) {\n    var nodes = parent.children,\n        node,\n        i = -1,\n        n = nodes.length,\n        k = parent.value && (y1 - y0) / parent.value;\n\n    while (++i < n) {\n      node = nodes[i], node.x0 = x0, node.x1 = x1;\n      node.y0 = y0, node.y1 = y0 += node.value * k;\n    }\n  }\n\n  var phi = (1 + Math.sqrt(5)) / 2;\n\n  function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n    var rows = [],\n        nodes = parent.children,\n        row,\n        nodeValue,\n        i0 = 0,\n        i1,\n        n = nodes.length,\n        dx, dy,\n        value = parent.value,\n        sumValue,\n        minValue,\n        maxValue,\n        newRatio,\n        minRatio,\n        alpha,\n        beta;\n\n    while (i0 < n) {\n      dx = x1 - x0, dy = y1 - y0;\n      minValue = maxValue = sumValue = nodes[i0].value;\n      alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n      beta = sumValue * sumValue * alpha;\n      minRatio = Math.max(maxValue / beta, beta / minValue);\n\n      // Keep adding nodes while the aspect ratio maintains or improves.\n      for (i1 = i0 + 1; i1 < n; ++i1) {\n        sumValue += nodeValue = nodes[i1].value;\n        if (nodeValue < minValue) minValue = nodeValue;\n        if (nodeValue > maxValue) maxValue = nodeValue;\n        beta = sumValue * sumValue * alpha;\n        newRatio = Math.max(maxValue / beta, beta / minValue);\n        if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n        minRatio = newRatio;\n      }\n\n      // Position and record the row orientation.\n      rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n      if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n      else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n      value -= sumValue, i0 = i1;\n    }\n\n    return rows;\n  }\n\n  var squarify = (function custom(ratio) {\n\n    function squarify(parent, x0, y0, x1, y1) {\n      squarifyRatio(ratio, parent, x0, y0, x1, y1);\n    }\n\n    squarify.ratio = function(x) {\n      return custom((x = +x) > 1 ? x : 1);\n    };\n\n    return squarify;\n  })(phi);\n\n  function index$1() {\n    var tile = squarify,\n        round = false,\n        dx = 1,\n        dy = 1,\n        paddingStack = [0],\n        paddingInner = constantZero,\n        paddingTop = constantZero,\n        paddingRight = constantZero,\n        paddingBottom = constantZero,\n        paddingLeft = constantZero;\n\n    function treemap(root) {\n      root.x0 =\n      root.y0 = 0;\n      root.x1 = dx;\n      root.y1 = dy;\n      root.eachBefore(positionNode);\n      paddingStack = [0];\n      if (round) root.eachBefore(roundNode);\n      return root;\n    }\n\n    function positionNode(node) {\n      var p = paddingStack[node.depth],\n          x0 = node.x0 + p,\n          y0 = node.y0 + p,\n          x1 = node.x1 - p,\n          y1 = node.y1 - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n      if (node.children) {\n        p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n        x0 += paddingLeft(node) - p;\n        y0 += paddingTop(node) - p;\n        x1 -= paddingRight(node) - p;\n        y1 -= paddingBottom(node) - p;\n        if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n        if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n        tile(node, x0, y0, x1, y1);\n      }\n    }\n\n    treemap.round = function(x) {\n      return arguments.length ? (round = !!x, treemap) : round;\n    };\n\n    treemap.size = function(x) {\n      return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n    };\n\n    treemap.tile = function(x) {\n      return arguments.length ? (tile = required(x), treemap) : tile;\n    };\n\n    treemap.padding = function(x) {\n      return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n    };\n\n    treemap.paddingInner = function(x) {\n      return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$5(+x), treemap) : paddingInner;\n    };\n\n    treemap.paddingOuter = function(x) {\n      return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n    };\n\n    treemap.paddingTop = function(x) {\n      return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$5(+x), treemap) : paddingTop;\n    };\n\n    treemap.paddingRight = function(x) {\n      return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$5(+x), treemap) : paddingRight;\n    };\n\n    treemap.paddingBottom = function(x) {\n      return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$5(+x), treemap) : paddingBottom;\n    };\n\n    treemap.paddingLeft = function(x) {\n      return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$5(+x), treemap) : paddingLeft;\n    };\n\n    return treemap;\n  }\n\n  function binary(parent, x0, y0, x1, y1) {\n    var nodes = parent.children,\n        i, n = nodes.length,\n        sum, sums = new Array(n + 1);\n\n    for (sums[0] = sum = i = 0; i < n; ++i) {\n      sums[i + 1] = sum += nodes[i].value;\n    }\n\n    partition(0, n, parent.value, x0, y0, x1, y1);\n\n    function partition(i, j, value, x0, y0, x1, y1) {\n      if (i >= j - 1) {\n        var node = nodes[i];\n        node.x0 = x0, node.y0 = y0;\n        node.x1 = x1, node.y1 = y1;\n        return;\n      }\n\n      var valueOffset = sums[i],\n          valueTarget = (value / 2) + valueOffset,\n          k = i + 1,\n          hi = j - 1;\n\n      while (k < hi) {\n        var mid = k + hi >>> 1;\n        if (sums[mid] < valueTarget) k = mid + 1;\n        else hi = mid;\n      }\n\n      var valueLeft = sums[k] - valueOffset,\n          valueRight = value - valueLeft;\n\n      if ((y1 - y0) > (x1 - x0)) {\n        var yk = (y0 * valueRight + y1 * valueLeft) / value;\n        partition(i, k, valueLeft, x0, y0, x1, yk);\n        partition(k, j, valueRight, x0, yk, x1, y1);\n      } else {\n        var xk = (x0 * valueRight + x1 * valueLeft) / value;\n        partition(i, k, valueLeft, x0, y0, xk, y1);\n        partition(k, j, valueRight, xk, y0, x1, y1);\n      }\n    }\n  }\n\n  function sliceDice(parent, x0, y0, x1, y1) {\n    (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n  }\n\n  var resquarify = (function custom(ratio) {\n\n    function resquarify(parent, x0, y0, x1, y1) {\n      if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n        var rows,\n            row,\n            nodes,\n            i,\n            j = -1,\n            n,\n            m = rows.length,\n            value = parent.value;\n\n        while (++j < m) {\n          row = rows[j], nodes = row.children;\n          for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n          if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n          else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n          value -= row.value;\n        }\n      } else {\n        parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n        rows.ratio = ratio;\n      }\n    }\n\n    resquarify.ratio = function(x) {\n      return custom((x = +x) > 1 ? x : 1);\n    };\n\n    return resquarify;\n  })(phi);\n\n  function center$1(x, y) {\n    var nodes;\n\n    if (x == null) x = 0;\n    if (y == null) y = 0;\n\n    function force() {\n      var i,\n          n = nodes.length,\n          node,\n          sx = 0,\n          sy = 0;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i], sx += node.x, sy += node.y;\n      }\n\n      for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n        node = nodes[i], node.x -= sx, node.y -= sy;\n      }\n    }\n\n    force.initialize = function(_) {\n      nodes = _;\n    };\n\n    force.x = function(_) {\n      return arguments.length ? (x = +_, force) : x;\n    };\n\n    force.y = function(_) {\n      return arguments.length ? (y = +_, force) : y;\n    };\n\n    return force;\n  }\n\n  function constant$6(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function jiggle() {\n    return (Math.random() - 0.5) * 1e-6;\n  }\n\n  function x$1(d) {\n    return d.x + d.vx;\n  }\n\n  function y$1(d) {\n    return d.y + d.vy;\n  }\n\n  function collide(radius) {\n    var nodes,\n        radii,\n        strength = 1,\n        iterations = 1;\n\n    if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\n    function force() {\n      var i, n = nodes.length,\n          tree,\n          node,\n          xi,\n          yi,\n          ri,\n          ri2;\n\n      for (var k = 0; k < iterations; ++k) {\n        tree = quadtree(nodes, x$1, y$1).visitAfter(prepare);\n        for (i = 0; i < n; ++i) {\n          node = nodes[i];\n          ri = radii[i], ri2 = ri * ri;\n          xi = node.x + node.vx;\n          yi = node.y + node.vy;\n          tree.visit(apply);\n        }\n      }\n\n      function apply(quad, x0, y0, x1, y1) {\n        var data = quad.data, rj = quad.r, r = ri + rj;\n        if (data) {\n          if (data.index > i) {\n            var x = xi - data.x - data.vx,\n                y = yi - data.y - data.vy,\n                l = x * x + y * y;\n            if (l < r * r) {\n              if (x === 0) x = jiggle(), l += x * x;\n              if (y === 0) y = jiggle(), l += y * y;\n              l = (r - (l = Math.sqrt(l))) / l * strength;\n              node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n              node.vy += (y *= l) * r;\n              data.vx -= x * (r = 1 - r);\n              data.vy -= y * r;\n            }\n          }\n          return;\n        }\n        return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n      }\n    }\n\n    function prepare(quad) {\n      if (quad.data) return quad.r = radii[quad.data.index];\n      for (var i = quad.r = 0; i < 4; ++i) {\n        if (quad[i] && quad[i].r > quad.r) {\n          quad.r = quad[i].r;\n        }\n      }\n    }\n\n    force.initialize = function(_) {\n      var i, n = (nodes = _).length; radii = new Array(n);\n      for (i = 0; i < n; ++i) radii[i] = +radius(nodes[i], i, nodes);\n    };\n\n    force.iterations = function(_) {\n      return arguments.length ? (iterations = +_, force) : iterations;\n    };\n\n    force.strength = function(_) {\n      return arguments.length ? (strength = +_, force) : strength;\n    };\n\n    force.radius = function(_) {\n      return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), force) : radius;\n    };\n\n    return force;\n  }\n\n  function index$2(d, i) {\n    return i;\n  }\n\n  function link(links) {\n    var id = index$2,\n        strength = defaultStrength,\n        strengths,\n        distance = constant$6(30),\n        distances,\n        nodes,\n        count,\n        bias,\n        iterations = 1;\n\n    if (links == null) links = [];\n\n    function defaultStrength(link) {\n      return 1 / Math.min(count[link.source.index], count[link.target.index]);\n    }\n\n    function force(alpha) {\n      for (var k = 0, n = links.length; k < iterations; ++k) {\n        for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n          link = links[i], source = link.source, target = link.target;\n          x = target.x + target.vx - source.x - source.vx || jiggle();\n          y = target.y + target.vy - source.y - source.vy || jiggle();\n          l = Math.sqrt(x * x + y * y);\n          l = (l - distances[i]) / l * alpha * strengths[i];\n          x *= l, y *= l;\n          target.vx -= x * (b = bias[i]);\n          target.vy -= y * b;\n          source.vx += x * (b = 1 - b);\n          source.vy += y * b;\n        }\n      }\n    }\n\n    function initialize() {\n      if (!nodes) return;\n\n      var i,\n          n = nodes.length,\n          m = links.length,\n          nodeById = map$1(nodes, id),\n          link;\n\n      for (i = 0, count = new Array(n); i < n; ++i) {\n        count[i] = 0;\n      }\n\n      for (i = 0; i < m; ++i) {\n        link = links[i], link.index = i;\n        if (typeof link.source !== \"object\") link.source = nodeById.get(link.source);\n        if (typeof link.target !== \"object\") link.target = nodeById.get(link.target);\n        ++count[link.source.index], ++count[link.target.index];\n      }\n\n      for (i = 0, bias = new Array(m); i < m; ++i) {\n        link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n      }\n\n      strengths = new Array(m), initializeStrength();\n      distances = new Array(m), initializeDistance();\n    }\n\n    function initializeStrength() {\n      if (!nodes) return;\n\n      for (var i = 0, n = links.length; i < n; ++i) {\n        strengths[i] = +strength(links[i], i, links);\n      }\n    }\n\n    function initializeDistance() {\n      if (!nodes) return;\n\n      for (var i = 0, n = links.length; i < n; ++i) {\n        distances[i] = +distance(links[i], i, links);\n      }\n    }\n\n    force.initialize = function(_) {\n      nodes = _;\n      initialize();\n    };\n\n    force.links = function(_) {\n      return arguments.length ? (links = _, initialize(), force) : links;\n    };\n\n    force.id = function(_) {\n      return arguments.length ? (id = _, force) : id;\n    };\n\n    force.iterations = function(_) {\n      return arguments.length ? (iterations = +_, force) : iterations;\n    };\n\n    force.strength = function(_) {\n      return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n    };\n\n    force.distance = function(_) {\n      return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n    };\n\n    return force;\n  }\n\n  function x$2(d) {\n    return d.x;\n  }\n\n  function y$2(d) {\n    return d.y;\n  }\n\n  var initialRadius = 10;\n  var initialAngle = Math.PI * (3 - Math.sqrt(5));\n  function simulation(nodes) {\n    var simulation,\n        alpha = 1,\n        alphaMin = 0.001,\n        alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n        alphaTarget = 0,\n        velocityDecay = 0.6,\n        forces = map$1(),\n        stepper = timer(step),\n        event = dispatch(\"tick\", \"end\");\n\n    if (nodes == null) nodes = [];\n\n    function step() {\n      tick();\n      event.call(\"tick\", simulation);\n      if (alpha < alphaMin) {\n        stepper.stop();\n        event.call(\"end\", simulation);\n      }\n    }\n\n    function tick() {\n      var i, n = nodes.length, node;\n\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.each(function(force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    function initializeNodes() {\n      for (var i = 0, n = nodes.length, node; i < n; ++i) {\n        node = nodes[i], node.index = i;\n        if (isNaN(node.x) || isNaN(node.y)) {\n          var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n          node.x = radius * Math.cos(angle);\n          node.y = radius * Math.sin(angle);\n        }\n        if (isNaN(node.vx) || isNaN(node.vy)) {\n          node.vx = node.vy = 0;\n        }\n      }\n    }\n\n    function initializeForce(force) {\n      if (force.initialize) force.initialize(nodes);\n      return force;\n    }\n\n    initializeNodes();\n\n    return simulation = {\n      tick: tick,\n\n      restart: function() {\n        return stepper.restart(step), simulation;\n      },\n\n      stop: function() {\n        return stepper.stop(), simulation;\n      },\n\n      nodes: function(_) {\n        return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n      },\n\n      alpha: function(_) {\n        return arguments.length ? (alpha = +_, simulation) : alpha;\n      },\n\n      alphaMin: function(_) {\n        return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n      },\n\n      alphaDecay: function(_) {\n        return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n      },\n\n      alphaTarget: function(_) {\n        return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n      },\n\n      velocityDecay: function(_) {\n        return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n      },\n\n      force: function(name, _) {\n        return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n      },\n\n      find: function(x, y, radius) {\n        var i = 0,\n            n = nodes.length,\n            dx,\n            dy,\n            d2,\n            node,\n            closest;\n\n        if (radius == null) radius = Infinity;\n        else radius *= radius;\n\n        for (i = 0; i < n; ++i) {\n          node = nodes[i];\n          dx = x - node.x;\n          dy = y - node.y;\n          d2 = dx * dx + dy * dy;\n          if (d2 < radius) closest = node, radius = d2;\n        }\n\n        return closest;\n      },\n\n      on: function(name, _) {\n        return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n      }\n    };\n  }\n\n  function manyBody() {\n    var nodes,\n        node,\n        alpha,\n        strength = constant$6(-30),\n        strengths,\n        distanceMin2 = 1,\n        distanceMax2 = Infinity,\n        theta2 = 0.81;\n\n    function force(_) {\n      var i, n = nodes.length, tree = quadtree(nodes, x$2, y$2).visitAfter(accumulate);\n      for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n    }\n\n    function initialize() {\n      if (!nodes) return;\n      var i, n = nodes.length;\n      strengths = new Array(n);\n      for (i = 0; i < n; ++i) strengths[i] = +strength(nodes[i], i, nodes);\n    }\n\n    function accumulate(quad) {\n      var strength = 0, q, c, x, y, i;\n\n      // For internal nodes, accumulate forces from child quadrants.\n      if (quad.length) {\n        for (x = y = i = 0; i < 4; ++i) {\n          if ((q = quad[i]) && (c = q.value)) {\n            strength += c, x += c * q.x, y += c * q.y;\n          }\n        }\n        quad.x = x / strength;\n        quad.y = y / strength;\n      }\n\n      // For leaf nodes, accumulate forces from coincident quadrants.\n      else {\n        q = quad;\n        q.x = q.data.x;\n        q.y = q.data.y;\n        do strength += strengths[q.data.index];\n        while (q = q.next);\n      }\n\n      quad.value = strength;\n    }\n\n    function apply(quad, x1, _, x2) {\n      if (!quad.value) return true;\n\n      var x = quad.x - node.x,\n          y = quad.y - node.y,\n          w = x2 - x1,\n          l = x * x + y * y;\n\n      // Apply the Barnes-Hut approximation if possible.\n      // Limit forces for very close nodes; randomize direction if coincident.\n      if (w * w / theta2 < l) {\n        if (l < distanceMax2) {\n          if (x === 0) x = jiggle(), l += x * x;\n          if (y === 0) y = jiggle(), l += y * y;\n          if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n          node.vx += x * quad.value * alpha / l;\n          node.vy += y * quad.value * alpha / l;\n        }\n        return true;\n      }\n\n      // Otherwise, process points directly.\n      else if (quad.length || l >= distanceMax2) return;\n\n      // Limit forces for very close nodes; randomize direction if coincident.\n      if (quad.data !== node || quad.next) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n      }\n\n      do if (quad.data !== node) {\n        w = strengths[quad.data.index] * alpha / l;\n        node.vx += x * w;\n        node.vy += y * w;\n      } while (quad = quad.next);\n    }\n\n    force.initialize = function(_) {\n      nodes = _;\n      initialize();\n    };\n\n    force.strength = function(_) {\n      return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n    };\n\n    force.distanceMin = function(_) {\n      return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n    };\n\n    force.distanceMax = function(_) {\n      return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n    };\n\n    force.theta = function(_) {\n      return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n    };\n\n    return force;\n  }\n\n  function x$3(x) {\n    var strength = constant$6(0.1),\n        nodes,\n        strengths,\n        xz;\n\n    if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\n    function force(alpha) {\n      for (var i = 0, n = nodes.length, node; i < n; ++i) {\n        node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n      }\n    }\n\n    function initialize() {\n      if (!nodes) return;\n      var i, n = nodes.length;\n      strengths = new Array(n);\n      xz = new Array(n);\n      for (i = 0; i < n; ++i) {\n        strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n      }\n    }\n\n    force.initialize = function(_) {\n      nodes = _;\n      initialize();\n    };\n\n    force.strength = function(_) {\n      return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n    };\n\n    force.x = function(_) {\n      return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n    };\n\n    return force;\n  }\n\n  function y$3(y) {\n    var strength = constant$6(0.1),\n        nodes,\n        strengths,\n        yz;\n\n    if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\n    function force(alpha) {\n      for (var i = 0, n = nodes.length, node; i < n; ++i) {\n        node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n      }\n    }\n\n    function initialize() {\n      if (!nodes) return;\n      var i, n = nodes.length;\n      strengths = new Array(n);\n      yz = new Array(n);\n      for (i = 0; i < n; ++i) {\n        strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n      }\n    }\n\n    force.initialize = function(_) {\n      nodes = _;\n      initialize();\n    };\n\n    force.strength = function(_) {\n      return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n    };\n\n    force.y = function(_) {\n      return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n    };\n\n    return force;\n  }\n\n  function nopropagation() {\n    exports.event.stopImmediatePropagation();\n  }\n\n  function noevent() {\n    exports.event.preventDefault();\n    exports.event.stopImmediatePropagation();\n  }\n\n  function dragDisable(view) {\n    var root = view.document.documentElement,\n        selection = select(view).on(\"dragstart.drag\", noevent, true);\n    if (\"onselectstart\" in root) {\n      selection.on(\"selectstart.drag\", noevent, true);\n    } else {\n      root.__noselect = root.style.MozUserSelect;\n      root.style.MozUserSelect = \"none\";\n    }\n  }\n\n  function dragEnable(view, noclick) {\n    var root = view.document.documentElement,\n        selection = select(view).on(\"dragstart.drag\", null);\n    if (noclick) {\n      selection.on(\"click.drag\", noevent, true);\n      setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n    }\n    if (\"onselectstart\" in root) {\n      selection.on(\"selectstart.drag\", null);\n    } else {\n      root.style.MozUserSelect = root.__noselect;\n      delete root.__noselect;\n    }\n  }\n\n  function constant$7(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n    this.target = target;\n    this.type = type;\n    this.subject = subject;\n    this.identifier = id;\n    this.active = active;\n    this.x = x;\n    this.y = y;\n    this.dx = dx;\n    this.dy = dy;\n    this._ = dispatch;\n  }\n\n  DragEvent.prototype.on = function() {\n    var value = this._.on.apply(this._, arguments);\n    return value === this._ ? this : value;\n  };\n\n  // Ignore right-click, since that should open the context menu.\n  function defaultFilter() {\n    return !exports.event.button;\n  }\n\n  function defaultContainer() {\n    return this.parentNode;\n  }\n\n  function defaultSubject(d) {\n    return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n  }\n\n  function drag() {\n    var filter = defaultFilter,\n        container = defaultContainer,\n        subject = defaultSubject,\n        gestures = {},\n        listeners = dispatch(\"start\", \"drag\", \"end\"),\n        active = 0,\n        mousemoving,\n        touchending;\n\n    function drag(selection) {\n      selection\n          .on(\"mousedown.drag\", mousedowned)\n          .on(\"touchstart.drag\", touchstarted)\n          .on(\"touchmove.drag\", touchmoved)\n          .on(\"touchend.drag touchcancel.drag\", touchended)\n          .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n    }\n\n    function mousedowned() {\n      if (touchending || !filter.apply(this, arguments)) return;\n      var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n      if (!gesture) return;\n      select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n      dragDisable(exports.event.view);\n      nopropagation();\n      mousemoving = false;\n      gesture(\"start\");\n    }\n\n    function mousemoved() {\n      noevent();\n      mousemoving = true;\n      gestures.mouse(\"drag\");\n    }\n\n    function mouseupped() {\n      select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n      dragEnable(exports.event.view, mousemoving);\n      noevent();\n      gestures.mouse(\"end\");\n    }\n\n    function touchstarted() {\n      if (!filter.apply(this, arguments)) return;\n      var touches = exports.event.changedTouches,\n          c = container.apply(this, arguments),\n          n = touches.length, i, gesture;\n\n      for (i = 0; i < n; ++i) {\n        if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n          nopropagation();\n          gesture(\"start\");\n        }\n      }\n    }\n\n    function touchmoved() {\n      var touches = exports.event.changedTouches,\n          n = touches.length, i, gesture;\n\n      for (i = 0; i < n; ++i) {\n        if (gesture = gestures[touches[i].identifier]) {\n          noevent();\n          gesture(\"drag\");\n        }\n      }\n    }\n\n    function touchended() {\n      var touches = exports.event.changedTouches,\n          n = touches.length, i, gesture;\n\n      if (touchending) clearTimeout(touchending);\n      touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n      for (i = 0; i < n; ++i) {\n        if (gesture = gestures[touches[i].identifier]) {\n          nopropagation();\n          gesture(\"end\");\n        }\n      }\n    }\n\n    function beforestart(id, container, point, that, args) {\n      var p = point(container, id), s, dx, dy,\n          sublisteners = listeners.copy();\n\n      if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n        if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n        dx = s.x - p[0] || 0;\n        dy = s.y - p[1] || 0;\n        return true;\n      })) return;\n\n      return function gesture(type) {\n        var p0 = p, n;\n        switch (type) {\n          case \"start\": gestures[id] = gesture, n = active++; break;\n          case \"end\": delete gestures[id], --active; // nobreak\n          case \"drag\": p = point(container, id), n = active; break;\n        }\n        customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n      };\n    }\n\n    drag.filter = function(_) {\n      return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$7(!!_), drag) : filter;\n    };\n\n    drag.container = function(_) {\n      return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$7(_), drag) : container;\n    };\n\n    drag.subject = function(_) {\n      return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$7(_), drag) : subject;\n    };\n\n    drag.on = function() {\n      var value = listeners.on.apply(listeners, arguments);\n      return value === listeners ? drag : value;\n    };\n\n    return drag;\n  }\n\n  function constant$8(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function x$4(d) {\n    return d[0];\n  }\n\n  function y$4(d) {\n    return d[1];\n  }\n\n  function RedBlackTree() {\n    this._ = null; // root node\n  }\n\n  function RedBlackNode(node) {\n    node.U = // parent node\n    node.C = // color - true for red, false for black\n    node.L = // left node\n    node.R = // right node\n    node.P = // previous node\n    node.N = null; // next node\n  }\n\n  RedBlackTree.prototype = {\n    constructor: RedBlackTree,\n\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = RedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              RedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            RedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              RedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            RedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n\n      var parent = node.U,\n          sibling,\n          left = node.L,\n          right = node.R,\n          next,\n          red;\n\n      if (!left) next = right;\n      else if (!right) next = left;\n      else next = RedBlackFirst(right);\n\n      if (parent) {\n        if (parent.L === node) parent.L = next;\n        else parent.R = next;\n      } else {\n        this._ = next;\n      }\n\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) { node.C = false; return; }\n\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            RedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if ((sibling.L && sibling.L.C)\n              || (sibling.R && sibling.R.C)) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              RedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            RedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            RedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              RedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            RedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n\n      if (node) node.C = false;\n    }\n  };\n\n  function RedBlackRotateLeft(tree, node) {\n    var p = node,\n        q = node.R,\n        parent = p.U;\n\n    if (parent) {\n      if (parent.L === p) parent.L = q;\n      else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n\n  function RedBlackRotateRight(tree, node) {\n    var p = node,\n        q = node.L,\n        parent = p.U;\n\n    if (parent) {\n      if (parent.L === p) parent.L = q;\n      else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n\n  function RedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n\n  function createEdge(left, right, v0, v1) {\n    var edge = [null, null],\n        index = edges.push(edge) - 1;\n    edge.left = left;\n    edge.right = right;\n    if (v0) setEdgeEnd(edge, left, right, v0);\n    if (v1) setEdgeEnd(edge, right, left, v1);\n    cells[left.index].halfedges.push(index);\n    cells[right.index].halfedges.push(index);\n    return edge;\n  }\n\n  function createBorderEdge(left, v0, v1) {\n    var edge = [v0, v1];\n    edge.left = left;\n    return edge;\n  }\n\n  function setEdgeEnd(edge, left, right, vertex) {\n    if (!edge[0] && !edge[1]) {\n      edge[0] = vertex;\n      edge.left = left;\n      edge.right = right;\n    } else if (edge.left === right) {\n      edge[1] = vertex;\n    } else {\n      edge[0] = vertex;\n    }\n  }\n\n  // Liang–Barsky line clipping.\n  function clipEdge(edge, x0, y0, x1, y1) {\n    var a = edge[0],\n        b = edge[1],\n        ax = a[0],\n        ay = a[1],\n        bx = b[0],\n        by = b[1],\n        t0 = 0,\n        t1 = 1,\n        dx = bx - ax,\n        dy = by - ay,\n        r;\n\n    r = x0 - ax;\n    if (!dx && r > 0) return;\n    r /= dx;\n    if (dx < 0) {\n      if (r < t0) return;\n      if (r < t1) t1 = r;\n    } else if (dx > 0) {\n      if (r > t1) return;\n      if (r > t0) t0 = r;\n    }\n\n    r = x1 - ax;\n    if (!dx && r < 0) return;\n    r /= dx;\n    if (dx < 0) {\n      if (r > t1) return;\n      if (r > t0) t0 = r;\n    } else if (dx > 0) {\n      if (r < t0) return;\n      if (r < t1) t1 = r;\n    }\n\n    r = y0 - ay;\n    if (!dy && r > 0) return;\n    r /= dy;\n    if (dy < 0) {\n      if (r < t0) return;\n      if (r < t1) t1 = r;\n    } else if (dy > 0) {\n      if (r > t1) return;\n      if (r > t0) t0 = r;\n    }\n\n    r = y1 - ay;\n    if (!dy && r < 0) return;\n    r /= dy;\n    if (dy < 0) {\n      if (r > t1) return;\n      if (r > t0) t0 = r;\n    } else if (dy > 0) {\n      if (r < t0) return;\n      if (r < t1) t1 = r;\n    }\n\n    if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n    if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n    if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n    return true;\n  }\n\n  function connectEdge(edge, x0, y0, x1, y1) {\n    var v1 = edge[1];\n    if (v1) return true;\n\n    var v0 = edge[0],\n        left = edge.left,\n        right = edge.right,\n        lx = left[0],\n        ly = left[1],\n        rx = right[0],\n        ry = right[1],\n        fx = (lx + rx) / 2,\n        fy = (ly + ry) / 2,\n        fm,\n        fb;\n\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!v0) v0 = [fx, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [fx, y1];\n      } else {\n        if (!v0) v0 = [fx, y1];\n        else if (v0[1] < y0) return;\n        v1 = [fx, y0];\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!v0) v0 = [(y0 - fb) / fm, y0];\n          else if (v0[1] >= y1) return;\n          v1 = [(y1 - fb) / fm, y1];\n        } else {\n          if (!v0) v0 = [(y1 - fb) / fm, y1];\n          else if (v0[1] < y0) return;\n          v1 = [(y0 - fb) / fm, y0];\n        }\n      } else {\n        if (ly < ry) {\n          if (!v0) v0 = [x0, fm * x0 + fb];\n          else if (v0[0] >= x1) return;\n          v1 = [x1, fm * x1 + fb];\n        } else {\n          if (!v0) v0 = [x1, fm * x1 + fb];\n          else if (v0[0] < x0) return;\n          v1 = [x0, fm * x0 + fb];\n        }\n      }\n    }\n\n    edge[0] = v0;\n    edge[1] = v1;\n    return true;\n  }\n\n  function clipEdges(x0, y0, x1, y1) {\n    var i = edges.length,\n        edge;\n\n    while (i--) {\n      if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n          || !clipEdge(edge, x0, y0, x1, y1)\n          || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$3\n              || Math.abs(edge[0][1] - edge[1][1]) > epsilon$3)) {\n        delete edges[i];\n      }\n    }\n  }\n\n  function createCell(site) {\n    return cells[site.index] = {\n      site: site,\n      halfedges: []\n    };\n  }\n\n  function cellHalfedgeAngle(cell, edge) {\n    var site = cell.site,\n        va = edge.left,\n        vb = edge.right;\n    if (site === vb) vb = va, va = site;\n    if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n    if (site === va) va = edge[1], vb = edge[0];\n    else va = edge[0], vb = edge[1];\n    return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n  }\n\n  function cellHalfedgeStart(cell, edge) {\n    return edge[+(edge.left !== cell.site)];\n  }\n\n  function cellHalfedgeEnd(cell, edge) {\n    return edge[+(edge.left === cell.site)];\n  }\n\n  function sortCellHalfedges() {\n    for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n      if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n        var index = new Array(m),\n            array = new Array(m);\n        for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n        index.sort(function(i, j) { return array[j] - array[i]; });\n        for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n        for (j = 0; j < m; ++j) halfedges[j] = array[j];\n      }\n    }\n  }\n\n  function clipCells(x0, y0, x1, y1) {\n    var nCells = cells.length,\n        iCell,\n        cell,\n        site,\n        iHalfedge,\n        halfedges,\n        nHalfedges,\n        start,\n        startX,\n        startY,\n        end,\n        endX,\n        endY,\n        cover = true;\n\n    for (iCell = 0; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        halfedges = cell.halfedges;\n        iHalfedge = halfedges.length;\n\n        // Remove any dangling clipped edges.\n        while (iHalfedge--) {\n          if (!edges[halfedges[iHalfedge]]) {\n            halfedges.splice(iHalfedge, 1);\n          }\n        }\n\n        // Insert any border edges as necessary.\n        iHalfedge = 0, nHalfedges = halfedges.length;\n        while (iHalfedge < nHalfedges) {\n          end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n          start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n          if (Math.abs(endX - startX) > epsilon$3 || Math.abs(endY - startY) > epsilon$3) {\n            halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n                Math.abs(endX - x0) < epsilon$3 && y1 - endY > epsilon$3 ? [x0, Math.abs(startX - x0) < epsilon$3 ? startY : y1]\n                : Math.abs(endY - y1) < epsilon$3 && x1 - endX > epsilon$3 ? [Math.abs(startY - y1) < epsilon$3 ? startX : x1, y1]\n                : Math.abs(endX - x1) < epsilon$3 && endY - y0 > epsilon$3 ? [x1, Math.abs(startX - x1) < epsilon$3 ? startY : y0]\n                : Math.abs(endY - y0) < epsilon$3 && endX - x0 > epsilon$3 ? [Math.abs(startY - y0) < epsilon$3 ? startX : x0, y0]\n                : null)) - 1);\n            ++nHalfedges;\n          }\n        }\n\n        if (nHalfedges) cover = false;\n      }\n    }\n\n    // If there weren’t any edges, have the closest site cover the extent.\n    // It doesn’t matter which corner of the extent we measure!\n    if (cover) {\n      var dx, dy, d2, dc = Infinity;\n\n      for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n        if (cell = cells[iCell]) {\n          site = cell.site;\n          dx = site[0] - x0;\n          dy = site[1] - y0;\n          d2 = dx * dx + dy * dy;\n          if (d2 < dc) dc = d2, cover = cell;\n        }\n      }\n\n      if (cover) {\n        var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n        cover.halfedges.push(\n          edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n          edges.push(createBorderEdge(site, v01, v11)) - 1,\n          edges.push(createBorderEdge(site, v11, v10)) - 1,\n          edges.push(createBorderEdge(site, v10, v00)) - 1\n        );\n      }\n    }\n\n    // Lastly delete any cells with no edges; these were entirely clipped.\n    for (iCell = 0; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        if (!cell.halfedges.length) {\n          delete cells[iCell];\n        }\n      }\n    }\n  }\n\n  var circlePool = [];\n\n  var firstCircle;\n\n  function Circle() {\n    RedBlackNode(this);\n    this.x =\n    this.y =\n    this.arc =\n    this.site =\n    this.cy = null;\n  }\n\n  function attachCircle(arc) {\n    var lArc = arc.P,\n        rArc = arc.N;\n\n    if (!lArc || !rArc) return;\n\n    var lSite = lArc.site,\n        cSite = arc.site,\n        rSite = rArc.site;\n\n    if (lSite === rSite) return;\n\n    var bx = cSite[0],\n        by = cSite[1],\n        ax = lSite[0] - bx,\n        ay = lSite[1] - by,\n        cx = rSite[0] - bx,\n        cy = rSite[1] - by;\n\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -epsilon2$1) return;\n\n    var ha = ax * ax + ay * ay,\n        hc = cx * cx + cy * cy,\n        x = (cy * ha - ay * hc) / d,\n        y = (ax * hc - cx * ha) / d;\n\n    var circle = circlePool.pop() || new Circle;\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n    arc.circle = circle;\n\n    var before = null,\n        node = circles._;\n\n    while (node) {\n      if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n        if (node.L) node = node.L;\n        else { before = node.P; break; }\n      } else {\n        if (node.R) node = node.R;\n        else { before = node; break; }\n      }\n    }\n\n    circles.insert(before, circle);\n    if (!before) firstCircle = circle;\n  }\n\n  function detachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) firstCircle = circle.N;\n      circles.remove(circle);\n      circlePool.push(circle);\n      RedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n\n  var beachPool = [];\n\n  function Beach() {\n    RedBlackNode(this);\n    this.edge =\n    this.site =\n    this.circle = null;\n  }\n\n  function createBeach(site) {\n    var beach = beachPool.pop() || new Beach;\n    beach.site = site;\n    return beach;\n  }\n\n  function detachBeach(beach) {\n    detachCircle(beach);\n    beaches.remove(beach);\n    beachPool.push(beach);\n    RedBlackNode(beach);\n  }\n\n  function removeBeach(beach) {\n    var circle = beach.circle,\n        x = circle.x,\n        y = circle.cy,\n        vertex = [x, y],\n        previous = beach.P,\n        next = beach.N,\n        disappearing = [beach];\n\n    detachBeach(beach);\n\n    var lArc = previous;\n    while (lArc.circle\n        && Math.abs(x - lArc.circle.x) < epsilon$3\n        && Math.abs(y - lArc.circle.cy) < epsilon$3) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      detachBeach(lArc);\n      lArc = previous;\n    }\n\n    disappearing.unshift(lArc);\n    detachCircle(lArc);\n\n    var rArc = next;\n    while (rArc.circle\n        && Math.abs(x - rArc.circle.x) < epsilon$3\n        && Math.abs(y - rArc.circle.cy) < epsilon$3) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      detachBeach(rArc);\n      rArc = next;\n    }\n\n    disappearing.push(rArc);\n    detachCircle(rArc);\n\n    var nArcs = disappearing.length,\n        iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n    attachCircle(lArc);\n    attachCircle(rArc);\n  }\n\n  function addBeach(site) {\n    var x = site[0],\n        directrix = site[1],\n        lArc,\n        rArc,\n        dxl,\n        dxr,\n        node = beaches._;\n\n    while (node) {\n      dxl = leftBreakPoint(node, directrix) - x;\n      if (dxl > epsilon$3) node = node.L; else {\n        dxr = x - rightBreakPoint(node, directrix);\n        if (dxr > epsilon$3) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -epsilon$3) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -epsilon$3) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n\n    createCell(site);\n    var newArc = createBeach(site);\n    beaches.insert(lArc, newArc);\n\n    if (!lArc && !rArc) return;\n\n    if (lArc === rArc) {\n      detachCircle(lArc);\n      rArc = createBeach(lArc.site);\n      beaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n      attachCircle(lArc);\n      attachCircle(rArc);\n      return;\n    }\n\n    if (!rArc) { // && lArc\n      newArc.edge = createEdge(lArc.site, newArc.site);\n      return;\n    }\n\n    // else lArc !== rArc\n    detachCircle(lArc);\n    detachCircle(rArc);\n\n    var lSite = lArc.site,\n        ax = lSite[0],\n        ay = lSite[1],\n        bx = site[0] - ax,\n        by = site[1] - ay,\n        rSite = rArc.site,\n        cx = rSite[0] - ax,\n        cy = rSite[1] - ay,\n        d = 2 * (bx * cy - by * cx),\n        hb = bx * bx + by * by,\n        hc = cx * cx + cy * cy,\n        vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n    setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = createEdge(lSite, site, null, vertex);\n    rArc.edge = createEdge(site, rSite, null, vertex);\n    attachCircle(lArc);\n    attachCircle(rArc);\n  }\n\n  function leftBreakPoint(arc, directrix) {\n    var site = arc.site,\n        rfocx = site[0],\n        rfocy = site[1],\n        pby2 = rfocy - directrix;\n\n    if (!pby2) return rfocx;\n\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n\n    site = lArc.site;\n    var lfocx = site[0],\n        lfocy = site[1],\n        plby2 = lfocy - directrix;\n\n    if (!plby2) return lfocx;\n\n    var hl = lfocx - rfocx,\n        aby2 = 1 / pby2 - 1 / plby2,\n        b = hl / plby2;\n\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n    return (rfocx + lfocx) / 2;\n  }\n\n  function rightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return leftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site[1] === directrix ? site[0] : Infinity;\n  }\n\n  var epsilon$3 = 1e-6;\n  var epsilon2$1 = 1e-12;\n  var beaches;\n  var cells;\n  var circles;\n  var edges;\n\n  function triangleArea(a, b, c) {\n    return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n  }\n\n  function lexicographic(a, b) {\n    return b[1] - a[1]\n        || b[0] - a[0];\n  }\n\n  function Diagram(sites, extent) {\n    var site = sites.sort(lexicographic).pop(),\n        x,\n        y,\n        circle;\n\n    edges = [];\n    cells = new Array(sites.length);\n    beaches = new RedBlackTree;\n    circles = new RedBlackTree;\n\n    while (true) {\n      circle = firstCircle;\n      if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n        if (site[0] !== x || site[1] !== y) {\n          addBeach(site);\n          x = site[0], y = site[1];\n        }\n        site = sites.pop();\n      } else if (circle) {\n        removeBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n\n    sortCellHalfedges();\n\n    if (extent) {\n      var x0 = +extent[0][0],\n          y0 = +extent[0][1],\n          x1 = +extent[1][0],\n          y1 = +extent[1][1];\n      clipEdges(x0, y0, x1, y1);\n      clipCells(x0, y0, x1, y1);\n    }\n\n    this.edges = edges;\n    this.cells = cells;\n\n    beaches =\n    circles =\n    edges =\n    cells = null;\n  }\n\n  Diagram.prototype = {\n    constructor: Diagram,\n\n    polygons: function() {\n      var edges = this.edges;\n\n      return this.cells.map(function(cell) {\n        var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n        polygon.data = cell.site.data;\n        return polygon;\n      });\n    },\n\n    triangles: function() {\n      var triangles = [],\n          edges = this.edges;\n\n      this.cells.forEach(function(cell, i) {\n        var site = cell.site,\n            halfedges = cell.halfedges,\n            j = -1,\n            m = halfedges.length,\n            s0,\n            e1 = edges[halfedges[m - 1]],\n            s1 = e1.left === site ? e1.right : e1.left;\n\n        while (++j < m) {\n          s0 = s1;\n          e1 = edges[halfedges[j]];\n          s1 = e1.left === site ? e1.right : e1.left;\n          if (i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n            triangles.push([site.data, s0.data, s1.data]);\n          }\n        }\n      });\n\n      return triangles;\n    },\n\n    links: function() {\n      return this.edges.filter(function(edge) {\n        return edge.right;\n      }).map(function(edge) {\n        return {\n          source: edge.left.data,\n          target: edge.right.data\n        };\n      });\n    }\n  }\n\n  function voronoi() {\n    var x = x$4,\n        y = y$4,\n        extent = null;\n\n    function voronoi(data) {\n      return new Diagram(data.map(function(d, i) {\n        var s = [Math.round(x(d, i, data) / epsilon$3) * epsilon$3, Math.round(y(d, i, data) / epsilon$3) * epsilon$3];\n        s.index = i;\n        s.data = d;\n        return s;\n      }), extent);\n    }\n\n    voronoi.polygons = function(data) {\n      return voronoi(data).polygons();\n    };\n\n    voronoi.links = function(data) {\n      return voronoi(data).links();\n    };\n\n    voronoi.triangles = function(data) {\n      return voronoi(data).triangles();\n    };\n\n    voronoi.x = function(_) {\n      return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$8(+_), voronoi) : x;\n    };\n\n    voronoi.y = function(_) {\n      return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$8(+_), voronoi) : y;\n    };\n\n    voronoi.extent = function(_) {\n      return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n    };\n\n    voronoi.size = function(_) {\n      return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n    };\n\n    return voronoi;\n  }\n\n  function constant$9(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function ZoomEvent(target, type, transform) {\n    this.target = target;\n    this.type = type;\n    this.transform = transform;\n  }\n\n  function Transform(k, x, y) {\n    this.k = k;\n    this.x = x;\n    this.y = y;\n  }\n\n  Transform.prototype = {\n    constructor: Transform,\n    scale: function(k) {\n      return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n    },\n    translate: function(x, y) {\n      return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n    },\n    apply: function(point) {\n      return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n    },\n    applyX: function(x) {\n      return x * this.k + this.x;\n    },\n    applyY: function(y) {\n      return y * this.k + this.y;\n    },\n    invert: function(location) {\n      return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n    },\n    invertX: function(x) {\n      return (x - this.x) / this.k;\n    },\n    invertY: function(y) {\n      return (y - this.y) / this.k;\n    },\n    rescaleX: function(x) {\n      return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n    },\n    rescaleY: function(y) {\n      return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n    },\n    toString: function() {\n      return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n    }\n  };\n\n  var identity$6 = new Transform(1, 0, 0);\n\n  transform.prototype = Transform.prototype;\n\n  function transform(node) {\n    return node.__zoom || identity$6;\n  }\n\n  function nopropagation$1() {\n    exports.event.stopImmediatePropagation();\n  }\n\n  function noevent$1() {\n    exports.event.preventDefault();\n    exports.event.stopImmediatePropagation();\n  }\n\n  // Ignore right-click, since that should open the context menu.\n  function defaultFilter$1() {\n    return !exports.event.button;\n  }\n\n  function defaultExtent() {\n    var e = this, w, h;\n    if (e instanceof SVGElement) {\n      e = e.ownerSVGElement || e;\n      w = e.width.baseVal.value;\n      h = e.height.baseVal.value;\n    } else {\n      w = e.clientWidth;\n      h = e.clientHeight;\n    }\n    return [[0, 0], [w, h]];\n  }\n\n  function defaultTransform() {\n    return this.__zoom || identity$6;\n  }\n\n  function zoom() {\n    var filter = defaultFilter$1,\n        extent = defaultExtent,\n        k0 = 0,\n        k1 = Infinity,\n        x0 = -k1,\n        x1 = k1,\n        y0 = x0,\n        y1 = x1,\n        duration = 250,\n        gestures = [],\n        listeners = dispatch(\"start\", \"zoom\", \"end\"),\n        touchstarting,\n        touchending,\n        touchDelay = 500,\n        wheelDelay = 150;\n\n    function zoom(selection) {\n      selection\n          .on(\"wheel.zoom\", wheeled)\n          .on(\"mousedown.zoom\", mousedowned)\n          .on(\"dblclick.zoom\", dblclicked)\n          .on(\"touchstart.zoom\", touchstarted)\n          .on(\"touchmove.zoom\", touchmoved)\n          .on(\"touchend.zoom touchcancel.zoom\", touchended)\n          .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n          .property(\"__zoom\", defaultTransform);\n    }\n\n    zoom.transform = function(collection, transform) {\n      var selection = collection.selection ? collection.selection() : collection;\n      selection.property(\"__zoom\", defaultTransform);\n      if (collection !== selection) {\n        schedule(collection, transform);\n      } else {\n        selection.interrupt().each(function() {\n          gesture(this, arguments)\n              .start()\n              .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n              .end();\n        });\n      }\n    };\n\n    zoom.scaleBy = function(selection, k) {\n      zoom.scaleTo(selection, function() {\n        var k0 = this.__zoom.k,\n            k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n        return k0 * k1;\n      });\n    };\n\n    zoom.scaleTo = function(selection, k) {\n      zoom.transform(selection, function() {\n        var e = extent.apply(this, arguments),\n            t0 = this.__zoom,\n            p0 = centroid(e),\n            p1 = t0.invert(p0),\n            k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n        return constrain(translate(scale(t0, k1), p0, p1), e);\n      });\n    };\n\n    zoom.translateBy = function(selection, x, y) {\n      zoom.transform(selection, function() {\n        return constrain(this.__zoom.translate(\n          typeof x === \"function\" ? x.apply(this, arguments) : x,\n          typeof y === \"function\" ? y.apply(this, arguments) : y\n        ), extent.apply(this, arguments));\n      });\n    };\n\n    function scale(transform, k) {\n      k = Math.max(k0, Math.min(k1, k));\n      return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n    }\n\n    function translate(transform, p0, p1) {\n      var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n      return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n    }\n\n    function constrain(transform, extent) {\n      var dx = Math.min(0, transform.invertX(extent[0][0]) - x0) || Math.max(0, transform.invertX(extent[1][0]) - x1),\n          dy = Math.min(0, transform.invertY(extent[0][1]) - y0) || Math.max(0, transform.invertY(extent[1][1]) - y1);\n      return dx || dy ? transform.translate(dx, dy) : transform;\n    }\n\n    function centroid(extent) {\n      return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n    }\n\n    function schedule(transition, transform, center) {\n      transition\n          .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n          .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n          .tween(\"zoom\", function() {\n            var that = this,\n                args = arguments,\n                g = gesture(that, args),\n                e = extent.apply(that, args),\n                p = center || centroid(e),\n                w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n                a = that.__zoom,\n                b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n                i = interpolateZoom(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n            return function(t) {\n              if (t === 1) t = b; // Avoid rounding error on end.\n              else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n              g.zoom(null, t);\n            };\n          });\n    }\n\n    function gesture(that, args) {\n      for (var i = 0, n = gestures.length, g; i < n; ++i) {\n        if ((g = gestures[i]).that === that) {\n          return g;\n        }\n      }\n      return new Gesture(that, args);\n    }\n\n    function Gesture(that, args) {\n      this.that = that;\n      this.args = args;\n      this.index = -1;\n      this.active = 0;\n      this.extent = extent.apply(that, args);\n    }\n\n    Gesture.prototype = {\n      start: function() {\n        if (++this.active === 1) {\n          this.index = gestures.push(this) - 1;\n          this.emit(\"start\");\n        }\n        return this;\n      },\n      zoom: function(key, transform) {\n        if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n        if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n        if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n        this.that.__zoom = transform;\n        this.emit(\"zoom\");\n        return this;\n      },\n      end: function() {\n        if (--this.active === 0) {\n          gestures.splice(this.index, 1);\n          this.index = -1;\n          this.emit(\"end\");\n        }\n        return this;\n      },\n      emit: function(type) {\n        customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n      }\n    };\n\n    function wheeled() {\n      if (!filter.apply(this, arguments)) return;\n      var g = gesture(this, arguments),\n          t = this.__zoom,\n          k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n          p = mouse(this);\n\n      // If the mouse is in the same location as before, reuse it.\n      // If there were recent wheel events, reset the wheel idle timeout.\n      if (g.wheel) {\n        if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n          g.mouse[1] = t.invert(g.mouse[0] = p);\n        }\n        clearTimeout(g.wheel);\n      }\n\n      // If this wheel event won’t trigger a transform change, ignore it.\n      else if (t.k === k) return;\n\n      // Otherwise, capture the mouse point and location at the start.\n      else {\n        g.mouse = [p, t.invert(p)];\n        interrupt(this);\n        g.start();\n      }\n\n      noevent$1();\n      g.wheel = setTimeout(wheelidled, wheelDelay);\n      g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n      function wheelidled() {\n        g.wheel = null;\n        g.end();\n      }\n    }\n\n    function mousedowned() {\n      if (touchending || !filter.apply(this, arguments)) return;\n      var g = gesture(this, arguments),\n          v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n          p = mouse(this);\n\n      dragDisable(exports.event.view);\n      nopropagation$1();\n      g.mouse = [p, this.__zoom.invert(p)];\n      interrupt(this);\n      g.start();\n\n      function mousemoved() {\n        noevent$1();\n        g.moved = true;\n        g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n      }\n\n      function mouseupped() {\n        v.on(\"mousemove.zoom mouseup.zoom\", null);\n        dragEnable(exports.event.view, g.moved);\n        noevent$1();\n        g.end();\n      }\n    }\n\n    function dblclicked() {\n      if (!filter.apply(this, arguments)) return;\n      var t0 = this.__zoom,\n          p0 = mouse(this),\n          p1 = t0.invert(p0),\n          k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n          t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n      noevent$1();\n      if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n      else select(this).call(zoom.transform, t1);\n    }\n\n    function touchstarted() {\n      if (!filter.apply(this, arguments)) return;\n      var g = gesture(this, arguments),\n          touches = exports.event.changedTouches,\n          n = touches.length, i, t, p;\n\n      nopropagation$1();\n      for (i = 0; i < n; ++i) {\n        t = touches[i], p = touch(this, touches, t.identifier);\n        p = [p, this.__zoom.invert(p), t.identifier];\n        if (!g.touch0) g.touch0 = p;\n        else if (!g.touch1) g.touch1 = p;\n      }\n      if (touchstarting) {\n        touchstarting = clearTimeout(touchstarting);\n        if (!g.touch1) return g.end(), dblclicked.apply(this, arguments);\n      }\n      if (exports.event.touches.length === n) {\n        touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n        interrupt(this);\n        g.start();\n      }\n    }\n\n    function touchmoved() {\n      var g = gesture(this, arguments),\n          touches = exports.event.changedTouches,\n          n = touches.length, i, t, p, l;\n\n      noevent$1();\n      if (touchstarting) touchstarting = clearTimeout(touchstarting);\n      for (i = 0; i < n; ++i) {\n        t = touches[i], p = touch(this, touches, t.identifier);\n        if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n        else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n      }\n      t = g.that.__zoom;\n      if (g.touch1) {\n        var p0 = g.touch0[0], l0 = g.touch0[1],\n            p1 = g.touch1[0], l1 = g.touch1[1],\n            dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n            dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n        t = scale(t, Math.sqrt(dp / dl));\n        p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n        l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n      }\n      else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n      else return;\n      g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n    }\n\n    function touchended() {\n      var g = gesture(this, arguments),\n          touches = exports.event.changedTouches,\n          n = touches.length, i, t;\n\n      nopropagation$1();\n      if (touchending) clearTimeout(touchending);\n      touchending = setTimeout(function() { touchending = null; }, touchDelay);\n      for (i = 0; i < n; ++i) {\n        t = touches[i];\n        if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n        else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n      }\n      if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n      if (!g.touch0) g.end();\n    }\n\n    zoom.filter = function(_) {\n      return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$9(!!_), zoom) : filter;\n    };\n\n    zoom.extent = function(_) {\n      return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$9([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n    };\n\n    zoom.scaleExtent = function(_) {\n      return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n    };\n\n    zoom.translateExtent = function(_) {\n      return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n    };\n\n    zoom.duration = function(_) {\n      return arguments.length ? (duration = +_, zoom) : duration;\n    };\n\n    zoom.on = function() {\n      var value = listeners.on.apply(listeners, arguments);\n      return value === listeners ? zoom : value;\n    };\n\n    return zoom;\n  }\n\n  function constant$10(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function BrushEvent(target, type, selection) {\n    this.target = target;\n    this.type = type;\n    this.selection = selection;\n  }\n\n  function nopropagation$2() {\n    exports.event.stopImmediatePropagation();\n  }\n\n  function noevent$2() {\n    exports.event.preventDefault();\n    exports.event.stopImmediatePropagation();\n  }\n\n  var MODE_DRAG = {name: \"drag\"};\n  var MODE_SPACE = {name: \"space\"};\n  var MODE_HANDLE = {name: \"handle\"};\n  var MODE_CENTER = {name: \"center\"};\n  var X = {\n    name: \"x\",\n    handles: [\"e\", \"w\"].map(type$1),\n    input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n    output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n  };\n\n  var Y = {\n    name: \"y\",\n    handles: [\"n\", \"s\"].map(type$1),\n    input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n    output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n  };\n\n  var XY = {\n    name: \"xy\",\n    handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type$1),\n    input: function(xy) { return xy; },\n    output: function(xy) { return xy; }\n  };\n\n  var cursors = {\n    overlay: \"crosshair\",\n    selection: \"move\",\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n\n  var flipX = {\n    e: \"w\",\n    w: \"e\",\n    nw: \"ne\",\n    ne: \"nw\",\n    se: \"sw\",\n    sw: \"se\"\n  };\n\n  var flipY = {\n    n: \"s\",\n    s: \"n\",\n    nw: \"sw\",\n    ne: \"se\",\n    se: \"ne\",\n    sw: \"nw\"\n  };\n\n  var signsX = {\n    overlay: +1,\n    selection: +1,\n    n: null,\n    e: +1,\n    s: null,\n    w: -1,\n    nw: -1,\n    ne: +1,\n    se: +1,\n    sw: -1\n  };\n\n  var signsY = {\n    overlay: +1,\n    selection: +1,\n    n: -1,\n    e: null,\n    s: +1,\n    w: null,\n    nw: -1,\n    ne: -1,\n    se: +1,\n    sw: +1\n  };\n\n  function type$1(t) {\n    return {type: t};\n  }\n\n  // Ignore right-click, since that should open the context menu.\n  function defaultFilter$2() {\n    return !exports.event.button;\n  }\n\n  function defaultExtent$1() {\n    var svg = this.ownerSVGElement || this;\n    return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n  }\n\n  // Like d3.local, but with the name “__brush” rather than auto-generated.\n  function local$1(node) {\n    while (!node.__brush) if (!(node = node.parentNode)) return;\n    return node.__brush;\n  }\n\n  function empty$1(extent) {\n    return extent[0][0] === extent[1][0]\n        || extent[0][1] === extent[1][1];\n  }\n\n  function brushSelection(node) {\n    var state = node.__brush;\n    return state ? state.dim.output(state.selection) : null;\n  }\n\n  function brushX() {\n    return brush$1(X);\n  }\n\n  function brushY() {\n    return brush$1(Y);\n  }\n\n  function brush() {\n    return brush$1(XY);\n  }\n\n  function brush$1(dim) {\n    var extent = defaultExtent$1,\n        filter = defaultFilter$2,\n        listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n        handleSize = 6,\n        touchending;\n\n    function brush(group) {\n      var overlay = group\n          .property(\"__brush\", initialize)\n        .selectAll(\".overlay\")\n        .data([type$1(\"overlay\")]);\n\n      overlay.enter().append(\"rect\")\n          .attr(\"class\", \"overlay\")\n          .attr(\"pointer-events\", \"all\")\n          .attr(\"cursor\", cursors.overlay)\n        .merge(overlay)\n          .each(function() {\n            var extent = local$1(this).extent;\n            select(this)\n                .attr(\"x\", extent[0][0])\n                .attr(\"y\", extent[0][1])\n                .attr(\"width\", extent[1][0] - extent[0][0])\n                .attr(\"height\", extent[1][1] - extent[0][1]);\n          });\n\n      group.selectAll(\".selection\")\n        .data([type$1(\"selection\")])\n        .enter().append(\"rect\")\n          .attr(\"class\", \"selection\")\n          .attr(\"cursor\", cursors.selection)\n          .attr(\"fill\", \"#777\")\n          .attr(\"fill-opacity\", 0.3)\n          .attr(\"stroke\", \"#fff\")\n          .attr(\"shape-rendering\", \"crispEdges\");\n\n      var handle = group.selectAll(\".handle\")\n        .data(dim.handles, function(d) { return d.type; });\n\n      handle.exit().remove();\n\n      handle.enter().append(\"rect\")\n          .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n          .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n      group\n          .each(redraw)\n          .attr(\"fill\", \"none\")\n          .attr(\"pointer-events\", \"all\")\n          .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n          .on(\"mousedown.brush touchstart.brush\", started);\n    }\n\n    brush.move = function(group, selection) {\n      if (group.selection) {\n        group\n            .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n            .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n            .tween(\"brush\", function() {\n              var that = this,\n                  state = that.__brush,\n                  emit = emitter(that, arguments),\n                  selection0 = state.selection,\n                  selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                  i = interpolate(selection0, selection1);\n\n              function tween(t) {\n                state.selection = t === 1 && empty$1(selection1) ? null : i(t);\n                redraw.call(that);\n                emit.brush();\n              }\n\n              return selection0 && selection1 ? tween : tween(1);\n            });\n      } else {\n        group\n            .each(function() {\n              var that = this,\n                  args = arguments,\n                  state = that.__brush,\n                  selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                  emit = emitter(that, args).beforestart();\n\n              interrupt(that);\n              state.selection = selection1 == null || empty$1(selection1) ? null : selection1;\n              redraw.call(that);\n              emit.start().brush().end();\n            });\n      }\n    };\n\n    function redraw() {\n      var group = select(this),\n          selection = local$1(this).selection;\n\n      if (selection) {\n        group.selectAll(\".selection\")\n            .style(\"display\", null)\n            .attr(\"x\", selection[0][0])\n            .attr(\"y\", selection[0][1])\n            .attr(\"width\", selection[1][0] - selection[0][0])\n            .attr(\"height\", selection[1][1] - selection[0][1]);\n\n        group.selectAll(\".handle\")\n            .style(\"display\", null)\n            .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n            .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n            .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n            .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n      }\n\n      else {\n        group.selectAll(\".selection,.handle\")\n            .style(\"display\", \"none\")\n            .attr(\"x\", null)\n            .attr(\"y\", null)\n            .attr(\"width\", null)\n            .attr(\"height\", null);\n      }\n    }\n\n    function emitter(that, args) {\n      return that.__brush.emitter || new Emitter(that, args);\n    }\n\n    function Emitter(that, args) {\n      this.that = that;\n      this.args = args;\n      this.state = that.__brush;\n      this.active = 0;\n    }\n\n    Emitter.prototype = {\n      beforestart: function() {\n        if (++this.active === 1) this.state.emitter = this, this.starting = true;\n        return this;\n      },\n      start: function() {\n        if (this.starting) this.starting = false, this.emit(\"start\");\n        return this;\n      },\n      brush: function() {\n        this.emit(\"brush\");\n        return this;\n      },\n      end: function() {\n        if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n        return this;\n      },\n      emit: function(type) {\n        customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n      }\n    };\n\n    function started() {\n      if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$2(); }\n      else if (touchending) return;\n      if (!filter.apply(this, arguments)) return;\n\n      var that = this,\n          type = exports.event.target.__data__.type,\n          mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n          signX = dim === Y ? null : signsX[type],\n          signY = dim === X ? null : signsY[type],\n          state = local$1(that),\n          extent = state.extent,\n          selection = state.selection,\n          W = extent[0][0], w0, w1,\n          N = extent[0][1], n0, n1,\n          E = extent[1][0], e0, e1,\n          S = extent[1][1], s0, s1,\n          dx,\n          dy,\n          moving,\n          shifting = signX && signY && exports.event.shiftKey,\n          lockX,\n          lockY,\n          point0 = mouse(that),\n          point = point0,\n          emit = emitter(that, arguments).beforestart();\n\n      if (type === \"overlay\") {\n        state.selection = selection = [\n          [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n          [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n        ];\n      } else {\n        w0 = selection[0][0];\n        n0 = selection[0][1];\n        e0 = selection[1][0];\n        s0 = selection[1][1];\n      }\n\n      w1 = w0;\n      n1 = n0;\n      e1 = e0;\n      s1 = s0;\n\n      var group = select(that)\n          .attr(\"pointer-events\", \"none\");\n\n      var overlay = group.selectAll(\".overlay\")\n          .attr(\"cursor\", cursors[type]);\n\n      if (exports.event.touches) {\n        group\n            .on(\"touchmove.brush\", moved, true)\n            .on(\"touchend.brush touchcancel.brush\", ended, true);\n      } else {\n        var view = select(exports.event.view)\n            .on(\"keydown.brush\", keydowned, true)\n            .on(\"keyup.brush\", keyupped, true)\n            .on(\"mousemove.brush\", moved, true)\n            .on(\"mouseup.brush\", ended, true);\n\n        dragDisable(exports.event.view);\n      }\n\n      nopropagation$2();\n      interrupt(that);\n      redraw.call(that);\n      emit.start();\n\n      function moved() {\n        var point1 = mouse(that);\n        if (shifting && !lockX && !lockY) {\n          if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n          else lockX = true;\n        }\n        point = point1;\n        moving = true;\n        noevent$2();\n        move();\n      }\n\n      function move() {\n        var t;\n\n        dx = point[0] - point0[0];\n        dy = point[1] - point0[1];\n\n        switch (mode) {\n          case MODE_SPACE:\n          case MODE_DRAG: {\n            if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n            if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n            break;\n          }\n          case MODE_HANDLE: {\n            if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n            else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n            if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n            else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n            break;\n          }\n          case MODE_CENTER: {\n            if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n            if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n            break;\n          }\n        }\n\n        if (e1 < w1) {\n          signX *= -1;\n          t = w0, w0 = e0, e0 = t;\n          t = w1, w1 = e1, e1 = t;\n          if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n        }\n\n        if (s1 < n1) {\n          signY *= -1;\n          t = n0, n0 = s0, s0 = t;\n          t = n1, n1 = s1, s1 = t;\n          if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n        }\n\n        selection = state.selection; // May be set by brush.move!\n\n        if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n        if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n        if (selection[0][0] !== w1\n            || selection[0][1] !== n1\n            || selection[1][0] !== e1\n            || selection[1][1] !== s1) {\n          state.selection = [[w1, n1], [e1, s1]];\n          redraw.call(that);\n          emit.brush();\n        }\n      }\n\n      function ended() {\n        nopropagation$2();\n        if (exports.event.touches) {\n          if (exports.event.touches.length) return;\n          if (touchending) clearTimeout(touchending);\n          touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n          group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n        } else {\n          dragEnable(exports.event.view, moving);\n          view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n        }\n        group.attr(\"pointer-events\", \"all\");\n        overlay.attr(\"cursor\", cursors.overlay);\n        if (empty$1(selection)) state.selection = null, redraw.call(that);\n        emit.end();\n      }\n\n      function keydowned() {\n        switch (exports.event.keyCode) {\n          case 16: { // SHIFT\n            shifting = signX && signY;\n            break;\n          }\n          case 18: { // ALT\n            if (mode === MODE_HANDLE) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n              move();\n            }\n            break;\n          }\n          case 32: { // SPACE; takes priority over ALT\n            if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n              if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n              if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n              mode = MODE_SPACE;\n              overlay.attr(\"cursor\", cursors.selection);\n              move();\n            }\n            break;\n          }\n          default: return;\n        }\n        noevent$2();\n      }\n\n      function keyupped() {\n        switch (exports.event.keyCode) {\n          case 16: { // SHIFT\n            if (shifting) {\n              lockX = lockY = shifting = false;\n              move();\n            }\n            break;\n          }\n          case 18: { // ALT\n            if (mode === MODE_CENTER) {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n              move();\n            }\n            break;\n          }\n          case 32: { // SPACE\n            if (mode === MODE_SPACE) {\n              if (exports.event.altKey) {\n                if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n                if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n                mode = MODE_CENTER;\n              } else {\n                if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n                if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n                mode = MODE_HANDLE;\n              }\n              overlay.attr(\"cursor\", cursors[type]);\n              move();\n            }\n            break;\n          }\n          default: return;\n        }\n        noevent$2();\n      }\n    }\n\n    function initialize() {\n      var state = this.__brush || {selection: null};\n      state.extent = extent.apply(this, arguments);\n      state.dim = dim;\n      return state;\n    }\n\n    brush.extent = function(_) {\n      return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$10([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n    };\n\n    brush.filter = function(_) {\n      return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$10(!!_), brush) : filter;\n    };\n\n    brush.handleSize = function(_) {\n      return arguments.length ? (handleSize = +_, brush) : handleSize;\n    };\n\n    brush.on = function() {\n      var value = listeners.on.apply(listeners, arguments);\n      return value === listeners ? brush : value;\n    };\n\n    return brush;\n  }\n\n  var cos = Math.cos;\n  var sin = Math.sin;\n  var pi$3 = Math.PI;\n  var halfPi$2 = pi$3 / 2;\n  var tau$3 = pi$3 * 2;\n  var max$1 = Math.max;\n\n  function compareValue(compare) {\n    return function(a, b) {\n      return compare(\n        a.source.value + a.target.value,\n        b.source.value + b.target.value\n      );\n    };\n  }\n\n  function chord() {\n    var padAngle = 0,\n        sortGroups = null,\n        sortSubgroups = null,\n        sortChords = null;\n\n    function chord(matrix) {\n      var n = matrix.length,\n          groupSums = [],\n          groupIndex = range(n),\n          subgroupIndex = [],\n          chords = [],\n          groups = chords.groups = new Array(n),\n          subgroups = new Array(n * n),\n          k,\n          x,\n          x0,\n          dx,\n          i,\n          j;\n\n      // Compute the sum.\n      k = 0, i = -1; while (++i < n) {\n        x = 0, j = -1; while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(range(n));\n        k += x;\n      }\n\n      // Sort groups…\n      if (sortGroups) groupIndex.sort(function(a, b) {\n        return sortGroups(groupSums[a], groupSums[b]);\n      });\n\n      // Sort subgroups…\n      if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n        d.sort(function(a, b) {\n          return sortSubgroups(matrix[i][a], matrix[i][b]);\n        });\n      });\n\n      // Convert the sum to scaling factor for [0, 2pi].\n      // TODO Allow start and end angle to be specified?\n      // TODO Allow padding to be specified as percentage?\n      k = max$1(0, tau$3 - padAngle * n) / k;\n      dx = k ? padAngle : tau$3 / n;\n\n      // Compute the start and end angle for each group and subgroup.\n      // Note: Opera has a bug reordering object literal properties!\n      x = 0, i = -1; while (++i < n) {\n        x0 = x, j = -1; while (++j < n) {\n          var di = groupIndex[i],\n              dj = subgroupIndex[di][j],\n              v = matrix[di][dj],\n              a0 = x,\n              a1 = x += v * k;\n          subgroups[dj * n + di] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += dx;\n      }\n\n      // Generate chords for each (non-empty) subgroup-subgroup link.\n      i = -1; while (++i < n) {\n        j = i - 1; while (++j < n) {\n          var source = subgroups[j * n + i],\n              target = subgroups[i * n + j];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value\n                ? {source: target, target: source}\n                : {source: source, target: target});\n          }\n        }\n      }\n\n      return sortChords ? chords.sort(sortChords) : chords;\n    }\n\n    chord.padAngle = function(_) {\n      return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n    };\n\n    chord.sortGroups = function(_) {\n      return arguments.length ? (sortGroups = _, chord) : sortGroups;\n    };\n\n    chord.sortSubgroups = function(_) {\n      return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n    };\n\n    chord.sortChords = function(_) {\n      return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n    };\n\n    return chord;\n  }\n\n  var slice$5 = Array.prototype.slice;\n\n  function constant$11(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function defaultSource(d) {\n    return d.source;\n  }\n\n  function defaultTarget(d) {\n    return d.target;\n  }\n\n  function defaultRadius$1(d) {\n    return d.radius;\n  }\n\n  function defaultStartAngle(d) {\n    return d.startAngle;\n  }\n\n  function defaultEndAngle(d) {\n    return d.endAngle;\n  }\n\n  function ribbon() {\n    var source = defaultSource,\n        target = defaultTarget,\n        radius = defaultRadius$1,\n        startAngle = defaultStartAngle,\n        endAngle = defaultEndAngle,\n        context = null;\n\n    function ribbon() {\n      var buffer,\n          argv = slice$5.call(arguments),\n          s = source.apply(this, argv),\n          t = target.apply(this, argv),\n          sr = +radius.apply(this, (argv[0] = s, argv)),\n          sa0 = startAngle.apply(this, argv) - halfPi$2,\n          sa1 = endAngle.apply(this, argv) - halfPi$2,\n          sx0 = sr * cos(sa0),\n          sy0 = sr * sin(sa0),\n          tr = +radius.apply(this, (argv[0] = t, argv)),\n          ta0 = startAngle.apply(this, argv) - halfPi$2,\n          ta1 = endAngle.apply(this, argv) - halfPi$2;\n\n      if (!context) context = buffer = path();\n\n      context.moveTo(sx0, sy0);\n      context.arc(0, 0, sr, sa0, sa1);\n      if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n        context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n        context.arc(0, 0, tr, ta0, ta1);\n      }\n      context.quadraticCurveTo(0, 0, sx0, sy0);\n      context.closePath();\n\n      if (buffer) return context = null, buffer + \"\" || null;\n    }\n\n    ribbon.radius = function(_) {\n      return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$11(+_), ribbon) : radius;\n    };\n\n    ribbon.startAngle = function(_) {\n      return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$11(+_), ribbon) : startAngle;\n    };\n\n    ribbon.endAngle = function(_) {\n      return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$11(+_), ribbon) : endAngle;\n    };\n\n    ribbon.source = function(_) {\n      return arguments.length ? (source = _, ribbon) : source;\n    };\n\n    ribbon.target = function(_) {\n      return arguments.length ? (target = _, ribbon) : target;\n    };\n\n    ribbon.context = function(_) {\n      return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n    };\n\n    return ribbon;\n  }\n\n  // Adds floating point numbers with twice the normal precision.\n  // Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n  // Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n  // 305–363 (1997).\n  // Code adapted from GeographicLib by Charles F. F. Karney,\n  // http://geographiclib.sourceforge.net/\n\n  function adder() {\n    return new Adder;\n  }\n\n  function Adder() {\n    this.reset();\n  }\n\n  Adder.prototype = {\n    constructor: Adder,\n    reset: function() {\n      this.s = // rounded value\n      this.t = 0; // exact error\n    },\n    add: function(y) {\n      add$1(temp, y, this.t);\n      add$1(this, temp.s, this.s);\n      if (this.s) this.t += temp.t;\n      else this.s = temp.t;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n\n  var temp = new Adder;\n\n  function add$1(adder, a, b) {\n    var x = adder.s = a + b,\n        bv = x - a,\n        av = x - bv;\n    adder.t = (a - av) + (b - bv);\n  }\n\n  var epsilon$4 = 1e-6;\n  var epsilon2$2 = 1e-12;\n  var pi$4 = Math.PI;\n  var halfPi$3 = pi$4 / 2;\n  var quarterPi = pi$4 / 4;\n  var tau$4 = pi$4 * 2;\n\n  var degrees$1 = 180 / pi$4;\n  var radians = pi$4 / 180;\n\n  var abs = Math.abs;\n  var atan = Math.atan;\n  var atan2 = Math.atan2;\n  var cos$1 = Math.cos;\n  var ceil = Math.ceil;\n  var exp = Math.exp;\n  var log$1 = Math.log;\n  var pow$1 = Math.pow;\n  var sin$1 = Math.sin;\n  var sign$1 = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\n  var sqrt$1 = Math.sqrt;\n  var tan = Math.tan;\n\n  function acos(x) {\n    return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n  }\n\n  function asin$1(x) {\n    return x > 1 ? halfPi$3 : x < -1 ? -halfPi$3 : Math.asin(x);\n  }\n\n  function haversin(x) {\n    return (x = sin$1(x / 2)) * x;\n  }\n\n  function noop$2() {}\n\n  function streamGeometry(geometry, stream) {\n    if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n      streamGeometryType[geometry.type](geometry, stream);\n    }\n  }\n\n  var streamObjectType = {\n    Feature: function(feature, stream) {\n      streamGeometry(feature.geometry, stream);\n    },\n    FeatureCollection: function(object, stream) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) streamGeometry(features[i].geometry, stream);\n    }\n  };\n\n  var streamGeometryType = {\n    Sphere: function(object, stream) {\n      stream.sphere();\n    },\n    Point: function(object, stream) {\n      object = object.coordinates;\n      stream.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, stream) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, stream) {\n      streamLine(object.coordinates, stream, 0);\n    },\n    MultiLineString: function(object, stream) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) streamLine(coordinates[i], stream, 0);\n    },\n    Polygon: function(object, stream) {\n      streamPolygon(object.coordinates, stream);\n    },\n    MultiPolygon: function(object, stream) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) streamPolygon(coordinates[i], stream);\n    },\n    GeometryCollection: function(object, stream) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) streamGeometry(geometries[i], stream);\n    }\n  };\n\n  function streamLine(coordinates, stream, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    stream.lineStart();\n    while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n    stream.lineEnd();\n  }\n\n  function streamPolygon(coordinates, stream) {\n    var i = -1, n = coordinates.length;\n    stream.polygonStart();\n    while (++i < n) streamLine(coordinates[i], stream, 1);\n    stream.polygonEnd();\n  }\n\n  function stream(object, stream) {\n    if (object && streamObjectType.hasOwnProperty(object.type)) {\n      streamObjectType[object.type](object, stream);\n    } else {\n      streamGeometry(object, stream);\n    }\n  }\n\n  var areaRingSum;\n\n  var areaSum;\n  var lambda00;\n  var phi00;\n  var lambda0;\n  var cosPhi0;\n  var sinPhi0;\n  var areaStream = {\n    point: noop$2,\n    lineStart: noop$2,\n    lineEnd: noop$2,\n    polygonStart: function() {\n      areaRingSum.reset();\n      areaStream.lineStart = areaRingStart;\n      areaStream.lineEnd = areaRingEnd;\n    },\n    polygonEnd: function() {\n      var areaRing = +areaRingSum;\n      areaSum.add(areaRing < 0 ? tau$4 + areaRing : areaRing);\n      this.lineStart = this.lineEnd = this.point = noop$2;\n    },\n    sphere: function() {\n      areaSum.add(tau$4);\n    }\n  };\n\n  function areaRingStart() {\n    areaStream.point = areaPointFirst;\n  }\n\n  function areaRingEnd() {\n    areaPoint(lambda00, phi00);\n  }\n\n  function areaPointFirst(lambda, phi) {\n    areaStream.point = areaPoint;\n    lambda00 = lambda, phi00 = phi;\n    lambda *= radians, phi *= radians;\n    lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n  }\n\n  function areaPoint(lambda, phi) {\n    lambda *= radians, phi *= radians;\n    phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n    // Spherical excess E for a spherical triangle with vertices: south pole,\n    // previous point, current point.  Uses a formula derived from Cagnoli’s\n    // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n    var dLambda = lambda - lambda0,\n        sdLambda = dLambda >= 0 ? 1 : -1,\n        adLambda = sdLambda * dLambda,\n        cosPhi = cos$1(phi),\n        sinPhi = sin$1(phi),\n        k = sinPhi0 * sinPhi,\n        u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n        v = k * sdLambda * sin$1(adLambda);\n    areaRingSum.add(atan2(v, u));\n\n    // Advance the previous points.\n    lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n  }\n\n  function area$2(object) {\n    if (areaSum) areaSum.reset();\n    else areaSum = adder(), areaRingSum = adder();\n    stream(object, areaStream);\n    return areaSum * 2;\n  }\n\n  function spherical(cartesian) {\n    return [atan2(cartesian[1], cartesian[0]), asin$1(cartesian[2])];\n  }\n\n  function cartesian(spherical) {\n    var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n    return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n  }\n\n  function cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n\n  function cartesianCross(a, b) {\n    return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n  }\n\n  // TODO return a\n  function cartesianAddInPlace(a, b) {\n    a[0] += b[0], a[1] += b[1], a[2] += b[2];\n  }\n\n  function cartesianScale(vector, k) {\n    return [vector[0] * k, vector[1] * k, vector[2] * k];\n  }\n\n  // TODO return d\n  function cartesianNormalizeInPlace(d) {\n    var l = sqrt$1(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l, d[1] /= l, d[2] /= l;\n  }\n\nvar   lambda0$1;\n  var phi0;\n  var lambda1;\n  var phi1;\n  var lambda2;\nvar   lambda00$1;\nvar   phi00$1;\n  var p0;\n  var deltaSum;\n  var ranges;\nvar   range$1;\n  var boundsStream = {\n    point: boundsPoint,\n    lineStart: boundsLineStart,\n    lineEnd: boundsLineEnd,\n    polygonStart: function() {\n      boundsStream.point = boundsRingPoint;\n      boundsStream.lineStart = boundsRingStart;\n      boundsStream.lineEnd = boundsRingEnd;\n      deltaSum.reset();\n      areaStream.polygonStart();\n    },\n    polygonEnd: function() {\n      areaStream.polygonEnd();\n      boundsStream.point = boundsPoint;\n      boundsStream.lineStart = boundsLineStart;\n      boundsStream.lineEnd = boundsLineEnd;\n      if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n      else if (deltaSum > epsilon$4) phi1 = 90;\n      else if (deltaSum < -epsilon$4) phi0 = -90;\n      range$1[0] = lambda0$1, range$1[1] = lambda1;\n    }\n  };\n\n  function boundsPoint(lambda, phi) {\n    ranges.push(range$1 = [lambda0$1 = lambda, lambda1 = lambda]);\n    if (phi < phi0) phi0 = phi;\n    if (phi > phi1) phi1 = phi;\n  }\n\n  function linePoint(lambda, phi) {\n    var p = cartesian([lambda * radians, phi * radians]);\n    if (p0) {\n      var normal = cartesianCross(p0, p),\n          equatorial = [normal[1], -normal[0], 0],\n          inflection = cartesianCross(equatorial, normal);\n      cartesianNormalizeInPlace(inflection);\n      inflection = spherical(inflection);\n      var delta = lambda - lambda2,\n          sign = delta > 0 ? 1 : -1,\n          lambdai = inflection[0] * degrees$1 * sign,\n          phii,\n          antimeridian = abs(delta) > 180;\n      if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n        phii = inflection[1] * degrees$1;\n        if (phii > phi1) phi1 = phii;\n      } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n        phii = -inflection[1] * degrees$1;\n        if (phii < phi0) phi0 = phii;\n      } else {\n        if (phi < phi0) phi0 = phi;\n        if (phi > phi1) phi1 = phi;\n      }\n      if (antimeridian) {\n        if (lambda < lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      } else {\n        if (lambda1 >= lambda0$1) {\n          if (lambda < lambda0$1) lambda0$1 = lambda;\n          if (lambda > lambda1) lambda1 = lambda;\n        } else {\n          if (lambda > lambda2) {\n            if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n          } else {\n            if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n          }\n        }\n      }\n    } else {\n      boundsPoint(lambda, phi);\n    }\n    p0 = p, lambda2 = lambda;\n  }\n\n  function boundsLineStart() {\n    boundsStream.point = linePoint;\n  }\n\n  function boundsLineEnd() {\n    range$1[0] = lambda0$1, range$1[1] = lambda1;\n    boundsStream.point = boundsPoint;\n    p0 = null;\n  }\n\n  function boundsRingPoint(lambda, phi) {\n    if (p0) {\n      var delta = lambda - lambda2;\n      deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n    } else {\n      lambda00$1 = lambda, phi00$1 = phi;\n    }\n    areaStream.point(lambda, phi);\n    linePoint(lambda, phi);\n  }\n\n  function boundsRingStart() {\n    areaStream.lineStart();\n  }\n\n  function boundsRingEnd() {\n    boundsRingPoint(lambda00$1, phi00$1);\n    areaStream.lineEnd();\n    if (abs(deltaSum) > epsilon$4) lambda0$1 = -(lambda1 = 180);\n    range$1[0] = lambda0$1, range$1[1] = lambda1;\n    p0 = null;\n  }\n\n  // Finds the left-right distance between two longitudes.\n  // This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n  // the distance between ±180° to be 360°.\n  function angle(lambda0, lambda1) {\n    return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n  }\n\n  function rangeCompare(a, b) {\n    return a[0] - b[0];\n  }\n\n  function rangeContains(range, x) {\n    return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n  }\n\n  function bounds(feature) {\n    var i, n, a, b, merged, deltaMax, delta;\n\n    if (deltaSum) deltaSum.reset();\n    else deltaSum = adder();\n    phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n    ranges = [];\n    stream(feature, boundsStream);\n\n    // First, sort ranges by their minimum longitudes.\n    if (n = ranges.length) {\n      ranges.sort(rangeCompare);\n\n      // Then, merge any ranges that overlap.\n      for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n        b = ranges[i];\n        if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n          if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n          if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n        } else {\n          merged.push(a = b);\n        }\n      }\n\n      // Finally, find the largest gap between the merged ranges.\n      // The final bounding box will be the inverse of this gap.\n      for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n        b = merged[i];\n        if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n      }\n    }\n\n    ranges = range$1 = null;\n\n    return lambda0$1 === Infinity || phi0 === Infinity\n        ? [[NaN, NaN], [NaN, NaN]]\n        : [[lambda0$1, phi0], [lambda1, phi1]];\n  }\n\n  var W0;\n  var W1;\n  var X0;\n  var Y0;\n  var Z0;\n  var X1;\n  var Y1;\n  var Z1;\n  var X2;\n  var Y2;\n  var Z2;\nvar   lambda00$2;\nvar   phi00$2;\n  var x0;\n  var y0;\n  var z0;\n  // previous point\n\n  var centroidStream = {\n    sphere: noop$2,\n    point: centroidPoint,\n    lineStart: centroidLineStart,\n    lineEnd: centroidLineEnd,\n    polygonStart: function() {\n      centroidStream.lineStart = centroidRingStart;\n      centroidStream.lineEnd = centroidRingEnd;\n    },\n    polygonEnd: function() {\n      centroidStream.lineStart = centroidLineStart;\n      centroidStream.lineEnd = centroidLineEnd;\n    }\n  };\n\n  // Arithmetic mean of Cartesian vectors.\n  function centroidPoint(lambda, phi) {\n    lambda *= radians, phi *= radians;\n    var cosPhi = cos$1(phi);\n    centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n  }\n\n  function centroidPointCartesian(x, y, z) {\n    ++W0;\n    X0 += (x - X0) / W0;\n    Y0 += (y - Y0) / W0;\n    Z0 += (z - Z0) / W0;\n  }\n\n  function centroidLineStart() {\n    centroidStream.point = centroidLinePointFirst;\n  }\n\n  function centroidLinePointFirst(lambda, phi) {\n    lambda *= radians, phi *= radians;\n    var cosPhi = cos$1(phi);\n    x0 = cosPhi * cos$1(lambda);\n    y0 = cosPhi * sin$1(lambda);\n    z0 = sin$1(phi);\n    centroidStream.point = centroidLinePoint;\n    centroidPointCartesian(x0, y0, z0);\n  }\n\n  function centroidLinePoint(lambda, phi) {\n    lambda *= radians, phi *= radians;\n    var cosPhi = cos$1(phi),\n        x = cosPhi * cos$1(lambda),\n        y = cosPhi * sin$1(lambda),\n        z = sin$1(phi),\n        w = atan2(sqrt$1((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n    W1 += w;\n    X1 += w * (x0 + (x0 = x));\n    Y1 += w * (y0 + (y0 = y));\n    Z1 += w * (z0 + (z0 = z));\n    centroidPointCartesian(x0, y0, z0);\n  }\n\n  function centroidLineEnd() {\n    centroidStream.point = centroidPoint;\n  }\n\n  // See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n  // J. Applied Mechanics 42, 239 (1975).\n  function centroidRingStart() {\n    centroidStream.point = centroidRingPointFirst;\n  }\n\n  function centroidRingEnd() {\n    centroidRingPoint(lambda00$2, phi00$2);\n    centroidStream.point = centroidPoint;\n  }\n\n  function centroidRingPointFirst(lambda, phi) {\n    lambda00$2 = lambda, phi00$2 = phi;\n    lambda *= radians, phi *= radians;\n    centroidStream.point = centroidRingPoint;\n    var cosPhi = cos$1(phi);\n    x0 = cosPhi * cos$1(lambda);\n    y0 = cosPhi * sin$1(lambda);\n    z0 = sin$1(phi);\n    centroidPointCartesian(x0, y0, z0);\n  }\n\n  function centroidRingPoint(lambda, phi) {\n    lambda *= radians, phi *= radians;\n    var cosPhi = cos$1(phi),\n        x = cosPhi * cos$1(lambda),\n        y = cosPhi * sin$1(lambda),\n        z = sin$1(phi),\n        cx = y0 * z - z0 * y,\n        cy = z0 * x - x0 * z,\n        cz = x0 * y - y0 * x,\n        m = sqrt$1(cx * cx + cy * cy + cz * cz),\n        u = x0 * x + y0 * y + z0 * z,\n        v = m && -acos(u) / m, // area weight\n        w = atan2(m, u); // line weight\n    X2 += v * cx;\n    Y2 += v * cy;\n    Z2 += v * cz;\n    W1 += w;\n    X1 += w * (x0 + (x0 = x));\n    Y1 += w * (y0 + (y0 = y));\n    Z1 += w * (z0 + (z0 = z));\n    centroidPointCartesian(x0, y0, z0);\n  }\n\n  function centroid$1(object) {\n    W0 = W1 =\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    stream(object, centroidStream);\n\n    var x = X2,\n        y = Y2,\n        z = Z2,\n        m = x * x + y * y + z * z;\n\n    // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n    if (m < epsilon2$2) {\n      x = X1, y = Y1, z = Z1;\n      // If the feature has zero length, fall back to arithmetic mean of point vectors.\n      if (W1 < epsilon$4) x = X0, y = Y0, z = Z0;\n      m = x * x + y * y + z * z;\n      // If the feature still has an undefined ccentroid, then return.\n      if (m < epsilon2$2) return [NaN, NaN];\n    }\n\n    return [atan2(y, x) * degrees$1, asin$1(z / sqrt$1(m)) * degrees$1];\n  }\n\n  function constant$12(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function compose(a, b) {\n\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n\n    return compose;\n  }\n\n  function rotationIdentity(lambda, phi) {\n    return [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n  }\n\n  rotationIdentity.invert = rotationIdentity;\n\n  function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n    return (deltaLambda %= tau$4) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n      : rotationLambda(deltaLambda))\n      : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n      : rotationIdentity);\n  }\n\n  function forwardRotationLambda(deltaLambda) {\n    return function(lambda, phi) {\n      return lambda += deltaLambda, [lambda > pi$4 ? lambda - tau$4 : lambda < -pi$4 ? lambda + tau$4 : lambda, phi];\n    };\n  }\n\n  function rotationLambda(deltaLambda) {\n    var rotation = forwardRotationLambda(deltaLambda);\n    rotation.invert = forwardRotationLambda(-deltaLambda);\n    return rotation;\n  }\n\n  function rotationPhiGamma(deltaPhi, deltaGamma) {\n    var cosDeltaPhi = cos$1(deltaPhi),\n        sinDeltaPhi = sin$1(deltaPhi),\n        cosDeltaGamma = cos$1(deltaGamma),\n        sinDeltaGamma = sin$1(deltaGamma);\n\n    function rotation(lambda, phi) {\n      var cosPhi = cos$1(phi),\n          x = cos$1(lambda) * cosPhi,\n          y = sin$1(lambda) * cosPhi,\n          z = sin$1(phi),\n          k = z * cosDeltaPhi + x * sinDeltaPhi;\n      return [\n        atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n        asin$1(k * cosDeltaGamma + y * sinDeltaGamma)\n      ];\n    }\n\n    rotation.invert = function(lambda, phi) {\n      var cosPhi = cos$1(phi),\n          x = cos$1(lambda) * cosPhi,\n          y = sin$1(lambda) * cosPhi,\n          z = sin$1(phi),\n          k = z * cosDeltaGamma - y * sinDeltaGamma;\n      return [\n        atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n        asin$1(k * cosDeltaPhi - x * sinDeltaPhi)\n      ];\n    };\n\n    return rotation;\n  }\n\n  function rotation(rotate) {\n    rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n      return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n    }\n\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n      return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n    };\n\n    return forward;\n  }\n\n  // Generates a circle centered at [0°, 0°], with a given radius and precision.\n  function circleStream(stream, radius, delta, direction, t0, t1) {\n    if (!delta) return;\n    var cosRadius = cos$1(radius),\n        sinRadius = sin$1(radius),\n        step = direction * delta;\n    if (t0 == null) {\n      t0 = radius + direction * tau$4;\n      t1 = radius - step / 2;\n    } else {\n      t0 = circleRadius(cosRadius, t0);\n      t1 = circleRadius(cosRadius, t1);\n      if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$4;\n    }\n    for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n      point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n      stream.point(point[0], point[1]);\n    }\n  }\n\n  // Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n  function circleRadius(cosRadius, point) {\n    point = cartesian(point), point[0] -= cosRadius;\n    cartesianNormalizeInPlace(point);\n    var radius = acos(-point[1]);\n    return ((-point[2] < 0 ? -radius : radius) + tau$4 - epsilon$4) % tau$4;\n  }\n\n  function circle$1() {\n    var center = constant$12([0, 0]),\n        radius = constant$12(90),\n        precision = constant$12(6),\n        ring,\n        rotate,\n        stream = {point: point};\n\n    function point(x, y) {\n      ring.push(x = rotate(x, y));\n      x[0] *= degrees$1, x[1] *= degrees$1;\n    }\n\n    function circle() {\n      var c = center.apply(this, arguments),\n          r = radius.apply(this, arguments) * radians,\n          p = precision.apply(this, arguments) * radians;\n      ring = [];\n      rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n      circleStream(stream, r, p, 1);\n      c = {type: \"Polygon\", coordinates: [ring]};\n      ring = rotate = null;\n      return c;\n    }\n\n    circle.center = function(_) {\n      return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$12([+_[0], +_[1]]), circle) : center;\n    };\n\n    circle.radius = function(_) {\n      return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$12(+_), circle) : radius;\n    };\n\n    circle.precision = function(_) {\n      return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$12(+_), circle) : precision;\n    };\n\n    return circle;\n  }\n\n  function clipBuffer() {\n    var lines = [],\n        line;\n    return {\n      point: function(x, y) {\n        line.push([x, y]);\n      },\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      lineEnd: noop$2,\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      },\n      result: function() {\n        var result = lines;\n        lines = [];\n        line = null;\n        return result;\n      }\n    };\n  }\n\n  function clipLine(a, b, x0, y0, x1, y1) {\n    var ax = a[0],\n        ay = a[1],\n        bx = b[0],\n        by = b[1],\n        t0 = 0,\n        t1 = 1,\n        dx = bx - ax,\n        dy = by - ay,\n        r;\n\n    r = x0 - ax;\n    if (!dx && r > 0) return;\n    r /= dx;\n    if (dx < 0) {\n      if (r < t0) return;\n      if (r < t1) t1 = r;\n    } else if (dx > 0) {\n      if (r > t1) return;\n      if (r > t0) t0 = r;\n    }\n\n    r = x1 - ax;\n    if (!dx && r < 0) return;\n    r /= dx;\n    if (dx < 0) {\n      if (r > t1) return;\n      if (r > t0) t0 = r;\n    } else if (dx > 0) {\n      if (r < t0) return;\n      if (r < t1) t1 = r;\n    }\n\n    r = y0 - ay;\n    if (!dy && r > 0) return;\n    r /= dy;\n    if (dy < 0) {\n      if (r < t0) return;\n      if (r < t1) t1 = r;\n    } else if (dy > 0) {\n      if (r > t1) return;\n      if (r > t0) t0 = r;\n    }\n\n    r = y1 - ay;\n    if (!dy && r < 0) return;\n    r /= dy;\n    if (dy < 0) {\n      if (r > t1) return;\n      if (r > t0) t0 = r;\n    } else if (dy > 0) {\n      if (r < t0) return;\n      if (r < t1) t1 = r;\n    }\n\n    if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n    if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n    return true;\n  }\n\n  function pointEqual(a, b) {\n    return abs(a[0] - b[0]) < epsilon$4 && abs(a[1] - b[1]) < epsilon$4;\n  }\n\n  function Intersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other; // another intersection\n    this.e = entry; // is an entry?\n    this.v = false; // visited\n    this.n = this.p = null; // next & previous\n  }\n\n  // A generalized polygon clipping algorithm: given a polygon that has been cut\n  // into its visible line segments, and rejoins the segments by interpolating\n  // along the clip edge.\n  function clipPolygon(segments, compareIntersection, startInside, interpolate, stream) {\n    var subject = [],\n        clip = [],\n        i,\n        n;\n\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n], x;\n\n      // If the first and last points of a segment are coincident, then treat as a\n      // closed ring. TODO if all rings are closed, then the winding order of the\n      // exterior ring should be checked.\n      if (pointEqual(p0, p1)) {\n        stream.lineStart();\n        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n        stream.lineEnd();\n        return;\n      }\n\n      subject.push(x = new Intersection(p0, segment, null, true));\n      clip.push(x.o = new Intersection(p0, null, x, false));\n      subject.push(x = new Intersection(p1, segment, null, false));\n      clip.push(x.o = new Intersection(p1, null, x, true));\n    });\n\n    if (!subject.length) return;\n\n    clip.sort(compareIntersection);\n    link$1(subject);\n    link$1(clip);\n\n    for (i = 0, n = clip.length; i < n; ++i) {\n      clip[i].e = startInside = !startInside;\n    }\n\n    var start = subject[0],\n        points,\n        point;\n\n    while (1) {\n      // Find first unvisited intersection.\n      var current = start,\n          isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      stream.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, stream);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, stream);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      stream.lineEnd();\n    }\n  }\n\n  function link$1(array) {\n    if (!(n = array.length)) return;\n    var n,\n        i = 0,\n        a = array[0],\n        b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n\n  var clipMax = 1e9;\n  var clipMin = -clipMax;\n  // TODO Use d3-polygon’s polygonContains here for the ring check?\n  // TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\n  function clipExtent(x0, y0, x1, y1) {\n\n    function visible(x, y) {\n      return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n    }\n\n    function interpolate(from, to, direction, stream) {\n      var a = 0, a1 = 0;\n      if (from == null\n          || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n          || comparePoint(from, to) < 0 ^ direction > 0) {\n        do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n        while ((a = (a + direction + 4) % 4) !== a1);\n      } else {\n        stream.point(to[0], to[1]);\n      }\n    }\n\n    function corner(p, direction) {\n      return abs(p[0] - x0) < epsilon$4 ? direction > 0 ? 0 : 3\n          : abs(p[0] - x1) < epsilon$4 ? direction > 0 ? 2 : 1\n          : abs(p[1] - y0) < epsilon$4 ? direction > 0 ? 1 : 0\n          : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n    }\n\n    function compareIntersection(a, b) {\n      return comparePoint(a.x, b.x);\n    }\n\n    function comparePoint(a, b) {\n      var ca = corner(a, 1),\n          cb = corner(b, 1);\n      return ca !== cb ? ca - cb\n          : ca === 0 ? b[1] - a[1]\n          : ca === 1 ? a[0] - b[0]\n          : ca === 2 ? a[1] - b[1]\n          : b[0] - a[0];\n    }\n\n    return function(stream) {\n      var activeStream = stream,\n          bufferStream = clipBuffer(),\n          segments,\n          polygon,\n          ring,\n          x__, y__, v__, // first point\n          x_, y_, v_, // previous point\n          first,\n          clean;\n\n      var clipStream = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: polygonStart,\n        polygonEnd: polygonEnd\n      };\n\n      function point(x, y) {\n        if (visible(x, y)) activeStream.point(x, y);\n      }\n\n      function polygonInside() {\n        var winding = 0;\n\n        for (var i = 0, n = polygon.length; i < n; ++i) {\n          for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n            a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n            if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n            else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n          }\n        }\n\n        return winding;\n      }\n\n      // Buffer geometry within a polygon and then clip it en masse.\n      function polygonStart() {\n        activeStream = bufferStream, segments = [], polygon = [], clean = true;\n      }\n\n      function polygonEnd() {\n        var startInside = polygonInside(),\n            cleanInside = clean && startInside,\n            visible = (segments = merge(segments)).length;\n        if (cleanInside || visible) {\n          stream.polygonStart();\n          if (cleanInside) {\n            stream.lineStart();\n            interpolate(null, null, 1, stream);\n            stream.lineEnd();\n          }\n          if (visible) {\n            clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n          }\n          stream.polygonEnd();\n        }\n        activeStream = stream, segments = polygon = ring = null;\n      }\n\n      function lineStart() {\n        clipStream.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n\n      // TODO rather than special-case polygons, simply handle them separately.\n      // Ideally, coincident intersection points should be jittered to avoid\n      // clipping issues.\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferStream.rejoin();\n          segments.push(bufferStream.result());\n        }\n        clipStream.point = point;\n        if (v_) activeStream.lineEnd();\n      }\n\n      function linePoint(x, y) {\n        var v = visible(x, y);\n        if (polygon) ring.push([x, y]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n          }\n        } else {\n          if (v && v_) activeStream.point(x, y);\n          else {\n            var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n                b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n            if (clipLine(a, b, x0, y0, x1, y1)) {\n              if (!v_) {\n                activeStream.lineStart();\n                activeStream.point(a[0], a[1]);\n              }\n              activeStream.point(b[0], b[1]);\n              if (!v) activeStream.lineEnd();\n              clean = false;\n            } else if (v) {\n              activeStream.lineStart();\n              activeStream.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n\n      return clipStream;\n    };\n  }\n\n  function extent$1() {\n    var x0 = 0,\n        y0 = 0,\n        x1 = 960,\n        y1 = 500,\n        cache,\n        cacheStream,\n        clip;\n\n    return clip = {\n      stream: function(stream) {\n        return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n      },\n      extent: function(_) {\n        return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n      }\n    };\n  }\n\n  var lengthSum;\nvar   lambda0$2;\nvar   sinPhi0$1;\nvar   cosPhi0$1;\n  var lengthStream = {\n    sphere: noop$2,\n    point: noop$2,\n    lineStart: lengthLineStart,\n    lineEnd: noop$2,\n    polygonStart: noop$2,\n    polygonEnd: noop$2\n  };\n\n  function lengthLineStart() {\n    lengthStream.point = lengthPointFirst;\n    lengthStream.lineEnd = lengthLineEnd;\n  }\n\n  function lengthLineEnd() {\n    lengthStream.point = lengthStream.lineEnd = noop$2;\n  }\n\n  function lengthPointFirst(lambda, phi) {\n    lambda *= radians, phi *= radians;\n    lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n    lengthStream.point = lengthPoint;\n  }\n\n  function lengthPoint(lambda, phi) {\n    lambda *= radians, phi *= radians;\n    var sinPhi = sin$1(phi),\n        cosPhi = cos$1(phi),\n        delta = abs(lambda - lambda0$2),\n        cosDelta = cos$1(delta),\n        sinDelta = sin$1(delta),\n        x = cosPhi * sinDelta,\n        y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n        z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n    lengthSum.add(atan2(sqrt$1(x * x + y * y), z));\n    lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n  }\n\n  function length$2(object) {\n    if (lengthSum) lengthSum.reset();\n    else lengthSum = adder();\n    stream(object, lengthStream);\n    return +lengthSum;\n  }\n\n  var coordinates = [null, null];\nvar   object$1 = {type: \"LineString\", coordinates: coordinates};\n  function distance(a, b) {\n    coordinates[0] = a;\n    coordinates[1] = b;\n    return length$2(object$1);\n  }\n\n  function graticuleX(y0, y1, dy) {\n    var y = range(y0, y1 - epsilon$4, dy).concat(y1);\n    return function(x) { return y.map(function(y) { return [x, y]; }); };\n  }\n\n  function graticuleY(x0, x1, dx) {\n    var x = range(x0, x1 - epsilon$4, dx).concat(x1);\n    return function(y) { return x.map(function(x) { return [x, y]; }); };\n  }\n\n  function graticule() {\n    var x1, x0, X1, X0,\n        y1, y0, Y1, Y0,\n        dx = 10, dy = dx, DX = 90, DY = 360,\n        x, y, X, Y,\n        precision = 2.5;\n\n    function graticule() {\n      return {type: \"MultiLineString\", coordinates: lines()};\n    }\n\n    function lines() {\n      return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n          .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n          .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$4; }).map(x))\n          .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$4; }).map(y));\n    }\n\n    graticule.lines = function() {\n      return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n    };\n\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [\n          X(X0).concat(\n          Y(Y1).slice(1),\n          X(X1).reverse().slice(1),\n          Y(Y0).reverse().slice(1))\n        ]\n      };\n    };\n\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.extentMinor();\n      return graticule.extentMajor(_).extentMinor(_);\n    };\n\n    graticule.extentMajor = function(_) {\n      if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n\n    graticule.extentMinor = function(_) {\n      if (!arguments.length) return [[x0, y0], [x1, y1]];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.stepMinor();\n      return graticule.stepMajor(_).stepMinor(_);\n    };\n\n    graticule.stepMajor = function(_) {\n      if (!arguments.length) return [DX, DY];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n\n    graticule.stepMinor = function(_) {\n      if (!arguments.length) return [dx, dy];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = graticuleX(y0, y1, 90);\n      y = graticuleY(x0, x1, precision);\n      X = graticuleX(Y0, Y1, 90);\n      Y = graticuleY(X0, X1, precision);\n      return graticule;\n    };\n\n    return graticule\n        .extentMajor([[-180, -90 + epsilon$4], [180, 90 - epsilon$4]])\n        .extentMinor([[-180, -80 - epsilon$4], [180, 80 + epsilon$4]]);\n  }\n\n  function interpolate$2(a, b) {\n    var x0 = a[0] * radians,\n        y0 = a[1] * radians,\n        x1 = b[0] * radians,\n        y1 = b[1] * radians,\n        cy0 = cos$1(y0),\n        sy0 = sin$1(y0),\n        cy1 = cos$1(y1),\n        sy1 = sin$1(y1),\n        kx0 = cy0 * cos$1(x0),\n        ky0 = cy0 * sin$1(x0),\n        kx1 = cy1 * cos$1(x1),\n        ky1 = cy1 * sin$1(x1),\n        d = 2 * asin$1(sqrt$1(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n        k = sin$1(d);\n\n    var interpolate = d ? function(t) {\n      var B = sin$1(t *= d) / k,\n          A = sin$1(d - t) / k,\n          x = A * kx0 + B * kx1,\n          y = A * ky0 + B * ky1,\n          z = A * sy0 + B * sy1;\n      return [\n        atan2(y, x) * degrees$1,\n        atan2(z, sqrt$1(x * x + y * y)) * degrees$1\n      ];\n    } : function() {\n      return [x0 * degrees$1, y0 * degrees$1];\n    };\n\n    interpolate.distance = d;\n\n    return interpolate;\n  }\n\n  function identity$7(x) {\n    return x;\n  }\n\nvar   areaSum$1 = adder();\nvar   areaRingSum$1 = adder();\n  var x00;\n  var y00;\nvar   x0$1;\nvar   y0$1;\n  var areaStream$1 = {\n    point: noop$2,\n    lineStart: noop$2,\n    lineEnd: noop$2,\n    polygonStart: function() {\n      areaStream$1.lineStart = areaRingStart$1;\n      areaStream$1.lineEnd = areaRingEnd$1;\n    },\n    polygonEnd: function() {\n      areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$2;\n      areaSum$1.add(abs(areaRingSum$1));\n      areaRingSum$1.reset();\n    },\n    result: function() {\n      var area = areaSum$1 / 2;\n      areaSum$1.reset();\n      return area;\n    }\n  };\n\n  function areaRingStart$1() {\n    areaStream$1.point = areaPointFirst$1;\n  }\n\n  function areaPointFirst$1(x, y) {\n    areaStream$1.point = areaPoint$1;\n    x00 = x0$1 = x, y00 = y0$1 = y;\n  }\n\n  function areaPoint$1(x, y) {\n    areaRingSum$1.add(y0$1 * x - x0$1 * y);\n    x0$1 = x, y0$1 = y;\n  }\n\n  function areaRingEnd$1() {\n    areaPoint$1(x00, y00);\n  }\n\nvar   x0$2 = Infinity;\nvar   y0$2 = x0$2;\n  var x1 = -x0$2;\n  var y1 = x1;\n  var boundsStream$1 = {\n    point: boundsPoint$1,\n    lineStart: noop$2,\n    lineEnd: noop$2,\n    polygonStart: noop$2,\n    polygonEnd: noop$2,\n    result: function() {\n      var bounds = [[x0$2, y0$2], [x1, y1]];\n      x1 = y1 = -(y0$2 = x0$2 = Infinity);\n      return bounds;\n    }\n  };\n\n  function boundsPoint$1(x, y) {\n    if (x < x0$2) x0$2 = x;\n    if (x > x1) x1 = x;\n    if (y < y0$2) y0$2 = y;\n    if (y > y1) y1 = y;\n  }\n\nvar   X0$1 = 0;\nvar   Y0$1 = 0;\nvar   Z0$1 = 0;\nvar   X1$1 = 0;\nvar   Y1$1 = 0;\nvar   Z1$1 = 0;\nvar   X2$1 = 0;\nvar   Y2$1 = 0;\nvar   Z2$1 = 0;\nvar   x00$1;\nvar   y00$1;\nvar   x0$3;\nvar   y0$3;\n  var centroidStream$1 = {\n    point: centroidPoint$1,\n    lineStart: centroidLineStart$1,\n    lineEnd: centroidLineEnd$1,\n    polygonStart: function() {\n      centroidStream$1.lineStart = centroidRingStart$1;\n      centroidStream$1.lineEnd = centroidRingEnd$1;\n    },\n    polygonEnd: function() {\n      centroidStream$1.point = centroidPoint$1;\n      centroidStream$1.lineStart = centroidLineStart$1;\n      centroidStream$1.lineEnd = centroidLineEnd$1;\n    },\n    result: function() {\n      var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n          : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n          : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n          : [NaN, NaN];\n      X0$1 = Y0$1 = Z0$1 =\n      X1$1 = Y1$1 = Z1$1 =\n      X2$1 = Y2$1 = Z2$1 = 0;\n      return centroid;\n    }\n  };\n\n  function centroidPoint$1(x, y) {\n    X0$1 += x;\n    Y0$1 += y;\n    ++Z0$1;\n  }\n\n  function centroidLineStart$1() {\n    centroidStream$1.point = centroidPointFirstLine;\n  }\n\n  function centroidPointFirstLine(x, y) {\n    centroidStream$1.point = centroidPointLine;\n    centroidPoint$1(x0$3 = x, y0$3 = y);\n  }\n\n  function centroidPointLine(x, y) {\n    var dx = x - x0$3, dy = y - y0$3, z = sqrt$1(dx * dx + dy * dy);\n    X1$1 += z * (x0$3 + x) / 2;\n    Y1$1 += z * (y0$3 + y) / 2;\n    Z1$1 += z;\n    centroidPoint$1(x0$3 = x, y0$3 = y);\n  }\n\n  function centroidLineEnd$1() {\n    centroidStream$1.point = centroidPoint$1;\n  }\n\n  function centroidRingStart$1() {\n    centroidStream$1.point = centroidPointFirstRing;\n  }\n\n  function centroidRingEnd$1() {\n    centroidPointRing(x00$1, y00$1);\n  }\n\n  function centroidPointFirstRing(x, y) {\n    centroidStream$1.point = centroidPointRing;\n    centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n  }\n\n  function centroidPointRing(x, y) {\n    var dx = x - x0$3,\n        dy = y - y0$3,\n        z = sqrt$1(dx * dx + dy * dy);\n\n    X1$1 += z * (x0$3 + x) / 2;\n    Y1$1 += z * (y0$3 + y) / 2;\n    Z1$1 += z;\n\n    z = y0$3 * x - x0$3 * y;\n    X2$1 += z * (x0$3 + x);\n    Y2$1 += z * (y0$3 + y);\n    Z2$1 += z * 3;\n    centroidPoint$1(x0$3 = x, y0$3 = y);\n  }\n\n  function PathContext(context) {\n    var pointRadius = 4.5;\n\n    var stream = {\n      point: point,\n\n      // While inside a line, override point to moveTo then lineTo.\n      lineStart: function() { stream.point = pointLineStart; },\n      lineEnd: lineEnd,\n\n      // While inside a polygon, override lineEnd to closePath.\n      polygonStart: function() { stream.lineEnd = lineEndPolygon; },\n      polygonEnd: function() { stream.lineEnd = lineEnd; stream.point = point; },\n\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n\n      result: noop$2\n    };\n\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, tau$4);\n    }\n\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n\n    function lineEnd() {\n      stream.point = point;\n    }\n\n    function lineEndPolygon() {\n      context.closePath();\n    }\n\n    return stream;\n  }\n\n  function PathString() {\n    var pointCircle = circle$2(4.5),\n        string = [];\n\n    var stream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = circle$2(_);\n        return stream;\n      },\n      result: function() {\n        if (string.length) {\n          var result = string.join(\"\");\n          string = [];\n          return result;\n        }\n      }\n    };\n\n    function point(x, y) {\n      string.push(\"M\", x, \",\", y, pointCircle);\n    }\n\n    function pointLineStart(x, y) {\n      string.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n\n    function pointLine(x, y) {\n      string.push(\"L\", x, \",\", y);\n    }\n\n    function lineStart() {\n      stream.point = pointLineStart;\n    }\n\n    function lineEnd() {\n      stream.point = point;\n    }\n\n    function lineEndPolygon() {\n      string.push(\"Z\");\n    }\n\n    return stream;\n  }\n\n  function circle$2(radius) {\n    return \"m0,\" + radius\n        + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n        + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n        + \"z\";\n  }\n\n  function index$3() {\n    var pointRadius = 4.5,\n        projection,\n        projectionStream,\n        context,\n        contextStream;\n\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        stream(object, projectionStream(contextStream));\n      }\n      return contextStream.result();\n    }\n\n    path.area = function(object) {\n      stream(object, projectionStream(areaStream$1));\n      return areaStream$1.result();\n    };\n\n    path.bounds = function(object) {\n      stream(object, projectionStream(boundsStream$1));\n      return boundsStream$1.result();\n    };\n\n    path.centroid = function(object) {\n      stream(object, projectionStream(centroidStream$1));\n      return centroidStream$1.result();\n    };\n\n    path.projection = function(_) {\n      return arguments.length ? (projectionStream = (projection = _) == null ? identity$7 : _.stream, path) : projection;\n    };\n\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new PathString : new PathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return path;\n    };\n\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n\n    return path.projection(null).context(null);\n  }\n\n  var sum$2 = adder();\n\n  function polygonContains(polygon, point) {\n    var lambda = point[0],\n        phi = point[1],\n        normal = [sin$1(lambda), -cos$1(lambda), 0],\n        angle = 0,\n        winding = 0;\n\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      if (!(m = (ring = polygon[i]).length)) continue;\n      var ring,\n          m,\n          point0 = ring[m - 1],\n          lambda0 = point0[0],\n          phi0 = point0[1] / 2 + quarterPi,\n          sinPhi0 = sin$1(phi0),\n          cosPhi0 = cos$1(phi0);\n\n      for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n        var point1 = ring[j],\n            lambda1 = point1[0],\n            phi1 = point1[1] / 2 + quarterPi,\n            sinPhi1 = sin$1(phi1),\n            cosPhi1 = cos$1(phi1),\n            delta = lambda1 - lambda0,\n            sign = delta >= 0 ? 1 : -1,\n            absDelta = sign * delta,\n            antimeridian = absDelta > pi$4,\n            k = sinPhi0 * sinPhi1;\n\n        sum$2.add(atan2(k * sign * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n        angle += antimeridian ? delta + sign * tau$4 : delta;\n\n        // Are the longitudes either side of the point’s meridian (lambda),\n        // and are the latitudes smaller than the parallel (phi)?\n        if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n          var arc = cartesianCross(cartesian(point0), cartesian(point1));\n          cartesianNormalizeInPlace(arc);\n          var intersection = cartesianCross(normal, arc);\n          cartesianNormalizeInPlace(intersection);\n          var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin$1(intersection[2]);\n          if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ delta >= 0 ? 1 : -1;\n          }\n        }\n      }\n    }\n\n    // First, determine whether the South pole is inside or outside:\n    //\n    // It is inside if:\n    // * the polygon winds around it in a clockwise direction.\n    // * the polygon does not (cumulatively) wind around it, but has a negative\n    //   (counter-clockwise) area.\n    //\n    // Second, count the (signed) number of times a segment crosses a lambda\n    // from the point to the South pole.  If it is zero, then the point is the\n    // same side as the South pole.\n\n    var contains = (angle < -epsilon$4 || angle < epsilon$4 && sum$2 < -epsilon$4) ^ (winding & 1);\n    sum$2.reset();\n    return contains;\n  }\n\n  function clip(pointVisible, clipLine, interpolate, start) {\n    return function(rotate, sink) {\n      var line = clipLine(sink),\n          rotatedStart = rotate.invert(start[0], start[1]),\n          ringBuffer = clipBuffer(),\n          ringSink = clipLine(ringBuffer),\n          polygonStarted = false,\n          polygon,\n          segments,\n          ring;\n\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = merge(segments);\n          var startInside = polygonContains(polygon, rotatedStart);\n          if (segments.length) {\n            if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n            clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n          } else if (startInside) {\n            if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n            sink.lineStart();\n            interpolate(null, null, 1, sink);\n            sink.lineEnd();\n          }\n          if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          sink.polygonStart();\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n          sink.polygonEnd();\n        }\n      };\n\n      function point(lambda, phi) {\n        var point = rotate(lambda, phi);\n        if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n      }\n\n      function pointLine(lambda, phi) {\n        var point = rotate(lambda, phi);\n        line.point(point[0], point[1]);\n      }\n\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n\n      function pointRing(lambda, phi) {\n        ring.push([lambda, phi]);\n        var point = rotate(lambda, phi);\n        ringSink.point(point[0], point[1]);\n      }\n\n      function ringStart() {\n        ringSink.lineStart();\n        ring = [];\n      }\n\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringSink.lineEnd();\n\n        var clean = ringSink.clean(),\n            ringSegments = ringBuffer.result(),\n            i, n = ringSegments.length, m,\n            segment,\n            point;\n\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n\n        if (!n) return;\n\n        // No intersections.\n        if (clean & 1) {\n          segment = ringSegments[0];\n          if ((m = segment.length - 1) > 0) {\n            if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n            sink.lineStart();\n            for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n            sink.lineEnd();\n          }\n          return;\n        }\n\n        // Rejoin connected segments.\n        // TODO reuse ringBuffer.rejoin()?\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n        segments.push(ringSegments.filter(validSegment));\n      }\n\n      return clip;\n    };\n  }\n\n  function validSegment(segment) {\n    return segment.length > 1;\n  }\n\n  // Intersections are sorted along the clip edge. For both antimeridian cutting\n  // and circle clipping, the same comparison is used.\n  function compareIntersection(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfPi$3 - epsilon$4 : halfPi$3 - a[1])\n         - ((b = b.x)[0] < 0 ? b[1] - halfPi$3 - epsilon$4 : halfPi$3 - b[1]);\n  }\n\n  var clipAntimeridian = clip(\n    function() { return true; },\n    clipAntimeridianLine,\n    clipAntimeridianInterpolate,\n    [-pi$4, -halfPi$3]\n  );\n\n  // Takes a line and cuts into visible segments. Return values: 0 - there were\n  // intersections or the line was empty; 1 - no intersections; 2 - there were\n  // intersections, and the first and last segments should be rejoined.\n  function clipAntimeridianLine(stream) {\n    var lambda0 = NaN,\n        phi0 = NaN,\n        sign0 = NaN,\n        clean; // no intersections\n\n    return {\n      lineStart: function() {\n        stream.lineStart();\n        clean = 1;\n      },\n      point: function(lambda1, phi1) {\n        var sign1 = lambda1 > 0 ? pi$4 : -pi$4,\n            delta = abs(lambda1 - lambda0);\n        if (abs(delta - pi$4) < epsilon$4) { // line crosses a pole\n          stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$3 : -halfPi$3);\n          stream.point(sign0, phi0);\n          stream.lineEnd();\n          stream.lineStart();\n          stream.point(sign1, phi0);\n          stream.point(lambda1, phi0);\n          clean = 0;\n        } else if (sign0 !== sign1 && delta >= pi$4) { // line crosses antimeridian\n          if (abs(lambda0 - sign0) < epsilon$4) lambda0 -= sign0 * epsilon$4; // handle degeneracies\n          if (abs(lambda1 - sign1) < epsilon$4) lambda1 -= sign1 * epsilon$4;\n          phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n          stream.point(sign0, phi0);\n          stream.lineEnd();\n          stream.lineStart();\n          stream.point(sign1, phi0);\n          clean = 0;\n        }\n        stream.point(lambda0 = lambda1, phi0 = phi1);\n        sign0 = sign1;\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n        lambda0 = phi0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean; // if intersections, rejoin first and last segments\n      }\n    };\n  }\n\n  function clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n    var cosPhi0,\n        cosPhi1,\n        sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n    return abs(sinLambda0Lambda1) > epsilon$4\n        ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n            - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n            / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n        : (phi0 + phi1) / 2;\n  }\n\n  function clipAntimeridianInterpolate(from, to, direction, stream) {\n    var phi;\n    if (from == null) {\n      phi = direction * halfPi$3;\n      stream.point(-pi$4, phi);\n      stream.point(0, phi);\n      stream.point(pi$4, phi);\n      stream.point(pi$4, 0);\n      stream.point(pi$4, -phi);\n      stream.point(0, -phi);\n      stream.point(-pi$4, -phi);\n      stream.point(-pi$4, 0);\n      stream.point(-pi$4, phi);\n    } else if (abs(from[0] - to[0]) > epsilon$4) {\n      var lambda = from[0] < to[0] ? pi$4 : -pi$4;\n      phi = direction * lambda / 2;\n      stream.point(-lambda, phi);\n      stream.point(0, phi);\n      stream.point(lambda, phi);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function clipCircle(radius, delta) {\n    var cr = cos$1(radius),\n        smallRadius = cr > 0,\n        notHemisphere = abs(cr) > epsilon$4; // TODO optimise for this common case\n\n    function interpolate(from, to, direction, stream) {\n      circleStream(stream, radius, delta, direction, from, to);\n    }\n\n    function visible(lambda, phi) {\n      return cos$1(lambda) * cos$1(phi) > cr;\n    }\n\n    // Takes a line and cuts into visible segments. Return values used for polygon\n    // clipping: 0 - there were intersections or the line was empty; 1 - no\n    // intersections 2 - there were intersections, and the first and last segments\n    // should be rejoined.\n    function clipLine(stream) {\n      var point0, // previous point\n          c0, // code for previous point\n          v0, // visibility of previous point\n          v00, // visibility of first point\n          clean; // no intersections\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(lambda, phi) {\n          var point1 = [lambda, phi],\n              point2,\n              v = visible(lambda, phi),\n              c = smallRadius\n                ? v ? 0 : code(lambda, phi)\n                : v ? code(lambda + (lambda < 0 ? pi$4 : -pi$4), phi) : 0;\n          if (!point0 && (v00 = v0 = v)) stream.lineStart();\n          // Handle degeneracies.\n          // TODO ignore if not clipping polygons.\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (pointEqual(point0, point2) || pointEqual(point1, point2)) {\n              point1[0] += epsilon$4;\n              point1[1] += epsilon$4;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              // outside going in\n              stream.lineStart();\n              point2 = intersect(point1, point0);\n              stream.point(point2[0], point2[1]);\n            } else {\n              // inside going out\n              point2 = intersect(point0, point1);\n              stream.point(point2[0], point2[1]);\n              stream.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            // If the codes for two points are different, or are both zero,\n            // and there this segment intersects with the small circle.\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                stream.lineStart();\n                stream.point(t[0][0], t[0][1]);\n                stream.point(t[1][0], t[1][1]);\n                stream.lineEnd();\n              } else {\n                stream.point(t[1][0], t[1][1]);\n                stream.lineEnd();\n                stream.lineStart();\n                stream.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !pointEqual(point0, point1))) {\n            stream.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) stream.lineEnd();\n          point0 = null;\n        },\n        // Rejoin first and last segments if there were intersections and the first\n        // and last points were visible.\n        clean: function() {\n          return clean | ((v00 && v0) << 1);\n        }\n      };\n    }\n\n    // Intersects the great circle between a and b with the clip circle.\n    function intersect(a, b, two) {\n      var pa = cartesian(a),\n          pb = cartesian(b);\n\n      // We have two planes, n1.p = d1 and n2.p = d2.\n      // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n      var n1 = [1, 0, 0], // normal\n          n2 = cartesianCross(pa, pb),\n          n2n2 = cartesianDot(n2, n2),\n          n1n2 = n2[0], // cartesianDot(n1, n2),\n          determinant = n2n2 - n1n2 * n1n2;\n\n      // Two polar points.\n      if (!determinant) return !two && a;\n\n      var c1 =  cr * n2n2 / determinant,\n          c2 = -cr * n1n2 / determinant,\n          n1xn2 = cartesianCross(n1, n2),\n          A = cartesianScale(n1, c1),\n          B = cartesianScale(n2, c2);\n      cartesianAddInPlace(A, B);\n\n      // Solve |p(t)|^2 = 1.\n      var u = n1xn2,\n          w = cartesianDot(A, u),\n          uu = cartesianDot(u, u),\n          t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n      if (t2 < 0) return;\n\n      var t = sqrt$1(t2),\n          q = cartesianScale(u, (-w - t) / uu);\n      cartesianAddInPlace(q, A);\n      q = spherical(q);\n\n      if (!two) return q;\n\n      // Two intersection points.\n      var lambda0 = a[0],\n          lambda1 = b[0],\n          phi0 = a[1],\n          phi1 = b[1],\n          z;\n\n      if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n      var delta = lambda1 - lambda0,\n          polar = abs(delta - pi$4) < epsilon$4,\n          meridian = polar || delta < epsilon$4;\n\n      if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n      // Check that the first point is between a and b.\n      if (meridian\n          ? polar\n            ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$4 ? phi0 : phi1)\n            : phi0 <= q[1] && q[1] <= phi1\n          : delta > pi$4 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n        var q1 = cartesianScale(u, (-w + t) / uu);\n        cartesianAddInPlace(q1, A);\n        return [q, spherical(q1)];\n      }\n    }\n\n    // Generates a 4-bit vector representing the location of a point relative to\n    // the small circle's bounding box.\n    function code(lambda, phi) {\n      var r = smallRadius ? radius : pi$4 - radius,\n          code = 0;\n      if (lambda < -r) code |= 1; // left\n      else if (lambda > r) code |= 2; // right\n      if (phi < -r) code |= 4; // below\n      else if (phi > r) code |= 8; // above\n      return code;\n    }\n\n    return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$4, radius - pi$4]);\n  }\n\n  function transform$1(prototype) {\n    return {\n      stream: transform$2(prototype)\n    };\n  }\n\n  function transform$2(prototype) {\n    function T() {}\n    var p = T.prototype = Object.create(Transform$1.prototype);\n    for (var k in prototype) p[k] = prototype[k];\n    return function(stream) {\n      var t = new T;\n      t.stream = stream;\n      return t;\n    };\n  }\n\n  function Transform$1() {}\n\n  Transform$1.prototype = {\n    point: function(x, y) { this.stream.point(x, y); },\n    sphere: function() { this.stream.sphere(); },\n    lineStart: function() { this.stream.lineStart(); },\n    lineEnd: function() { this.stream.lineEnd(); },\n    polygonStart: function() { this.stream.polygonStart(); },\n    polygonEnd: function() { this.stream.polygonEnd(); }\n  };\n\n  var maxDepth = 16;\n  var cosMinDistance = cos$1(30 * radians);\n  // cos(minimum angular distance)\n\n  function resample(project, delta2) {\n    return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n  }\n\n  function resampleNone(project) {\n    return transform$2({\n      point: function(x, y) {\n        x = project(x, y);\n        this.stream.point(x[0], x[1]);\n      }\n    });\n  }\n\n  function resample$1(project, delta2) {\n\n    function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0,\n          dy = y1 - y0,\n          d2 = dx * dx + dy * dy;\n      if (d2 > 4 * delta2 && depth--) {\n        var a = a0 + a1,\n            b = b0 + b1,\n            c = c0 + c1,\n            m = sqrt$1(a * a + b * b + c * c),\n            phi2 = asin$1(c /= m),\n            lambda2 = abs(abs(c) - 1) < epsilon$4 || abs(lambda0 - lambda1) < epsilon$4 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n            p = project(lambda2, phi2),\n            x2 = p[0],\n            y2 = p[1],\n            dx2 = x2 - x0,\n            dy2 = y2 - y0,\n            dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > delta2 // perpendicular projected distance\n            || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n            || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n          resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    return function(stream) {\n      var lambda00, x00, y00, a00, b00, c00, // first point\n          lambda0, x0, y0, a0, b0, c0; // previous point\n\n      var resampleStream = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n        polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n      };\n\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n\n      function lineStart() {\n        x0 = NaN;\n        resampleStream.point = linePoint;\n        stream.lineStart();\n      }\n\n      function linePoint(lambda, phi) {\n        var c = cartesian([lambda, phi]), p = project(lambda, phi);\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n\n      function lineEnd() {\n        resampleStream.point = point;\n        stream.lineEnd();\n      }\n\n      function ringStart() {\n        lineStart();\n        resampleStream.point = ringPoint;\n        resampleStream.lineEnd = ringEnd;\n      }\n\n      function ringPoint(lambda, phi) {\n        linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resampleStream.point = linePoint;\n      }\n\n      function ringEnd() {\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n        resampleStream.lineEnd = lineEnd;\n        lineEnd();\n      }\n\n      return resampleStream;\n    };\n  }\n\n  var transformRadians = transform$2({\n    point: function(x, y) {\n      this.stream.point(x * radians, y * radians);\n    }\n  });\n\n  function projection(project) {\n    return projectionMutator(function() { return project; })();\n  }\n\n  function projectionMutator(projectAt) {\n    var project,\n        k = 150, // scale\n        x = 480, y = 250, // translate\n        dx, dy, lambda = 0, phi = 0, // center\n        deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n        theta = null, preclip = clipAntimeridian, // clip angle\n        x0 = null, y0, x1, y1, postclip = identity$7, // clip extent\n        delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n        cache,\n        cacheStream;\n\n    function projection(point) {\n      point = projectRotate(point[0] * radians, point[1] * radians);\n      return [point[0] * k + dx, dy - point[1] * k];\n    }\n\n    function invert(point) {\n      point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n      return point && [point[0] * degrees$1, point[1] * degrees$1];\n    }\n\n    function projectTransform(x, y) {\n      return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n    }\n\n    projection.stream = function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n    };\n\n    projection.clipAngle = function(_) {\n      return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n    };\n\n    projection.clipExtent = function(_) {\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$7) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    };\n\n    projection.scale = function(_) {\n      return arguments.length ? (k = +_, recenter()) : k;\n    };\n\n    projection.translate = function(_) {\n      return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n    };\n\n    projection.center = function(_) {\n      return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n    };\n\n    projection.rotate = function(_) {\n      return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n    };\n\n    projection.precision = function(_) {\n      return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt$1(delta2);\n    };\n\n    function recenter() {\n      projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n      var center = project(lambda, phi);\n      dx = x - center[0] * k;\n      dy = y + center[1] * k;\n      return reset();\n    }\n\n    function reset() {\n      cache = cacheStream = null;\n      return projection;\n    }\n\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return recenter();\n    };\n  }\n\n  function conicProjection(projectAt) {\n    var phi0 = 0,\n        phi1 = pi$4 / 3,\n        m = projectionMutator(projectAt),\n        p = m(phi0, phi1);\n\n    p.parallels = function(_) {\n      return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n    };\n\n    return p;\n  }\n\n  function conicEqualAreaRaw(y0, y1) {\n    var sy0 = sin$1(y0),\n        n = (sy0 + sin$1(y1)) / 2,\n        c = 1 + sy0 * (2 * n - sy0),\n        r0 = sqrt$1(c) / n;\n\n    function project(x, y) {\n      var r = sqrt$1(c - 2 * n * sin$1(y)) / n;\n      return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n    }\n\n    project.invert = function(x, y) {\n      var r0y = r0 - y;\n      return [atan2(x, r0y) / n, asin$1((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n    };\n\n    return project;\n  }\n\n  function conicEqualArea() {\n    return conicProjection(conicEqualAreaRaw)\n        .scale(155.424)\n        .center([0, 33.6442]);\n  }\n\n  function albers() {\n    return conicEqualArea()\n        .parallels([29.5, 45.5])\n        .scale(1070)\n        .translate([480, 250])\n        .rotate([96, 0])\n        .center([-0.6, 38.7]);\n  }\n\n  // The projections must have mutually exclusive clip regions on the sphere,\n  // as this will avoid emitting interleaving lines and polygons.\n  function multiplex(streams) {\n    var n = streams.length;\n    return {\n      point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n      sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n      lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n      lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n      polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n      polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n    };\n  }\n\n  // A composite projection for the United States, configured by default for\n  // 960×500. The projection also works quite well at 960×600 if you change the\n  // scale to 1285 and adjust the translate accordingly. The set of standard\n  // parallels for each region comes from USGS, which is published here:\n  // http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\n  function albersUsa() {\n    var cache,\n        cacheStream,\n        lower48 = albers(), lower48Point,\n        alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n        hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n        point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      return point = null,\n          (lower48Point.point(x, y), point)\n          || (alaskaPoint.point(x, y), point)\n          || (hawaiiPoint.point(x, y), point);\n    }\n\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(),\n          t = lower48.translate(),\n          x = (coordinates[0] - t[0]) / k,\n          y = (coordinates[1] - t[1]) / k;\n      return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n          : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n          : lower48).invert(coordinates);\n    };\n\n    albersUsa.stream = function(stream) {\n      return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n    };\n\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n      return albersUsa;\n    };\n\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n\n      lower48Point = lower48\n          .translate(_)\n          .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n          .stream(pointStream);\n\n      alaskaPoint = alaska\n          .translate([x - 0.307 * k, y + 0.201 * k])\n          .clipExtent([[x - 0.425 * k + epsilon$4, y + 0.120 * k + epsilon$4], [x - 0.214 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n          .stream(pointStream);\n\n      hawaiiPoint = hawaii\n          .translate([x - 0.205 * k, y + 0.212 * k])\n          .clipExtent([[x - 0.214 * k + epsilon$4, y + 0.166 * k + epsilon$4], [x - 0.115 * k - epsilon$4, y + 0.234 * k - epsilon$4]])\n          .stream(pointStream);\n\n      return albersUsa;\n    };\n\n    return albersUsa.scale(1070);\n  }\n\n  function azimuthalRaw(scale) {\n    return function(x, y) {\n      var cx = cos$1(x),\n          cy = cos$1(y),\n          k = scale(cx * cy);\n      return [\n        k * cy * sin$1(x),\n        k * sin$1(y)\n      ];\n    }\n  }\n\n  function azimuthalInvert(angle) {\n    return function(x, y) {\n      var z = sqrt$1(x * x + y * y),\n          c = angle(z),\n          sc = sin$1(c),\n          cc = cos$1(c);\n      return [\n        atan2(x * sc, z * cc),\n        asin$1(z && y * sc / z)\n      ];\n    }\n  }\n\n  var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n    return sqrt$1(2 / (1 + cxcy));\n  });\n\n  azimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n    return 2 * asin$1(z / 2);\n  });\n\n  function azimuthalEqualArea() {\n    return projection(azimuthalEqualAreaRaw)\n        .scale(124.75)\n        .clipAngle(180 - 1e-3);\n  }\n\n  var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n    return (c = acos(c)) && c / sin$1(c);\n  });\n\n  azimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n    return z;\n  });\n\n  function azimuthalEquidistant() {\n    return projection(azimuthalEquidistantRaw)\n        .scale(79.4188)\n        .clipAngle(180 - 1e-3);\n  }\n\n  function mercatorRaw(lambda, phi) {\n    return [lambda, log$1(tan((halfPi$3 + phi) / 2))];\n  }\n\n  mercatorRaw.invert = function(x, y) {\n    return [x, 2 * atan(exp(y)) - halfPi$3];\n  };\n\n  function mercator() {\n    return mercatorProjection(mercatorRaw)\n        .scale(961 / tau$4);\n  }\n\n  function mercatorProjection(project) {\n    var m = projection(project),\n        scale = m.scale,\n        translate = m.translate,\n        clipExtent = m.clipExtent,\n        clipAuto;\n\n    m.scale = function(_) {\n      return arguments.length ? (scale(_), clipAuto && m.clipExtent(null), m) : scale();\n    };\n\n    m.translate = function(_) {\n      return arguments.length ? (translate(_), clipAuto && m.clipExtent(null), m) : translate();\n    };\n\n    m.clipExtent = function(_) {\n      if (!arguments.length) return clipAuto ? null : clipExtent();\n      if (clipAuto = _ == null) {\n        var k = pi$4 * scale(),\n            t = translate();\n        _ = [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]];\n      }\n      clipExtent(_);\n      return m;\n    };\n\n    return m.clipExtent(null);\n  }\n\n  function tany(y) {\n    return tan((halfPi$3 + y) / 2);\n  }\n\n  function conicConformalRaw(y0, y1) {\n    var cy0 = cos$1(y0),\n        n = y0 === y1 ? sin$1(y0) : log$1(cy0 / cos$1(y1)) / log$1(tany(y1) / tany(y0)),\n        f = cy0 * pow$1(tany(y0), n) / n;\n\n    if (!n) return mercatorRaw;\n\n    function project(x, y) {\n      if (f > 0) { if (y < -halfPi$3 + epsilon$4) y = -halfPi$3 + epsilon$4; }\n      else { if (y > halfPi$3 - epsilon$4) y = halfPi$3 - epsilon$4; }\n      var r = f / pow$1(tany(y), n);\n      return [r * sin$1(n * x), f - r * cos$1(n * x)];\n    }\n\n    project.invert = function(x, y) {\n      var fy = f - y, r = sign$1(n) * sqrt$1(x * x + fy * fy);\n      return [atan2(x, fy) / n, 2 * atan(pow$1(f / r, 1 / n)) - halfPi$3];\n    };\n\n    return project;\n  }\n\n  function conicConformal() {\n    return conicProjection(conicConformalRaw)\n        .scale(109.5)\n        .parallels([30, 30]);\n  }\n\n  function equirectangularRaw(lambda, phi) {\n    return [lambda, phi];\n  }\n\n  equirectangularRaw.invert = equirectangularRaw;\n\n  function equirectangular() {\n    return projection(equirectangularRaw)\n        .scale(152.63);\n  }\n\n  function conicEquidistantRaw(y0, y1) {\n    var cy0 = cos$1(y0),\n        n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n        g = cy0 / n + y0;\n\n    if (abs(n) < epsilon$4) return equirectangularRaw;\n\n    function project(x, y) {\n      var gy = g - y, nx = n * x;\n      return [gy * sin$1(nx), g - gy * cos$1(nx)];\n    }\n\n    project.invert = function(x, y) {\n      var gy = g - y;\n      return [atan2(x, gy) / n, g - sign$1(n) * sqrt$1(x * x + gy * gy)];\n    };\n\n    return project;\n  }\n\n  function conicEquidistant() {\n    return conicProjection(conicEquidistantRaw)\n        .scale(131.154)\n        .center([0, 13.9389]);\n  }\n\n  function gnomonicRaw(x, y) {\n    var cy = cos$1(y), k = cos$1(x) * cy;\n    return [cy * sin$1(x) / k, sin$1(y) / k];\n  }\n\n  gnomonicRaw.invert = azimuthalInvert(atan);\n\n  function gnomonic() {\n    return projection(gnomonicRaw)\n        .scale(144.049)\n        .clipAngle(60);\n  }\n\n  function orthographicRaw(x, y) {\n    return [cos$1(y) * sin$1(x), sin$1(y)];\n  }\n\n  orthographicRaw.invert = azimuthalInvert(asin$1);\n\n  function orthographic() {\n    return projection(orthographicRaw)\n        .scale(249.5)\n        .clipAngle(90 + epsilon$4);\n  }\n\n  function stereographicRaw(x, y) {\n    var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n    return [cy * sin$1(x) / k, sin$1(y) / k];\n  }\n\n  stereographicRaw.invert = azimuthalInvert(function(z) {\n    return 2 + atan(z);\n  });\n\n  function stereographic() {\n    return projection(stereographicRaw)\n        .scale(250)\n        .clipAngle(142);\n  }\n\n  function transverseMercatorRaw(lambda, phi) {\n    return [log$1(tan((halfPi$3 + phi) / 2)), -lambda];\n  }\n\n  transverseMercatorRaw.invert = function(x, y) {\n    return [-y, 2 * atan(exp(x)) - halfPi$3];\n  };\n\n  function transverseMercator() {\n    var m = mercatorProjection(transverseMercatorRaw),\n        center = m.center,\n        rotate = m.rotate;\n\n    m.center = function(_) {\n      return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n    };\n\n    m.rotate = function(_) {\n      return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n    };\n\n    return rotate([0, 0, 90])\n        .scale(159.155);\n  }\n\n  exports.version = version;\n  exports.bisect = bisectRight;\n  exports.bisectRight = bisectRight;\n  exports.bisectLeft = bisectLeft;\n  exports.ascending = ascending;\n  exports.bisector = bisector;\n  exports.descending = descending;\n  exports.deviation = deviation;\n  exports.extent = extent;\n  exports.histogram = histogram;\n  exports.thresholdFreedmanDiaconis = freedmanDiaconis;\n  exports.thresholdScott = scott;\n  exports.thresholdSturges = sturges;\n  exports.max = max;\n  exports.mean = mean;\n  exports.median = median;\n  exports.merge = merge;\n  exports.min = min;\n  exports.pairs = pairs;\n  exports.permute = permute;\n  exports.quantile = threshold;\n  exports.range = range;\n  exports.scan = scan;\n  exports.shuffle = shuffle;\n  exports.sum = sum;\n  exports.ticks = ticks;\n  exports.tickStep = tickStep;\n  exports.transpose = transpose;\n  exports.variance = variance;\n  exports.zip = zip;\n  exports.entries = entries;\n  exports.keys = keys;\n  exports.values = values;\n  exports.map = map$1;\n  exports.set = set;\n  exports.nest = nest;\n  exports.randomUniform = uniform;\n  exports.randomNormal = normal;\n  exports.randomLogNormal = logNormal;\n  exports.randomBates = bates;\n  exports.randomIrwinHall = irwinHall;\n  exports.randomExponential = exponential;\n  exports.easeLinear = linear;\n  exports.easeQuad = quadInOut;\n  exports.easeQuadIn = quadIn;\n  exports.easeQuadOut = quadOut;\n  exports.easeQuadInOut = quadInOut;\n  exports.easeCubic = easeCubicInOut;\n  exports.easeCubicIn = cubicIn;\n  exports.easeCubicOut = cubicOut;\n  exports.easeCubicInOut = easeCubicInOut;\n  exports.easePoly = polyInOut;\n  exports.easePolyIn = polyIn;\n  exports.easePolyOut = polyOut;\n  exports.easePolyInOut = polyInOut;\n  exports.easeSin = sinInOut;\n  exports.easeSinIn = sinIn;\n  exports.easeSinOut = sinOut;\n  exports.easeSinInOut = sinInOut;\n  exports.easeExp = expInOut;\n  exports.easeExpIn = expIn;\n  exports.easeExpOut = expOut;\n  exports.easeExpInOut = expInOut;\n  exports.easeCircle = circleInOut;\n  exports.easeCircleIn = circleIn;\n  exports.easeCircleOut = circleOut;\n  exports.easeCircleInOut = circleInOut;\n  exports.easeBounce = bounceOut;\n  exports.easeBounceIn = bounceIn;\n  exports.easeBounceOut = bounceOut;\n  exports.easeBounceInOut = bounceInOut;\n  exports.easeBack = backInOut;\n  exports.easeBackIn = backIn;\n  exports.easeBackOut = backOut;\n  exports.easeBackInOut = backInOut;\n  exports.easeElastic = elasticOut;\n  exports.easeElasticIn = elasticIn;\n  exports.easeElasticOut = elasticOut;\n  exports.easeElasticInOut = elasticInOut;\n  exports.polygonArea = area;\n  exports.polygonCentroid = centroid;\n  exports.polygonHull = hull;\n  exports.polygonContains = contains;\n  exports.polygonLength = length$1;\n  exports.path = path;\n  exports.quadtree = quadtree;\n  exports.queue = queue;\n  exports.arc = arc;\n  exports.area = area$1;\n  exports.line = line;\n  exports.pie = pie;\n  exports.radialArea = radialArea;\n  exports.radialLine = radialLine$1;\n  exports.symbol = symbol;\n  exports.symbols = symbols;\n  exports.symbolCircle = circle;\n  exports.symbolCross = cross$1;\n  exports.symbolDiamond = diamond;\n  exports.symbolSquare = square;\n  exports.symbolStar = star;\n  exports.symbolTriangle = triangle;\n  exports.symbolWye = wye;\n  exports.curveBasisClosed = basisClosed;\n  exports.curveBasisOpen = basisOpen;\n  exports.curveBasis = basis;\n  exports.curveBundle = bundle;\n  exports.curveCardinalClosed = cardinalClosed;\n  exports.curveCardinalOpen = cardinalOpen;\n  exports.curveCardinal = cardinal;\n  exports.curveCatmullRomClosed = catmullRomClosed;\n  exports.curveCatmullRomOpen = catmullRomOpen;\n  exports.curveCatmullRom = catmullRom;\n  exports.curveLinearClosed = linearClosed;\n  exports.curveLinear = curveLinear;\n  exports.curveMonotoneX = monotoneX;\n  exports.curveMonotoneY = monotoneY;\n  exports.curveNatural = natural;\n  exports.curveStep = step;\n  exports.curveStepAfter = stepAfter;\n  exports.curveStepBefore = stepBefore;\n  exports.stack = stack;\n  exports.stackOffsetExpand = expand;\n  exports.stackOffsetNone = none;\n  exports.stackOffsetSilhouette = silhouette;\n  exports.stackOffsetWiggle = wiggle;\n  exports.stackOrderAscending = ascending$1;\n  exports.stackOrderDescending = descending$2;\n  exports.stackOrderInsideOut = insideOut;\n  exports.stackOrderNone = none$1;\n  exports.stackOrderReverse = reverse;\n  exports.color = color;\n  exports.rgb = colorRgb;\n  exports.hsl = colorHsl;\n  exports.lab = lab;\n  exports.hcl = colorHcl;\n  exports.cubehelix = cubehelix;\n  exports.interpolate = interpolate;\n  exports.interpolateArray = array$1;\n  exports.interpolateDate = date;\n  exports.interpolateNumber = interpolateNumber;\n  exports.interpolateObject = object;\n  exports.interpolateRound = interpolateRound;\n  exports.interpolateString = interpolateString;\n  exports.interpolateTransformCss = interpolateTransform$1;\n  exports.interpolateTransformSvg = interpolateTransform$2;\n  exports.interpolateZoom = interpolateZoom;\n  exports.interpolateRgb = interpolateRgb;\n  exports.interpolateRgbBasis = rgbBasis;\n  exports.interpolateRgbBasisClosed = rgbBasisClosed;\n  exports.interpolateHsl = hsl$1;\n  exports.interpolateHslLong = hslLong;\n  exports.interpolateLab = lab$1;\n  exports.interpolateHcl = hcl$1;\n  exports.interpolateHclLong = hclLong;\n  exports.interpolateCubehelix = cubehelix$2;\n  exports.interpolateCubehelixLong = interpolateCubehelixLong;\n  exports.interpolateBasis = basis$2;\n  exports.interpolateBasisClosed = basisClosed$1;\n  exports.quantize = quantize;\n  exports.dispatch = dispatch;\n  exports.dsvFormat = dsv;\n  exports.csvParse = csvParse;\n  exports.csvParseRows = csvParseRows;\n  exports.csvFormat = csvFormat;\n  exports.csvFormatRows = csvFormatRows;\n  exports.tsvParse = tsvParse;\n  exports.tsvParseRows = tsvParseRows;\n  exports.tsvFormat = tsvFormat;\n  exports.tsvFormatRows = tsvFormatRows;\n  exports.request = request;\n  exports.html = html;\n  exports.json = json;\n  exports.text = text;\n  exports.xml = xml;\n  exports.csv = csv$1;\n  exports.tsv = tsv$1;\n  exports.now = now;\n  exports.timer = timer;\n  exports.timerFlush = timerFlush;\n  exports.timeout = timeout$1;\n  exports.interval = interval$1;\n  exports.timeInterval = newInterval;\n  exports.timeMillisecond = millisecond;\n  exports.timeMilliseconds = milliseconds;\n  exports.timeSecond = second;\n  exports.timeSeconds = seconds;\n  exports.timeMinute = minute;\n  exports.timeMinutes = minutes;\n  exports.timeHour = hour;\n  exports.timeHours = hours;\n  exports.timeDay = day;\n  exports.timeDays = days;\n  exports.timeWeek = timeWeek;\n  exports.timeWeeks = sundays;\n  exports.timeSunday = timeWeek;\n  exports.timeSundays = sundays;\n  exports.timeMonday = timeMonday;\n  exports.timeMondays = mondays;\n  exports.timeTuesday = tuesday;\n  exports.timeTuesdays = tuesdays;\n  exports.timeWednesday = wednesday;\n  exports.timeWednesdays = wednesdays;\n  exports.timeThursday = thursday;\n  exports.timeThursdays = thursdays;\n  exports.timeFriday = friday;\n  exports.timeFridays = fridays;\n  exports.timeSaturday = saturday;\n  exports.timeSaturdays = saturdays;\n  exports.timeMonth = month;\n  exports.timeMonths = months;\n  exports.timeYear = year;\n  exports.timeYears = years;\n  exports.utcMillisecond = millisecond;\n  exports.utcMilliseconds = milliseconds;\n  exports.utcSecond = second;\n  exports.utcSeconds = seconds;\n  exports.utcMinute = utcMinute;\n  exports.utcMinutes = utcMinutes;\n  exports.utcHour = utcHour;\n  exports.utcHours = utcHours;\n  exports.utcDay = utcDay;\n  exports.utcDays = utcDays;\n  exports.utcWeek = utcWeek;\n  exports.utcWeeks = utcSundays;\n  exports.utcSunday = utcWeek;\n  exports.utcSundays = utcSundays;\n  exports.utcMonday = utcMonday;\n  exports.utcMondays = utcMondays;\n  exports.utcTuesday = utcTuesday;\n  exports.utcTuesdays = utcTuesdays;\n  exports.utcWednesday = utcWednesday;\n  exports.utcWednesdays = utcWednesdays;\n  exports.utcThursday = utcThursday;\n  exports.utcThursdays = utcThursdays;\n  exports.utcFriday = utcFriday;\n  exports.utcFridays = utcFridays;\n  exports.utcSaturday = utcSaturday;\n  exports.utcSaturdays = utcSaturdays;\n  exports.utcMonth = utcMonth;\n  exports.utcMonths = utcMonths;\n  exports.utcYear = utcYear;\n  exports.utcYears = utcYears;\n  exports.formatLocale = formatLocale;\n  exports.formatDefaultLocale = defaultLocale;\n  exports.formatSpecifier = formatSpecifier;\n  exports.precisionFixed = precisionFixed;\n  exports.precisionPrefix = precisionPrefix;\n  exports.precisionRound = precisionRound;\n  exports.isoFormat = formatIso;\n  exports.isoParse = parseIso;\n  exports.timeFormatLocale = formatLocale$1;\n  exports.timeFormatDefaultLocale = defaultLocale$1;\n  exports.scaleBand = band;\n  exports.scalePoint = point$4;\n  exports.scaleIdentity = identity$4;\n  exports.scaleLinear = linear$2;\n  exports.scaleLog = log;\n  exports.scaleOrdinal = ordinal;\n  exports.scaleImplicit = implicit;\n  exports.scalePow = pow;\n  exports.scaleSqrt = sqrt;\n  exports.scaleQuantile = quantile;\n  exports.scaleQuantize = quantize$1;\n  exports.scaleThreshold = threshold$1;\n  exports.scaleTime = time;\n  exports.scaleUtc = utcTime;\n  exports.schemeCategory10 = category10;\n  exports.schemeCategory20b = category20b;\n  exports.schemeCategory20c = category20c;\n  exports.schemeCategory20 = category20;\n  exports.scaleSequential = sequential;\n  exports.interpolateCubehelixDefault = cubehelix$3;\n  exports.interpolateRainbow = rainbow$1;\n  exports.interpolateWarm = warm;\n  exports.interpolateCool = cool;\n  exports.interpolateViridis = viridis;\n  exports.interpolateMagma = magma;\n  exports.interpolateInferno = inferno;\n  exports.interpolatePlasma = plasma;\n  exports.creator = creator;\n  exports.customEvent = customEvent;\n  exports.local = local;\n  exports.matcher = matcher$1;\n  exports.mouse = mouse;\n  exports.namespace = namespace;\n  exports.namespaces = namespaces;\n  exports.select = select;\n  exports.selectAll = selectAll;\n  exports.selection = selection;\n  exports.selector = selector;\n  exports.selectorAll = selectorAll;\n  exports.touch = touch;\n  exports.touches = touches;\n  exports.window = window;\n  exports.active = active;\n  exports.interrupt = interrupt;\n  exports.transition = transition;\n  exports.axisTop = axisTop;\n  exports.axisRight = axisRight;\n  exports.axisBottom = axisBottom;\n  exports.axisLeft = axisLeft;\n  exports.cluster = cluster;\n  exports.hierarchy = hierarchy;\n  exports.pack = index;\n  exports.packSiblings = siblings;\n  exports.packEnclose = enclose;\n  exports.partition = partition;\n  exports.stratify = stratify;\n  exports.tree = tree;\n  exports.treemap = index$1;\n  exports.treemapBinary = binary;\n  exports.treemapDice = treemapDice;\n  exports.treemapSlice = treemapSlice;\n  exports.treemapSliceDice = sliceDice;\n  exports.treemapSquarify = squarify;\n  exports.treemapResquarify = resquarify;\n  exports.forceCenter = center$1;\n  exports.forceCollide = collide;\n  exports.forceLink = link;\n  exports.forceManyBody = manyBody;\n  exports.forceSimulation = simulation;\n  exports.forceX = x$3;\n  exports.forceY = y$3;\n  exports.drag = drag;\n  exports.dragDisable = dragDisable;\n  exports.dragEnable = dragEnable;\n  exports.voronoi = voronoi;\n  exports.zoom = zoom;\n  exports.zoomIdentity = identity$6;\n  exports.zoomTransform = transform;\n  exports.brush = brush;\n  exports.brushX = brushX;\n  exports.brushY = brushY;\n  exports.brushSelection = brushSelection;\n  exports.chord = chord;\n  exports.ribbon = ribbon;\n  exports.geoAlbers = albers;\n  exports.geoAlbersUsa = albersUsa;\n  exports.geoArea = area$2;\n  exports.geoAzimuthalEqualArea = azimuthalEqualArea;\n  exports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\n  exports.geoAzimuthalEquidistant = azimuthalEquidistant;\n  exports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\n  exports.geoBounds = bounds;\n  exports.geoCentroid = centroid$1;\n  exports.geoCircle = circle$1;\n  exports.geoClipExtent = extent$1;\n  exports.geoConicConformal = conicConformal;\n  exports.geoConicConformalRaw = conicConformalRaw;\n  exports.geoConicEqualArea = conicEqualArea;\n  exports.geoConicEqualAreaRaw = conicEqualAreaRaw;\n  exports.geoConicEquidistant = conicEquidistant;\n  exports.geoConicEquidistantRaw = conicEquidistantRaw;\n  exports.geoDistance = distance;\n  exports.geoEquirectangular = equirectangular;\n  exports.geoEquirectangularRaw = equirectangularRaw;\n  exports.geoGnomonic = gnomonic;\n  exports.geoGnomonicRaw = gnomonicRaw;\n  exports.geoGraticule = graticule;\n  exports.geoInterpolate = interpolate$2;\n  exports.geoLength = length$2;\n  exports.geoMercator = mercator;\n  exports.geoMercatorRaw = mercatorRaw;\n  exports.geoOrthographic = orthographic;\n  exports.geoOrthographicRaw = orthographicRaw;\n  exports.geoPath = index$3;\n  exports.geoProjection = projection;\n  exports.geoProjectionMutator = projectionMutator;\n  exports.geoRotation = rotation;\n  exports.geoStereographic = stereographic;\n  exports.geoStereographicRaw = stereographicRaw;\n  exports.geoStream = stream;\n  exports.geoTransform = transform$1;\n  exports.geoTransverseMercator = transverseMercator;\n  exports.geoTransverseMercatorRaw = transverseMercatorRaw;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3/build/d3.js\n// module id = 0\n// module chunks = 0","export class Ploidy {\n\n  constructor(config) {\n    this._config = config;\n    this._description = this._normalize(this._config.ploidyDesc);\n  }\n\n  // Get number of chromosomes in a chromosome set\n  getChromosomesNumber(setNumber) {\n    if (this._config.ploidyDesc) {\n      var chrSetCode = this._config.ploidyDesc[setNumber];\n      if (chrSetCode instanceof Object) {\n        return Object.keys(chrSetCode)[0].length;\n      } else {\n        return chrSetCode.length;\n      }\n    } else {\n      return this._config.ploidy || 1;\n    }\n  }\n\n  // Normalize use defined description\n  _normalize(description) {\n    var normalized, key, descValue;\n\n    // Return the same if no description provided\n    if (!description) {\n      return description;\n    }\n\n    // Array of normalized description objects\n    normalized = [];\n\n    // Loop through description and normalize\n    for (key in description) {\n      descValue = description[key];\n      if (typeof descValue === 'string') {\n        if (this._config.orientation === 'vertical') {\n          descValue = descValue.split('').reverse();\n        }\n        normalized.push({\n          ancestors: descValue,\n          existence: this._getexistenceArray(descValue.length)\n        });\n      } else {\n        normalized.push({\n          ancestors: Object.keys(descValue)[0],\n          existence: descValue[Object.keys(descValue)[0]]\n        });\n      }\n    }\n\n    return normalized;\n  }\n\n  // Get array filled by '11' elements\n  _getexistenceArray(length) {\n    var array = [];\n\n    for (var i = 0; i < length; i++) {\n      array.push('11');\n    }\n\n    return array;\n  }\n\n  getSetSize(chrSetNumber) {\n    if (this._description) {\n      return this._description[chrSetNumber].ancestors.length;\n    } else {\n      return 1;\n    }\n  }\n\n  // Get ancestor letter\n  getAncestor(chrSetNumber, chrNumber) {\n    if (this._description) {\n      return this._description[chrSetNumber].ancestors[chrNumber];\n    } else {\n      return '';\n    }\n  }\n\n  // Check if chromosome's arm should be rendered.\n  // If no description was provided, method returns true and\n  // something another depending on user provided description.\n  exists(chrSetNumber, chrNumber, armNumber) {\n    if (this._description) {\n      var desc =\n        this._description[chrSetNumber].existence[chrNumber][armNumber];\n      return Number(desc) > 0;\n    } else {\n      return true;\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/ploidy.js","import Ideogram from './core';\n\n// Enable references to Ideogram when loaded via traditional script tag\nwindow.Ideogram = Ideogram;\n\n// Enable references to Ideogram when imported as an ES6 module\nexport default Ideogram;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/index.js","// Developed by Eric Weitz (https://github.com/eweitz)\n\nimport * as d3 from 'd3';\nimport * as d3promise from 'd3.promise';\nimport {Promise} from 'es6-promise';\n\nimport {Ploidy} from './ploidy';\nimport {Layout} from './layouts/layout';\nimport {ModelAdapter} from './model-adapter';\nimport {Chromosome} from './views/chromosome';\nimport {BedParser} from './parsers/bed-parser';\n\nd3.promise = d3promise;\n\nexport default class Ideogram {\n\n  constructor(config) {\n    var orientation,\n      chrWidth, chrHeight,\n      container, rect;\n\n    // Clone the config object, to allow multiple instantiations\n    // without picking up prior ideogram's settings\n    this.config = JSON.parse(JSON.stringify(config));\n\n    // TODO: Document this\n    this._bandsXOffset = 30;\n\n    this.debug = false;\n\n    if (!this.config.dataDir) {\n      this.config.dataDir = '../data/bands/native/';\n    }\n\n    if (!this.config.ploidy) {\n      this.config.ploidy = 1;\n    }\n\n    if (this.config.ploidy > 1) {\n      this.sexChromosomes = {};\n      if (!this.config.sex) {\n        // Default to 'male' per human, mouse reference genomes.\n        // TODO: The default sex value should probably be the heterogametic sex,\n        // i.e. whichever sex has allosomes that differ in morphology.\n        // In mammals and most insects that is the male.\n        // However, in birds and reptiles, that is female.\n        this.config.sex = 'male';\n      }\n      if (this.config.ploidy === 2 && !this.config.ancestors) {\n        this.config.ancestors = {M: '#ffb6c1', P: '#add8e6'};\n        this.config.ploidyDesc = 'MP';\n      }\n    }\n\n    if (!this.config.container) {\n      this.config.container = 'body';\n    }\n\n    this.selector = this.config.container + ' #_ideogram';\n\n    if (!this.config.resolution) {\n      this.config.resolution = 850;\n    }\n\n    if ('showChromosomeLabels' in this.config === false) {\n      this.config.showChromosomeLabels = true;\n    }\n\n    if (!this.config.orientation) {\n      orientation = 'vertical';\n      this.config.orientation = orientation;\n    }\n\n    if (!this.config.chrHeight) {\n      container = this.config.container;\n      rect = document.querySelector(container).getBoundingClientRect();\n\n      if (orientation === 'vertical') {\n        chrHeight = rect.height;\n      } else {\n        chrHeight = rect.width;\n      }\n\n      if (container === 'body') {\n        chrHeight = 400;\n      }\n      this.config.chrHeight = chrHeight;\n    }\n\n    if (!this.config.chrWidth) {\n      chrWidth = 10;\n      chrHeight = this.config.chrHeight;\n\n      if (chrHeight < 900 && chrHeight > 500) {\n        chrWidth = Math.round(chrHeight / 40);\n      } else if (chrHeight >= 900) {\n        chrWidth = Math.round(chrHeight / 45);\n      }\n      this.config.chrWidth = chrWidth;\n    }\n\n    if (!this.config.chrMargin) {\n      if (this.config.ploidy === 1) {\n        this.config.chrMargin = 10;\n      } else {\n        // Defaults polyploid chromosomes to relatively small interchromatid gap\n        this.config.chrMargin = Math.round(this.config.chrWidth / 4);\n      }\n    }\n\n    if (!this.config.showBandLabels) {\n      this.config.showBandLabels = false;\n    }\n\n    if ('showFullyBanded' in this.config) {\n      this.config.showFullyBanded = this.config.showFullyBanded;\n    } else {\n      this.config.showFullyBanded = true;\n    }\n\n    if (!this.config.brush) {\n      this.config.brush = false;\n    }\n\n    if (!this.config.rows) {\n      this.config.rows = 1;\n    }\n\n    this.bump = Math.round(this.config.chrHeight / 125);\n    this.adjustedBump = false;\n    if (this.config.chrHeight < 200) {\n      this.adjustedBump = true;\n      this.bump = 4;\n    }\n\n    if (config.showBandLabels) {\n      this.config.chrMargin += 20;\n    }\n\n    if (config.chromosome) {\n      this.config.chromosomes = [config.chromosome];\n      if ('showBandLabels' in config === false) {\n        this.config.showBandLabels = true;\n      }\n      if ('rotatable' in config === false) {\n        this.config.rotatable = false;\n      }\n    }\n\n    if (!this.config.showNonNuclearChromosomes) {\n      this.config.showNonNuclearChromosomes = false;\n    }\n\n    this.initAnnotSettings();\n\n    this.config.chrMargin = (\n    this.config.chrMargin +\n    this.config.chrWidth +\n    this.config.annotTracksHeight * 2\n  );\n\n    if (config.onLoad) {\n      this.onLoadCallback = config.onLoad;\n    }\n\n    if (config.onDrawAnnots) {\n      this.onDrawAnnotsCallback = config.onDrawAnnots;\n    }\n\n    if (config.onBrushMove) {\n      this.onBrushMoveCallback = config.onBrushMove;\n    }\n\n    this.coordinateSystem = 'iscn';\n\n    this.maxLength = {\n      bp: 0,\n      iscn: 0\n    };\n\n    // The E-Utilies In Depth: Parameters, Syntax and More:\n    // https://www.ncbi.nlm.nih.gov/books/NBK25499/\n    this.eutils = 'https://eutils.ncbi.nlm.nih.gov/entrez/eutils/';\n    this.esearch = this.eutils + 'esearch.fcgi?retmode=json';\n    this.esummary = this.eutils + 'esummary.fcgi?retmode=json';\n    this.elink = this.eutils + 'elink.fcgi?retmode=json';\n\n    this.organisms = {\n      9606: {\n        commonName: 'Human',\n        scientificName: 'Homo sapiens',\n        scientificNameAbbr: 'H. sapiens',\n        assemblies: {\n          default: 'GCF_000001405.26', // GRCh38\n          GRCh38: 'GCF_000001405.26',\n          GRCh37: 'GCF_000001405.13'\n        }\n      },\n      10090: {\n        commonName: 'Mouse',\n        scientificName: 'Mus musculus',\n        scientificNameAbbr: 'M. musculus',\n        assemblies: {\n          default: 'GCF_000001635.20'\n        }\n      },\n      4641: {\n        commonName: 'banana',\n        scientificName: 'Musa acuminata',\n        scientificNameAbbr: 'M. acuminata',\n        assemblies: {\n          default: 'mock'\n        }\n      }\n    };\n\n    // A flat array of chromosomes\n    // (this.chromosomes is an object of\n    // arrays of chromosomes, keyed by organism)\n    this.chromosomesArray = [];\n\n    this.bandsToShow = [];\n\n    this.chromosomes = {};\n    this.numChromosomes = 0;\n    this.bandData = {};\n\n    this.init();\n  }\n\n  /**\n  * Enable use of D3 in client apps, via \"d3 = Ideogram.d3\"\n  */\n  static get d3() {\n    return d3;\n  }\n\n  /**\n  * e.g. \"Homo sapiens\" -> \"homo-sapiens\"\n  */\n  static slugify(value) {\n    return value.toLowerCase().replace(' ', '-')\n  }\n\n  static naturalSort(a,b) {\n    // https://github.com/overset/javascript-natural-sort\n    var q,r,c=/(^([+\\-]?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?(?=\\D|\\s|$))|^0x[\\da-fA-F]+$|\\d+)/g,d=/^\\s+|\\s+$/g,e=/\\s+/g,f=/(^([\\w ]+,?[\\w ]+)?[\\w ]+,?[\\w ]+\\d+:\\d+(:\\d+)?[\\w ]?|^\\d{1,4}[\\/\\-]\\d{1,4}[\\/\\-]\\d{1,4}|^\\w+, \\w+ \\d+, \\d{4})/,g=/^0x[0-9a-f]+$/i,h=/^0/,i=function(a){return(Ideogram.naturalSort.insensitive&&(\"\"+a).toLowerCase()||\"\"+a).replace(d,\"\")},j=i(a),k=i(b),l=j.replace(c,\"\\0$1\\0\").replace(/\\0$/,\"\").replace(/^\\0/,\"\").split(\"\\0\"),m=k.replace(c,\"\\0$1\\0\").replace(/\\0$/,\"\").replace(/^\\0/,\"\").split(\"\\0\"),n=parseInt(j.match(g),16)||1!==l.length&&Date.parse(j),o=parseInt(k.match(g),16)||n&&k.match(f)&&Date.parse(k)||null,p=function(a,b){return(!a.match(h)||1==b)&&parseFloat(a)||a.replace(e,\" \").replace(d,\"\")||0};if(o){if(n<o)return-1;if(n>o)return 1}for(var s=0,t=l.length,u=m.length,v=Math.max(t,u);s<v;s++){if(q=p(l[s]||\"\",t),r=p(m[s]||\"\",u),isNaN(q)!==isNaN(r))return isNaN(q)?1:-1;if(/[^\\x00-\\x80]/.test(q+r)&&q.localeCompare){var w=q.localeCompare(r);return w/Math.abs(w)}if(q<r)return-1;if(q>r)return 1}\n  }\n\n\n  /**\n  * Gets chromosome band data from a\n  * TSV file, or, if band data is prefetched, from an array\n  *\n  * UCSC: #chrom chromStart  chromEnd  name  gieStain\n  * http://genome.ucsc.edu/cgi-bin/hgTables\n  *  - group: Mapping and Sequencing\n  *  - track: Chromosome Band (Ideogram)\n  *\n  * NCBI: #chromosome  arm band  iscn_start  iscn_stop bp_start  bp_stop stain density\n  * ftp://ftp.ncbi.nlm.nih.gov/pub/gdp/ideogram_9606_GCF_000001305.14_550_V1\n  */\n  getBands(content, taxid, chromosomes) {\n    var lines = {},\n      delimiter, tsvLines, columns, line, stain, chr,\n      i, init, tsvLinesLength, source,\n      start, stop, firstColumn, tmp;\n\n    if (content.slice(0, 8) === 'chrBands') {\n      source = 'native';\n    }\n\n    if (\n    chromosomes instanceof Array &&\n    typeof chromosomes[0] === 'object'\n  ) {\n      tmp = [];\n      for (i = 0; i < chromosomes.length; i++) {\n        tmp.push(chromosomes[i].name);\n      }\n      chromosomes = tmp;\n    }\n\n    if (typeof chrBands === 'undefined' && source !== 'native') {\n      delimiter = /\\t/;\n      tsvLines = content.split(/\\r\\n|\\n/);\n      init = 1;\n    } else {\n      delimiter = / /;\n      if (source === 'native') {\n        tsvLines = eval(content);\n      } else {\n        tsvLines = content;\n      }\n      init = 0;\n    }\n\n    firstColumn = tsvLines[0].split(delimiter)[0];\n    if (firstColumn === '#chromosome') {\n      source = 'ncbi';\n    } else if (firstColumn === '#chrom') {\n      source = 'ucsc';\n    } else {\n      source = 'native';\n    }\n\n    tsvLinesLength = tsvLines.length;\n\n    if (source === 'ncbi' || source === 'native') {\n      for (i = init; i < tsvLinesLength; i++) {\n        columns = tsvLines[i].split(delimiter);\n\n        chr = columns[0];\n\n        if (\n        // If a specific set of chromosomes has been requested, and\n        // the current chromosome\n        typeof (chromosomes) !== 'undefined' &&\n        chromosomes.indexOf(chr) === -1\n      ) {\n          continue;\n        }\n\n        if (chr in lines === false) {\n          lines[chr] = [];\n        }\n\n        stain = columns[7];\n        if (columns[8]) {\n          // For e.g. acen and gvar, columns[8] (density) is undefined\n          stain += columns[8];\n        }\n\n        line = {\n          chr: chr,\n          bp: {\n            start: parseInt(columns[5], 10),\n            stop: parseInt(columns[6], 10)\n          },\n          iscn: {\n            start: parseInt(columns[3], 10),\n            stop: parseInt(columns[4], 10)\n          },\n          px: {\n            start: -1,\n            stop: -1,\n            width: -1\n          },\n          name: columns[1] + columns[2],\n          stain: stain,\n          taxid: taxid\n        };\n\n        lines[chr].push(line);\n      }\n    } else if (source === 'ucsc') {\n      for (i = init; i < tsvLinesLength; i++) {\n        // #chrom chromStart  chromEnd  name  gieStain\n        // e.g. for fly:\n        // chr4\t69508\t108296\t102A1\tn/a\n        columns = tsvLines[i].split(delimiter);\n\n        if (columns[0] !== 'chr' + chromosomeName) {\n          continue;\n        }\n\n        stain = columns[4];\n        if (stain === 'n/a') {\n          stain = 'gpos100';\n        }\n        start = parseInt(columns[1], 10);\n        stop = parseInt(columns[2], 10);\n\n        line = {\n          chr: columns[0].split('chr')[1],\n          bp: {\n            start: start,\n            stop: stop\n          },\n          iscn: {\n            start: start,\n            stop: stop\n          },\n          px: {\n            start: -1,\n            stop: -1,\n            width: -1\n          },\n          name: columns[3],\n          stain: stain,\n          taxid: taxid\n        };\n\n        lines[chr].push(line);\n      }\n    }\n\n    return lines;\n  }\n\n  /**\n  * Generates a model object for each chromosome\n  * containing information on its name, DOM ID,\n  * length in base pairs or ISCN coordinates,\n  * cytogenetic bands, centromere position, etc.\n  */\n  getChromosomeModel(bands, chromosome, taxid, chrIndex) {\n    var chr = {},\n      band,\n      width, pxStop,\n      chrHeight = this.config.chrHeight,\n      maxLength = this.maxLength,\n      chrLength,\n      cs, hasBands;\n\n    cs = this.coordinateSystem;\n    hasBands = (typeof bands !== 'undefined');\n\n    if (hasBands) {\n      chr.name = chromosome;\n      chr.length = bands[bands.length - 1][cs].stop;\n      chr.type = 'nuclear';\n    } else {\n      chr = chromosome;\n    }\n\n    chr.chrIndex = chrIndex;\n\n    chr.id = 'chr' + chr.name + '-' + taxid;\n\n    if (this.config.fullChromosomeLabels === true) {\n      var orgName = this.organisms[taxid].scientificNameAbbr;\n      chr.name = orgName + ' chr' + chr.name;\n    }\n\n    chrLength = chr.length;\n\n    pxStop = 0;\n\n    if (hasBands) {\n      for (var i = 0; i < bands.length; i++) {\n        band = bands[i];\n        var csLength = band[cs].stop - band[cs].start;\n        width = chrHeight * chr.length / maxLength[cs] * csLength / chrLength;\n\n        bands[i].px = {start: pxStop, stop: pxStop + width, width: width};\n\n        pxStop = bands[i].px.stop;\n\n        if (hasBands && band.stain === 'acen' && band.name[0] === 'p') {\n          chr.pcenIndex = i;\n        }\n      }\n    } else {\n      pxStop = chrHeight * chr.length / maxLength[cs];\n    }\n\n    chr.width = pxStop;\n\n    chr.scale = {};\n\n    // TODO:\n    //\n    // A chromosome-level scale property is likely\n    // nonsensical for any chromosomes that have cytogenetic band data.\n    // Different bands tend to have ratios between number of base pairs\n    // and physical length.\n    //\n    // However, a chromosome-level scale property is likely\n    // necessary for chromosomes that do not have band data.\n    //\n    // This needs further review.\n    if (this.config.multiorganism === true) {\n      chr.scale.bp = 1;\n      // chr.scale.bp = band.iscn.stop / band.bp.stop;\n      chr.scale.iscn = chrHeight * chrLength / maxLength.bp;\n    } else {\n      chr.scale.bp = chrHeight / maxLength.bp;\n      if (hasBands) {\n        chr.scale.iscn = chrHeight / maxLength.iscn;\n      }\n    }\n    chr.bands = bands;\n\n    chr.centromerePosition = '';\n    if (\n      hasBands && bands[0].name[0] === 'p' && bands[1].name[0] === 'q' &&\n      bands[0].bp.stop - bands[0].bp.start < 2E6\n    ) {\n      // As with almost all mouse chromosome, chimpanzee chr22\n      chr.centromerePosition = 'telocentric';\n\n      // Remove placeholder pter band\n      chr.bands = chr.bands.slice(1);\n    }\n\n    if (hasBands && chr.bands.length === 1) {\n      // Encountered when processing an assembly that has chromosomes with\n      // centromere data, but this chromosome does not.\n      // Example: chromosome F1 in Felis catus.\n      delete chr.bands;\n    }\n\n    return chr;\n  }\n\n  /**\n  * Draws labels for each chromosome, e.g. \"1\", \"2\", \"X\".\n  * If ideogram configuration has 'fullChromosomeLabels: True',\n  * then labels includes name of taxon, which can help when\n  * depicting orthologs.\n  */\n  drawChromosomeLabels() {\n    var ideo = this;\n\n    var chromosomeLabelClass = ideo._layout.getChromosomeLabelClass();\n\n    var chrSetLabelXPosition = ideo._layout.getChromosomeSetLabelXPosition();\n    var chrSetLabelTranslate = ideo._layout.getChromosomeSetLabelTranslate();\n\n    // Append chromosomes set's labels\n    d3.selectAll(ideo.selector + ' .chromosome-set-container')\n      .append('text')\n      .data(ideo.chromosomesArray)\n      .attr('class', 'chromosome-set-label ' + chromosomeLabelClass)\n      .attr('transform', chrSetLabelTranslate)\n      .attr('x', chrSetLabelXPosition)\n      .attr('y', function(d, i) {\n        return ideo._layout.getChromosomeSetLabelYPosition(i);\n      })\n      .attr('text-anchor', ideo._layout.getChromosomeSetLabelAnchor())\n      .each(function(d, i) {\n        // Get label lines\n        var lines;\n        if (d.name.indexOf(' ') === -1) {\n          lines = [d.name];\n        } else {\n          lines = d.name.match(/^(.*)\\s+([^\\s]+)$/).slice(1).reverse();\n        }\n\n        if (\n          'sex' in ideo.config &&\n          ideo.config.ploidy === 2 &&\n          i === ideo.sexChromosomes.index\n        ) {\n          if (ideo.config.sex === 'male') {\n            lines = ['XY'];\n          } else {\n            lines = ['XX'];\n          }\n        }\n\n        // Render label lines\n        d3.select(this).selectAll('tspan')\n          .data(lines)\n          .enter()\n          .append('tspan')\n          .attr('dy', function(d, i) {\n            return i * -1.2 + 'em';\n          })\n          .attr('x', ideo._layout.getChromosomeSetLabelXPosition())\n          .attr('class', function(a, i) {\n            var fullLabels = ideo.config.fullChromosomeLabels;\n            return i === 1 && fullLabels ? 'italic' : null;\n          }).text(String);\n      });\n\n    var setLabelTranslate = ideo._layout.getChromosomeSetLabelTranslate();\n\n    // Append chromosomes labels\n    d3.selectAll(ideo.selector + ' .chromosome-set-container')\n      .each(function(a, chrSetNumber) {\n        d3.select(this).selectAll('.chromosome')\n          .append('text')\n          .attr('class', 'chrLabel')\n          .attr('transform', setLabelTranslate)\n          .attr('x', function(d, i) {\n            return ideo._layout.getChromosomeLabelXPosition(i);\n          }).attr('y', function(d, i) {\n            return ideo._layout.getChromosomeLabelYPosition(i);\n          }).text(function(d, chrNumber) {\n            return ideo._ploidy.getAncestor(chrSetNumber, chrNumber);\n          }).attr('text-anchor', 'middle');\n      });\n  }\n\n  /**\n  * Draws labels and stalks for cytogenetic bands.\n  *\n  * Band labels are text like \"p11.11\".\n  * Stalks are small lines that visually connect labels to their bands.\n  */\n  drawBandLabels(chromosomes) {\n    var i, chr, chrs, taxid, ideo, chrModel, chrIndex, textOffsets;\n\n    ideo = this;\n\n    chrs = [];\n\n    for (taxid in chromosomes) {\n      for (chr in chromosomes[taxid]) {\n        chrs.push(chromosomes[taxid][chr]);\n      }\n    }\n\n    textOffsets = {};\n\n    chrIndex = 0;\n    for (i = 0; i < chrs.length; i++) {\n      chrIndex += 1;\n\n      chrModel = chrs[i];\n\n      chr = d3.select(ideo.selector + ' #' + chrModel.id);\n\n      // var chrMargin = this.config.chrMargin * chrIndex,\n      //   lineY1, lineY2;\n      //\n      // lineY1 = chrMargin;\n      // lineY2 = chrMargin - 8;\n      //\n      // if (\n      //   chrIndex === 1 &&\n      //   \"perspective\" in this.config && this.config.perspective === \"comparative\"\n      // ) {\n      //   lineY1 += 18;\n      //   lineY2 += 18;\n      // }\n\n      textOffsets[chrModel.id] = [];\n\n      chr.selectAll('text')\n      .data(chrModel.bands)\n      .enter()\n      .append('g')\n        .attr('class', function(d, i) {\n          return 'bandLabel bsbsl-' + i;\n        })\n        .attr('transform', function(d) {\n          var transform = ideo._layout.getChromosomeBandLabelTranslate(d, i);\n\n          var x = transform.x;\n          // var y = transform.y;\n\n          textOffsets[chrModel.id].push(x + 13);\n\n          return transform.translate;\n        })\n        .append('text')\n        .attr('text-anchor', ideo._layout.getChromosomeBandLabelAnchor(i))\n        .text(function(d) {\n          return d.name;\n        });\n\n      // var adapter = ModelAdapter.getInstance(ideo.chromosomesArray[i]);\n      // var view = Chromosome.getInstance(adapter, ideo.config, ideo);\n\n      chr.selectAll('line.bandLabelStalk')\n        .data(chrModel.bands)\n        .enter()\n        .append('g')\n        .attr('class', function(d, i) {\n          return 'bandLabelStalk bsbsl-' + i;\n        })\n        .attr('transform', function(d) {\n          var x, y;\n\n          x = ideo.round(d.px.start + d.px.width / 2);\n\n          textOffsets[chrModel.id].push(x + 13);\n          y = -10;\n\n          return 'translate(' + x + ',' + y + ')';\n        })\n        .append('line')\n        .attr('x1', 0)\n        .attr('y1', function() {\n          return ideo._layout.getChromosomeBandTickY1(i);\n        })\n        .attr('x2', 0)\n        .attr('y2', function() {\n          return ideo._layout.getChromosomeBandTickY2(i);\n        });\n    }\n\n    for (i = 0; i < chrs.length; i++) {\n      chrModel = chrs[i];\n\n      var textsLength = textOffsets[chrModel.id].length,\n        overlappingLabelXRight,\n        index,\n        indexesToShow = [],\n        prevHiddenBoxIndex,\n        xLeft,\n        prevLabelXRight,\n        prevTextBoxLeft,\n        prevTextBoxWidth,\n        textPadding;\n\n      overlappingLabelXRight = 0;\n\n      textPadding = 5;\n\n      for (index = 0; index < textsLength; index++) {\n        // Ensures band labels don't overlap\n\n        xLeft = textOffsets[chrModel.id][index];\n\n        if (xLeft < overlappingLabelXRight + textPadding === false) {\n          indexesToShow.push(index);\n        } else {\n          prevHiddenBoxIndex = index;\n          overlappingLabelXRight = prevLabelXRight;\n          continue;\n        }\n\n        if (prevHiddenBoxIndex !== index) {\n          // This getBoundingClientRect() forces Chrome's\n          // 'Recalculate Style' and 'Layout', which takes 30-40 ms on Chrome.\n          // TODO: This forced synchronous layout would be nice to eliminate.\n          // prevTextBox = texts[index].getBoundingClientRect();\n          // prevLabelXRight = prevTextBox.left + prevTextBox.width;\n\n          // TODO: Account for number of characters in prevTextBoxWidth,\n          // maybe also zoom.\n          prevTextBoxLeft = textOffsets[chrModel.id][index];\n          prevTextBoxWidth = 36;\n\n          prevLabelXRight = prevTextBoxLeft + prevTextBoxWidth;\n        }\n\n        if (\n          xLeft < prevLabelXRight + textPadding\n        ) {\n          prevHiddenBoxIndex = index;\n          overlappingLabelXRight = prevLabelXRight;\n        } else {\n          indexesToShow.push(index);\n        }\n      }\n\n      var selectorsToShow = [],\n        ithLength = indexesToShow.length,\n        j;\n\n      for (j = 0; j < ithLength; j++) {\n        index = indexesToShow[j];\n        selectorsToShow.push('#' + chrModel.id + ' .bsbsl-' + index);\n      }\n\n      this.bandsToShow = this.bandsToShow.concat(selectorsToShow);\n    }\n  }\n\n  // Rotates chromosome labels by 90 degrees, e.g. upon clicking a chromosome to focus.\n  rotateChromosomeLabels(chr, chrIndex, orientation, scale) {\n    var chrMargin, chrWidth, ideo, x, y,\n      numAnnotTracks, scaleSvg, tracksHeight, chrMargin2;\n\n    chrWidth = this.config.chrWidth;\n    chrMargin = this.config.chrMargin * chrIndex;\n    numAnnotTracks = this.config.numAnnotTracks;\n\n    ideo = this;\n\n    if (\n    typeof (scale) !== 'undefined' &&\n    scale.hasOwnProperty('x') &&\n    !(scale.x === 1 && scale.y === 1)\n  ) {\n      scaleSvg = 'scale(' + scale.x + ',' + scale.y + ')';\n      x = -6;\n      y = (scale === '' ? -16 : -14);\n    } else {\n      x = -8;\n      y = -16;\n      scale = {x: 1, y: 1};\n      scaleSvg = '';\n    }\n\n    if (orientation === 'vertical' || orientation === '') {\n      var ci = chrIndex - 1;\n\n      if (numAnnotTracks > 1 || orientation === '') {\n        ci -= 1;\n      }\n\n      chrMargin2 = -4;\n      if (ideo.config.showBandLabels === true) {\n        chrMargin2 = ideo.config.chrMargin + chrWidth + 26;\n      }\n\n      chrMargin = ideo.config.chrMargin * ci;\n\n      if (numAnnotTracks > 1 === false) {\n        chrMargin += 1;\n      }\n\n      y = chrMargin + chrMargin2;\n\n      chr.selectAll('text.chrLabel')\n        .attr('transform', scaleSvg)\n        .selectAll('tspan')\n          .attr('x', x)\n          .attr('y', y);\n    } else {\n      chrIndex -= 1;\n\n      chrMargin2 = -chrWidth - 2;\n      if (ideo.config.showBandLabels === true) {\n        chrMargin2 = ideo.config.chrMargin + 8;\n      }\n\n      tracksHeight = ideo.config.annotTracksHeight;\n      if (ideo.config.annotationsLayout !== 'overlay') {\n        tracksHeight *= 2;\n      }\n\n      chrMargin = ideo.config.chrMargin * chrIndex;\n      x = -(chrMargin + chrMargin2) + 3 + tracksHeight;\n      x /= scale.x;\n\n      chr.selectAll('text.chrLabel')\n        .attr('transform', 'rotate(-90)' + scaleSvg)\n        .selectAll('tspan')\n        .attr('x', x)\n        .attr('y', y);\n    }\n  }\n\n  /**\n  * Rotates band labels by 90 degrees, e.g. upon clicking a chromosome to focus.\n  *\n  * This method includes proportional scaling, which ensures that\n  * while the parent chromosome group is scaled strongly in one dimension to fill\n  * available space, the text in the chromosome's band labels is\n  * not similarly distorted, and remains readable.\n  */\n  rotateBandLabels(chr, chrIndex, scale) {\n    var chrMargin, scaleSvg,\n      orientation, bandLabels,\n      ideo = this;\n\n    bandLabels = chr.selectAll('.bandLabel');\n\n    chrWidth = this.config.chrWidth;\n    chrMargin = this.config.chrMargin * chrIndex;\n\n    orientation = chr.attr('data-orientation');\n\n    if (typeof (scale) === 'undefined') {\n      scale = {x: 1, y: 1};\n      scaleSvg = '';\n    } else {\n      scaleSvg = 'scale(' + scale.x + ',' + scale.y + ')';\n    }\n\n    if (\n      chrIndex === 1 &&\n      'perspective' in this.config && this.config.perspective === 'comparative'\n    ) {\n      bandLabels\n        .attr('transform', function(d) {\n          var x, y;\n          x = (8 - chrMargin) - 26;\n          y = ideo.round(2 + d.px.start + d.px.width / 2);\n          return 'rotate(-90)translate(' + x + ',' + y + ')';\n        })\n        .selectAll('text')\n          .attr('text-anchor', 'end');\n    } else if (orientation === 'vertical') {\n      bandLabels\n        .attr('transform', function(d) {\n          var x, y;\n          x = 8 - chrMargin;\n          y = ideo.round(2 + d.px.start + d.px.width / 2);\n          return 'rotate(-90)translate(' + x + ',' + y + ')';\n        })\n        .selectAll('text')\n          .attr('transform', scaleSvg);\n    } else {\n      bandLabels\n        .attr('transform', function(d) {\n          var x, y;\n          x = ideo.round(-8 * scale.x + d.px.start + d.px.width / 2);\n          y = chrMargin - 10;\n          return 'translate(' + x + ',' + y + ')';\n        })\n        .selectAll('text')\n          .attr('transform', scaleSvg);\n\n      chr.selectAll('.bandLabelStalk line')\n        .attr('transform', scaleSvg);\n    }\n  }\n\n  round(coord) {\n    // Rounds an SVG coordinates to two decimal places\n    // e.g. 42.1234567890 -> 42.12\n    // Per http://stackoverflow.com/a/9453447, below method is fastest\n    return Math.round(coord * 100) / 100;\n  }\n\n  /**\n  * Renders all the bands and outlining boundaries of a chromosome.\n  */\n  drawChromosome(chrModel, chrIndex, container, k) {\n    var chrMargin = this.config.chrMargin;\n\n    // Get chromosome model adapter class\n    var adapter = ModelAdapter.getInstance(chrModel);\n\n    // Append chromosome's container\n    var chromosome = container\n        .append('g')\n        .attr('id', chrModel.id)\n        .attr('class', 'chromosome ' + adapter.getCssClass())\n        .attr('transform', 'translate(0, ' + k * chrMargin + ')');\n\n    // Render chromosome\n    return Chromosome.getInstance(adapter, this.config, this)\n        .render(chromosome, chrIndex, k);\n  }\n\n  /**\n  * Rotates a chromosome 90 degrees and shows or hides all other chromosomes\n  * Useful for focusing or defocusing a particular chromosome\n  */\n  rotateAndToggleDisplay(chromosome) {\n    // Do nothing if taxId not defined. But it should be defined.\n    // To fix that bug we should have a way to find chromosome set number.\n    if (!this.config.taxid) {\n      return;\n    }\n\n    var chrSetNumber =\n      Number(d3.select(chromosome.parentNode).attr('data-set-number'));\n\n    var chrNumber = Array.prototype.slice.call(\n          d3.select(chromosome.parentNode).selectAll('g.chromosome')._groups[0]\n      ).indexOf(chromosome);\n\n    return this._layout.rotate(chrSetNumber, chrNumber, chromosome);\n  }\n\n  /**\n  * Converts base pair coordinates to pixel offsets.\n  * Bp-to-pixel scales differ among cytogenetic bands.\n  */\n  convertBpToPx(chr, bp) {\n    var i, band, bpToIscnScale, iscn, px, offset, pxStart, pxLength, iscnStart,\n      iscnStop, iscnLength, bpStart, bpStop, bpLength;\n\n    for (i = 0; i < chr.bands.length; i++) {\n      band = chr.bands[i];\n\n      offset = this._bandsXOffset;\n      bpStart = band.bp.start;\n      bpStop = band.bp.stop;\n      bpLength = bpStop - bpStart;\n      iscnStart = band.iscn.start;\n      iscnStop = band.iscn.stop;\n      iscnLength = iscnStop - iscnStart;\n      pxStart = band.px.start;\n      pxLength = band.px.width;\n\n      if (bp >= bpStart && bp <= bpStop) {\n        bpToIscnScale = iscnLength / bpLength;\n        iscn = iscnStart + (bp - bpStart) * bpToIscnScale;\n\n        px = offset + pxStart + (pxLength * (iscn - iscnStart) / (iscnLength));\n\n        return px;\n      }\n    }\n\n    throw new Error(\n      'Base pair out of range.  ' +\n      'bp: ' + bp + '; length of chr' + chr.name + ': ' + band.bp.stop\n    );\n  }\n\n  /**\n  * Converts base pair coordinates to pixel offsets.\n  * Bp-to-pixel scales differ among cytogenetic bands.\n  */\n  convertPxToBp(chr, px) {\n    var i, band, pxToIscnScale, iscn, bp, pxLength,\n      pxStart, pxStop, iscnStart, iscnStop, bpLength, iscnLength;\n\n    if (px === 0) {\n      px = chr.bands[0].px.start;\n    }\n\n    for (i = 0; i < chr.bands.length; i++) {\n      band = chr.bands[i];\n\n      pxStart = band.px.start;\n      pxStop = band.px.stop;\n      iscnStart = band.iscn.start;\n      iscnStop = band.iscn.stop;\n\n      if (px >= pxStart && px <= pxStop) {\n        iscnLength = iscnStop - iscnStart;\n        pxLength = pxStop - pxStart;\n        bpLength = band.bp.stop - band.bp.start;\n\n        pxToIscnScale = iscnLength / pxLength;\n        iscn = iscnStart + (px - pxStart) * pxToIscnScale;\n\n        bp = band.bp.start + (bpLength * (iscn - iscnStart) / iscnLength);\n\n        return Math.round(bp);\n      }\n    }\n\n    throw new Error(\n      'Pixel out of range.  ' +\n      'px: ' + px + '; length of chr' + chr.name + ': ' + pxStop\n    );\n  }\n\n  /**\n  * Draws a trapezoid connecting a genomic range on\n  * one chromosome to a genomic range on another chromosome;\n  * a syntenic region.\n  */\n  drawSynteny(syntenicRegions) {\n    var t0 = new Date().getTime();\n\n    var r1, r2,\n      syntenies,\n      i, color, opacity,\n      regionID, regions, syntenicRegion,\n      ideo = this;\n\n    syntenies = d3.select(ideo.selector)\n    .insert('g', ':first-child')\n    .attr('class', 'synteny');\n\n    for (i = 0; i < syntenicRegions.length; i++) {\n      regions = syntenicRegions[i];\n\n      r1 = regions.r1;\n      r2 = regions.r2;\n\n      color = '#CFC';\n      if ('color' in regions) {\n        color = regions.color;\n      }\n\n      opacity = 1;\n      if ('opacity' in regions) {\n        opacity = regions.opacity;\n      }\n\n      r1.startPx = this.convertBpToPx(r1.chr, r1.start);\n      r1.stopPx = this.convertBpToPx(r1.chr, r1.stop);\n      r2.startPx = this.convertBpToPx(r2.chr, r2.start);\n      r2.stopPx = this.convertBpToPx(r2.chr, r2.stop);\n\n      regionID = (\n      r1.chr.id + '_' + r1.start + '_' + r1.stop + '_' +\n      '__' +\n      r2.chr.id + '_' + r2.start + '_' + r2.stop\n    );\n\n      syntenicRegion = syntenies.append('g')\n        .attr('class', 'syntenicRegion')\n        .attr('id', regionID)\n        .on('click', function() {\n          var activeRegion = this;\n          var others = d3.selectAll(ideo.selector + ' .syntenicRegion')\n            .filter(function() {\n              return (this !== activeRegion);\n            });\n\n          others.classed('hidden', !others.classed('hidden'));\n        })\n        .on('mouseover', function() {\n          var activeRegion = this;\n          d3.selectAll(ideo.selector + ' .syntenicRegion')\n            .filter(function() {\n              return (this !== activeRegion);\n            })\n            .classed('ghost', true);\n        })\n        .on('mouseout', function() {\n          d3.selectAll(ideo.selector + ' .syntenicRegion')\n            .classed('ghost', false);\n        });\n      var chrWidth = ideo.config.chrWidth;\n      var x1 = this._layout.getChromosomeSetYTranslate(0);\n      var x2 = this._layout.getChromosomeSetYTranslate(1) - chrWidth;\n\n      syntenicRegion.append('polygon')\n        .attr('points',\n          x1 + ', ' + r1.startPx + ' ' +\n          x1 + ', ' + r1.stopPx + ' ' +\n          x2 + ', ' + r2.stopPx + ' ' +\n          x2 + ', ' + r2.startPx\n        )\n        .attr('style', 'fill: ' + color + '; fill-opacity: ' + opacity);\n\n      syntenicRegion.append('line')\n        .attr('class', 'syntenyBorder')\n        .attr('x1', x1)\n        .attr('x2', x2)\n        .attr('y1', r1.startPx)\n        .attr('y2', r2.startPx);\n\n      syntenicRegion.append('line')\n        .attr('class', 'syntenyBorder')\n        .attr('x1', x1)\n        .attr('x2', x2)\n        .attr('y1', r1.stopPx)\n        .attr('y2', r2.stopPx);\n    }\n\n    var t1 = new Date().getTime();\n    if (ideo.debug) {\n      console.log('Time in drawSyntenicRegions: ' + (t1 - t0) + ' ms');\n    }\n  }\n\n  /**\n  * Initializes various annotation settings.  Constructor help function.\n  */\n  initAnnotSettings() {\n    if (\n      this.config.annotationsPath ||\n      this.config.localAnnotationsPath ||\n      this.annots || this.config.annotations\n    ) {\n      if (!this.config.annotationHeight) {\n        var annotHeight = Math.round(this.config.chrHeight / 100);\n        this.config.annotationHeight = annotHeight;\n      }\n\n      if (this.config.annotationTracks) {\n        this.config.numAnnotTracks = this.config.annotationTracks.length;\n      } else {\n        this.config.numAnnotTracks = 1;\n      }\n      this.config.annotTracksHeight =\n      this.config.annotationHeight * this.config.numAnnotTracks;\n\n      if (typeof this.config.barWidth === 'undefined') {\n        this.config.barWidth = 3;\n      }\n    } else {\n      this.config.annotTracksHeight = 0;\n    }\n\n    if (typeof this.config.annotationsColor === 'undefined') {\n      this.config.annotationsColor = '#F00';\n    }\n  }\n\n\n  fetchAnnots(annotsUrl) {\n\n    var ideo = this;\n\n    if (annotsUrl.slice(0, 4) !== 'http') {\n      d3.json(\n        ideo.config.annotationsPath,\n        function(data) {\n          ideo.rawAnnots = data;\n        }\n      );\n      return;\n    }\n\n    var tmp = annotsUrl.split('.');\n    var extension = tmp[tmp.length - 1];\n\n    if (extension !== 'bed') {\n      extension = extension.toUpperCase();\n      alert(\n        'This Ideogram.js feature is very new, and only supports BED at the ' +\n        'moment.  Sorry, check back soon for ' + extension + ' support!'\n      );\n      return;\n    }\n\n    d3.request(annotsUrl, function(data) {\n      ideo.rawAnnots = new BedParser(data.response, ideo).rawAnnots;\n    });\n\n  }\n\n  /**\n  * Draws annotations defined by user\n  */\n  drawAnnots(friendlyAnnots) {\n    var ideo = this,\n      i, j, annot,\n      rawAnnots = [],\n      rawAnnot, keys,\n      chr,\n      chrs = ideo.chromosomes[ideo.config.taxid]; // TODO: multiorganism\n\n    // Occurs when filtering\n    if ('annots' in friendlyAnnots[0]) {\n      return ideo.drawProcessedAnnots(friendlyAnnots);\n    }\n\n    for (chr in chrs) {\n      rawAnnots.push({chr: chr, annots: []});\n    }\n\n    for (i = 0; i < friendlyAnnots.length; i++) {\n      annot = friendlyAnnots[i];\n\n      for (j = 0; j < rawAnnots.length; j++) {\n        if (annot.chr === rawAnnots[j].chr) {\n          rawAnnot = [\n            annot.name,\n            annot.start,\n            annot.stop - annot.start\n          ];\n          if ('color' in annot) {\n            rawAnnot.push(annot.color);\n          }\n          if ('shape' in annot) {\n            rawAnnot.push(annot.shape);\n          }\n          rawAnnots[j].annots.push(rawAnnot);\n          break;\n        }\n      }\n    }\n\n    keys = ['name', 'start', 'length'];\n    if ('color' in friendlyAnnots[0]) {\n      keys.push('color');\n    }\n    if ('shape' in friendlyAnnots[0]) {\n      keys.push('shape');\n    }\n    ideo.rawAnnots = {keys: keys, annots: rawAnnots};\n\n    ideo.annots = ideo.processAnnotData(ideo.rawAnnots);\n\n    ideo.drawProcessedAnnots(ideo.annots);\n  }\n\n  /**\n  * Proccesses genome annotation data.\n  * Genome annotations represent features like a gene, SNP, etc. as\n  * a small graphical object on or beside a chromosome.\n  * Converts raw annotation data from server, which is structured as\n  * an array of arrays, into a more verbose data structure consisting\n  * of an array of objects.\n  * Also adds pixel offset information.\n  */\n  processAnnotData(rawAnnots) {\n    var keys,\n      i, j, k, m, annot, annots, annotsByChr,\n      chr,\n      chrModel, ra,\n      startPx, stopPx, px,\n      color,\n      ideo = this;\n\n    keys = rawAnnots.keys;\n    rawAnnots = rawAnnots.annots;\n\n    annots = [];\n\n    m = -1;\n    for (i = 0; i < rawAnnots.length; i++) {\n\n      annotsByChr = rawAnnots[i];\n\n      chr = annotsByChr.chr;\n      chrModel = ideo.chromosomes[ideo.config.taxid][chr];\n\n      if (typeof chrModel === 'undefined') {\n        console.warn(\n          'Chromosome \"' + chr + '\" undefined in ideogram; ' +\n          annotsByChr.annots.length + ' annotations not shown'\n        );\n        continue;\n      }\n\n      m++;\n      annots.push({chr: annotsByChr.chr, annots: []});\n\n      for (j = 0; j < annotsByChr.annots.length; j++) {\n        ra = annotsByChr.annots[j];\n        annot = {};\n\n        for (var k = 0; k < keys.length; k++) {\n          annot[keys[k]] = ra[k];\n        }\n\n        annot.stop = annot.start + annot.length;\n\n        startPx = ideo.convertBpToPx(chrModel, annot.start);\n        stopPx = ideo.convertBpToPx(chrModel, annot.stop);\n\n        px = Math.round((startPx + stopPx) / 2) - 28;\n\n        color = ideo.config.annotationsColor;\n        if (ideo.config.annotationTracks) {\n          annot.trackIndex = ra[3];\n          color = ideo.config.annotationTracks[annot.trackIndex].color;\n        } else {\n          annot.trackIndex = 0;\n        }\n\n        if ('color' in annot) {\n          color = annot.color;\n        }\n\n        annot.chr = chr;\n        annot.chrIndex = i;\n        annot.px = px;\n        annot.startPx = startPx - 30;\n        annot.stopPx = stopPx - 30;\n        annot.color = color;\n\n        annots[m].annots.push(annot);\n      }\n    }\n\n    return annots;\n  }\n\n  /*\n  * Can be used for bar chart or sparkline\n  */\n  getHistogramBars(annots) {\n    var t0 = new Date().getTime();\n\n    var i, j, chr,\n      chrModel, chrModels, chrPxStop, px, bp,\n      chrAnnots, chrName, chrIndex, annot,\n      bars, bar, barPx, nextBarPx, barWidth,\n      maxAnnotsPerBar, color, lastBand,\n      numBins, barAnnots, barCount, height,\n      firstGet = false,\n      histogramScaling,\n      ideo = this;\n\n    bars = [];\n\n    barWidth = ideo.config.barWidth;\n    chrModels = ideo.chromosomes[ideo.config.taxid];\n    color = ideo.config.annotationsColor;\n\n    if ('histogramScaling' in ideo.config) {\n      histogramScaling = ideo.config.histogramScaling;\n    } else {\n      histogramScaling = 'relative';\n    }\n\n    if (typeof ideo.maxAnnotsPerBar === 'undefined') {\n      ideo.maxAnnotsPerBar = {};\n      firstGet = true;\n    }\n\n    for (chr in chrModels) {\n      chrModel = chrModels[chr];\n      chrIndex = chrModel.chrIndex;\n      lastBand = chrModel.bands[chrModel.bands.length - 1];\n      chrPxStop = lastBand.px.stop;\n      numBins = Math.round(chrPxStop / barWidth);\n      bar = {chr: chr, annots: []};\n      for (i = 0; i < numBins; i++) {\n        px = i * barWidth - ideo.bump;\n        bp = ideo.convertPxToBp(chrModel, px + ideo.bump);\n        bar.annots.push({\n          bp: bp,\n          px: px - ideo.bump,\n          count: 0,\n          chrIndex: chrIndex,\n          chrName: chr,\n          color: color,\n          annots: []\n        });\n      }\n      bars.push(bar);\n    }\n\n    for (chr in annots) {\n      chrAnnots = annots[chr].annots;\n      chrName = annots[chr].chr;\n      chrModel = chrModels[chrName];\n      chrIndex = chrModel.chrIndex - 1;\n      barAnnots = bars[chrIndex].annots;\n      for (i = 0; i < chrAnnots.length; i++) {\n        annot = chrAnnots[i];\n        px = annot.px - ideo.bump;\n        for (j = 0; j < barAnnots.length; j++) {\n          barPx = barAnnots[j].px;\n          nextBarPx = barPx + barWidth;\n          if (j === barAnnots.length - 1) {\n            nextBarPx += barWidth;\n          }\n          if (px >= barPx && px < nextBarPx) {\n            bars[chrIndex].annots[j].count += 1;\n            bars[chrIndex].annots[j].annots.push(annot);\n            break;\n          }\n        }\n      }\n    }\n\n    if (firstGet === true || histogramScaling === 'relative') {\n      maxAnnotsPerBar = 0;\n      for (i = 0; i < bars.length; i++) {\n        annots = bars[i].annots;\n        for (j = 0; j < annots.length; j++) {\n          barCount = annots[j].count;\n          if (barCount > maxAnnotsPerBar) {\n            maxAnnotsPerBar = barCount;\n          }\n        }\n      }\n      ideo.maxAnnotsPerBar[chr] = maxAnnotsPerBar;\n    }\n\n    // Set each bar's height to be proportional to\n    // the height of the bar with the most annotations\n    for (i = 0; i < bars.length; i++) {\n      annots = bars[i].annots;\n      for (j = 0; j < annots.length; j++) {\n        barCount = annots[j].count;\n        height = (barCount / ideo.maxAnnotsPerBar[chr]) * ideo.config.chrMargin;\n      // console.log(height)\n        bars[i].annots[j].height = height;\n      }\n    }\n\n    var t1 = new Date().getTime();\n    if (ideo.debug) {\n      console.log('Time spent in getHistogramBars: ' + (t1 - t0) + ' ms');\n    }\n\n    ideo.bars = bars;\n\n    return bars;\n  }\n\n  /**\n  * Fills out annotations data structure such that its top-level list of arrays\n  * matches that of this ideogram's chromosomes list in order and number\n  * Fixes https://github.com/eweitz/ideogram/issues/66\n  */\n  fillAnnots(annots) {\n    var filledAnnots, chrs, chrArray, i, chr, annot, chrIndex;\n\n    filledAnnots = [];\n    chrs = [];\n    chrArray = this.chromosomesArray;\n\n    for (i = 0; i < chrArray.length; i++) {\n      chr = chrArray[i].name;\n      chrs.push(chr);\n      filledAnnots.push({chr: chr, annots: []});\n    }\n\n    for (i = 0; i < annots.length; i++) {\n      annot = annots[i];\n      chrIndex = chrs.indexOf(annot.chr);\n      if (chrIndex !== -1) {\n        filledAnnots[chrIndex] = annot;\n      }\n    }\n\n    return filledAnnots;\n  }\n\n  /**\n  * Draws genome annotations on chromosomes.\n  * Annotations can be rendered as either overlaid directly\n  * on a chromosome, or along one or more \"tracks\"\n  * running parallel to each chromosome.\n  */\n  drawProcessedAnnots(annots) {\n    var chrMargin, chrWidth, layout,\n      annotHeight, triangle, circle, r, chrAnnot,\n      x1, x2, y1, y2,\n      filledAnnots,\n      ideo = this;\n\n    chrMargin = this.config.chrMargin;\n    chrWidth = this.config.chrWidth;\n\n    layout = 'tracks';\n    if (this.config.annotationsLayout) {\n      layout = this.config.annotationsLayout;\n    }\n\n    if (layout === 'histogram') {\n      annots = ideo.getHistogramBars(annots);\n    }\n\n    annotHeight = ideo.config.annotationHeight;\n\n    triangle =\n    'l -' + annotHeight + ' ' +\n    (2 * annotHeight) +\n    ' l ' + (2 * annotHeight) + ' 0 z';\n\n    // From http://stackoverflow.com/a/10477334, with a minor change (\"m -r, r\")\n    // Circles are supported natively via <circle>, but having it as a path\n    // simplifies handling triangles, circles and other shapes in the same\n    // D3 call\n    r = annotHeight;\n    circle =\n    'm -' + r + ', ' + r +\n    'a ' + r + ',' + r + ' 0 1,0 ' + (r * 2) + ',0' +\n    'a ' + r + ',' + r + ' 0 1,0 -' + (r * 2) + ',0';\n\n    filledAnnots = ideo.fillAnnots(annots);\n\n    chrAnnot = d3.selectAll(ideo.selector + ' .chromosome')\n      .data(filledAnnots)\n        .selectAll('path.annot')\n        .data(function(d) {\n          return d.annots;\n        })\n        .enter();\n\n    if (layout === 'tracks') {\n      chrAnnot\n      .append('g')\n      .attr('id', function(d) {\n        return d.id;\n      })\n      .attr('class', 'annot')\n      .attr('transform', function(d) {\n        var y = ideo.config.chrWidth + (d.trackIndex * annotHeight * 2);\n        return 'translate(' + d.px + ',' + y + ')';\n      })\n      .append('path')\n      .attr('d', function(d) {\n        if (!d.shape || d.shape === 'triangle') {\n          return 'm0,0' + triangle;\n        } else if (d.shape === 'circle') {\n          return circle;\n        }\n      })\n      .attr('fill', function(d) {\n        return d.color;\n      });\n    } else if (layout === 'overlay') {\n      // Overlaid annotations appear directly on chromosomes\n\n      chrAnnot.append('polygon')\n        .attr('id', function(d) {\n          return d.id;\n        })\n        .attr('class', 'annot')\n        .attr('points', function(d) {\n          if (d.stopPx - d.startPx > 1) {\n            x1 = d.startPx;\n            x2 = d.stopPx;\n          } else {\n            x1 = d.px - 0.5;\n            x2 = d.px + 0.5;\n          }\n          y1 = chrWidth;\n          y2 = 0;\n\n          return (\n            x1 + ',' + y1 + ' ' +\n            x2 + ',' + y1 + ' ' +\n            x2 + ',' + y2 + ' ' +\n            x1 + ',' + y2\n          );\n        })\n        .attr('fill', function(d) {\n          return d.color;\n        });\n    } else if (layout === 'histogram') {\n      chrAnnot.append('polygon')\n        // .attr('id', function(d, i) { return d.id; })\n        .attr('class', 'annot')\n        .attr('points', function(d) {\n          x1 = d.px + ideo.bump;\n          x2 = d.px + ideo.config.barWidth + ideo.bump;\n          y1 = chrWidth;\n          y2 = chrWidth + d.height;\n\n          var thisChrWidth = ideo.chromosomesArray[d.chrIndex - 1].width;\n\n          if (x2 > thisChrWidth) {\n            x2 = thisChrWidth;\n          }\n\n          return (\n            x1 + ',' + y1 + ' ' +\n            x2 + ',' + y1 + ' ' +\n            x2 + ',' + y2 + ' ' +\n            x1 + ',' + y2\n          );\n        })\n        .attr('fill', function(d) {\n          return d.color;\n        });\n    }\n\n    if (ideo.onDrawAnnotsCallback) {\n      ideo.onDrawAnnotsCallback();\n    }\n  }\n\n  onBrushMove() {\n    call(this.onBrushMoveCallback);\n  }\n\n  createBrush(from, to) {\n    var ideo = this,\n      width = ideo.config.chrWidth + 6.5,\n      length = ideo.config.chrHeight,\n      chr = ideo.chromosomesArray[0],\n      chrLengthBp = chr.bands[chr.bands.length - 1].bp.stop,\n      x0, x1,\n      xOffset = this._layout.getMargin().left,\n      xScale = d3.scaleLinear()\n          .domain([0, d3.max(chr.bands, function(band) {\n            return band.bp.stop;\n          })]).range([xOffset, d3.max(chr.bands, function(band) {\n            return band.px.stop;\n          }) + xOffset]);\n\n    if (typeof from === 'undefined') {\n      from = Math.floor(chrLengthBp / 10);\n    }\n\n    if (typeof right === 'undefined') {\n      to = Math.ceil(from * 2);\n    }\n\n    x0 = ideo.convertBpToPx(chr, from);\n    x1 = ideo.convertBpToPx(chr, to);\n\n    ideo.selectedRegion = {from: from, to: to, extent: (to - from)};\n\n    ideo.brush = d3.brushX()\n      .extent([[xOffset, 0], [length + xOffset, width]])\n      .on('brush', onBrushMove);\n\n    var yTranslate = this._layout.getChromosomeSetYTranslate(0);\n    var yOffset = yTranslate + (ideo.config.chrWidth - width) / 2;\n    d3.select(ideo.selector).append('g')\n      .attr('class', 'brush')\n      .attr('transform', 'translate(0, ' + yOffset + ')')\n      .call(ideo.brush)\n      .call(ideo.brush.move, [x0, x1]);\n\n    function onBrushMove() {\n      var extent = d3.event.selection.map(xScale.invert),\n        from = Math.floor(extent[0]),\n        to = Math.ceil(extent[1]);\n\n      ideo.selectedRegion = {from: from, to: to, extent: (to - from)};\n\n      if (ideo.onBrushMove) {\n        ideo.onBrushMoveCallback();\n      }\n    }\n  }\n\n  /**\n  * Called when Ideogram has finished initializing.\n  * Accounts for certain ideogram properties not being set until\n  * asynchronous requests succeed, etc.\n  */\n  onLoad() {\n    call(this.onLoadCallback);\n  }\n\n  onDrawAnnots() {\n    call(this.onDrawAnnotsCallback);\n  }\n\n  /*\n  * Returns SVG gradients that give chromosomes a polished look\n  */\n  getBandColorGradients() {\n    var colors,\n      stain, color1, color2, color3,\n      css,\n      gradients = '';\n\n    colors = [\n      ['gneg', '#FFF', '#FFF', '#DDD'],\n      ['gpos25', '#C8C8C8', '#DDD', '#BBB'],\n      ['gpos33', '#BBB', '#BBB', '#AAA'],\n      ['gpos50', '#999', '#AAA', '#888'],\n      ['gpos66', '#888', '#888', '#666'],\n      ['gpos75', '#777', '#777', '#444'],\n      ['gpos100', '#444', '#666', '#000'],\n      ['acen', '#FEE', '#FEE', '#FDD'],\n      ['noBands', '#BBB', '#BBB', '#AAA']\n    ];\n\n    for (var i = 0; i < colors.length; i++) {\n      stain = colors[i][0];\n      color1 = colors[i][1];\n      color2 = colors[i][2];\n      color3 = colors[i][3];\n      gradients +=\n      '<linearGradient id=\"' + stain + '\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">';\n      if (stain === \"gneg\") {\n        gradients +=\n        '<stop offset=\"70%\" stop-color=\"' + color2 + '\" />' +\n        '<stop offset=\"95%\" stop-color=\"' + color3 + '\" />' +\n        '<stop offset=\"100%\" stop-color=\"' + color1 + '\" />';\n      } else {\n        gradients +=\n        '<stop offset=\"5%\" stop-color=\"' + color1 + '\" />' +\n        '<stop offset=\"15%\" stop-color=\"' + color2 + '\" />' +\n        '<stop offset=\"60%\" stop-color=\"' + color3 + '\" />';\n      }\n      gradients +=\n      '</linearGradient>';\n    }\n\n    gradients +=\n    '<pattern id=\"stalk\" width=\"2\" height=\"1\" patternUnits=\"userSpaceOnUse\" ' +\n      'patternTransform=\"rotate(30 0 0)\">' +\n      '<rect x=\"0\" y=\"0\" width=\"10\" height=\"2\" fill=\"#CCE\" /> ' +\n       '<line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"100%\" style=\"stroke:#88B; ' +\n        'stroke-width:0.7;\" />' +\n    '</pattern>' +\n    '<pattern id=\"gvar\" width=\"2\" height=\"1\" patternUnits=\"userSpaceOnUse\" ' +\n      'patternTransform=\"rotate(-30 0 0)\">' +\n      '<rect x=\"0\" y=\"0\" width=\"10\" height=\"2\" fill=\"#DDF\" /> ' +\n       '<line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"100%\" style=\"stroke:#99C; ' +\n          'stroke-width:0.7;\" />' +\n    '</pattern>';\n\n    gradients = \"<defs>\" + gradients + \"</defs>\";\n    css = \"<style>\" +\n    '.gneg {fill: url(\"#gneg\")} ' +\n    '.gpos25 {fill: url(\"#gpos25\")} ' +\n    '.gpos33 {fill: url(\"#gpos33\")} ' +\n    '.gpos50 {fill: url(\"#gpos50\")} ' +\n    '.gpos66 {fill: url(\"#gpos66\")} ' +\n    '.gpos75 {fill: url(\"#gpos75\")} ' +\n    '.gpos100 {fill: url(\"#gpos100\")} ' +\n    '.gpos {fill: url(\"#gpos100\")} ' +\n    '.acen {fill: url(\"#acen\")} ' +\n    '.stalk {fill: url(\"#stalk\")} ' +\n    '.gvar {fill: url(\"#gvar\")} ' +\n    '.noBands {fill: url(\"#noBands\")} ' +\n    '.chromosome {fill: url(\"#noBands\")} ' +\n  '</style>';\n    gradients = css + gradients;\n\n  // alert(gradients)\n\n    return gradients;\n  }\n\n/*\n*  Returns an NCBI taxonomy identifier (taxid) for the configured organism\n*/\n  getTaxidFromEutils(callback) {\n    var organism, taxonomySearch, taxid,\n      ideo = this;\n\n    organism = ideo.config.organism;\n\n    taxonomySearch = ideo.esearch + '&db=taxonomy&term=' + organism;\n\n    d3.json(taxonomySearch, function(data) {\n      taxid = data.esearchresult.idlist[0];\n      return callback(taxid);\n    });\n  }\n\n  /**\n  * Returns an array of taxids for the current ideogram\n  * Also sets configuration parameters related to taxid(s), whether ideogram is\n  * multiorganism, and adjusts chromosomes parameters as needed\n  **/\n  getTaxids(callback) {\n    var ideo = this,\n      taxid, taxids,\n      org, orgs, i,\n      taxidInit, tmpChrs,\n      assembly, chromosomes,\n      multiorganism, promise;\n\n    taxidInit = 'taxid' in ideo.config;\n\n    ideo.config.multiorganism = (\n    ('organism' in ideo.config && ideo.config.organism instanceof Array) ||\n    (taxidInit && ideo.config.taxid instanceof Array)\n  );\n\n    multiorganism = ideo.config.multiorganism;\n\n    if ('organism' in ideo.config) {\n      // Ideogram instance was constructed using common organism name(s)\n      if (multiorganism) {\n        orgs = ideo.config.organism;\n      } else {\n        orgs = [ideo.config.organism];\n      }\n\n      taxids = [];\n      tmpChrs = {};\n      for (i = 0; i < orgs.length; i++) {\n      // Gets a list of taxids from common organism names\n        org = orgs[i];\n        for (taxid in ideo.organisms) {\n          if (ideo.organisms[taxid].commonName.toLowerCase() === org) {\n            taxids.push(taxid);\n            if (multiorganism) {\n            // Adjusts 'chromosomes' configuration parameter to make object\n            // keys use taxid instead of common organism name\n              tmpChrs[taxid] = ideo.config.chromosomes[org];\n            }\n          }\n        }\n      }\n\n      if (taxids.length === 0) {\n        promise = new Promise(function(resolve) {\n          ideo.getTaxidFromEutils(resolve);\n        });\n\n        promise.then(function(data) {\n          var organism = ideo.config.organism,\n            dataDir = ideo.config.dataDir,\n            urlOrg = organism.replace(' ', '-');\n\n          taxid = data;\n          taxids.push(taxid);\n\n          ideo.config.taxids = taxids;\n          ideo.organisms[taxid] = {\n            commonName: '',\n            scientificName: ideo.config.organism,\n            scientificNameAbbr: ''\n          };\n\n          var fullyBandedTaxids = ['9606', '10090', '10116'];\n          if (\n          fullyBandedTaxids.indexOf(taxid) !== -1 &&\n          ideo.config.showFullyBanded === false\n        ) {\n            urlOrg += '-no-bands';\n          }\n          var chromosomesUrl = dataDir + urlOrg + '.js';\n\n          var promise = new Promise(function(resolve, reject) {\n            d3.request(chromosomesUrl).get(function(error, data) {\n              if (error) {\n                reject(Error(error));\n              }\n              resolve(data);\n            });\n          });\n\n          return promise\n          .then(\n            function(data) {\n              // Check if chromosome data exists locally.\n              // This is used for pre-processed centromere data,\n              // which is not accessible via EUtils.  See get_chromosomes.py.\n\n              var asmAndChrArray = [],\n                chromosomes = [],\n                seenChrs = {},\n                chr;\n\n              eval(data.response);\n\n              asmAndChrArray.push('');\n\n              for (var i = 0; i < chrBands.length; i++) {\n                chr = chrBands[i].split(' ')[0];\n                if (chr in seenChrs) {\n                  continue;\n                } else {\n                  chromosomes.push({name: chr, type: 'nuclear'});\n                  seenChrs[chr] = 1;\n                }\n              }\n              chromosomes = chromosomes.sort(ideo.sortChromosomes);\n              asmAndChrArray.push(chromosomes);\n              ideo.coordinateSystem = 'iscn';\n              return asmAndChrArray;\n            },\n            function() {\n              return new Promise(function(resolve) {\n                ideo.coordinateSystem = 'bp';\n                ideo.getAssemblyAndChromosomesFromEutils(resolve);\n              });\n            }\n          );\n        })\n      .then(function(asmChrArray) {\n        assembly = asmChrArray[0];\n        chromosomes = asmChrArray[1];\n\n        ideo.config.chromosomes = chromosomes;\n        ideo.organisms[taxid].assemblies = {\n          default: assembly\n        };\n\n        callback(taxids);\n      });\n      } else {\n        ideo.config.taxids = taxids;\n        if (multiorganism) {\n          ideo.config.chromosomes = tmpChrs;\n        }\n\n        callback(taxids);\n      }\n    } else {\n      if (multiorganism) {\n        ideo.coordinateSystem = 'bp';\n        if (taxidInit) {\n          taxids = ideo.config.taxid;\n        }\n      } else {\n        if (taxidInit) {\n          taxids = [ideo.config.taxid];\n        }\n        ideo.config.taxids = taxids;\n      }\n\n      callback(taxids);\n    }\n  }\n\n  sortChromosomes(a, b) {\n    var aIsNuclear = a.type === 'nuclear',\n      bIsNuclear = b.type === 'nuclear',\n      aIsCP = a.type === 'chloroplast',\n      bIsCP = b.type === 'chloroplast',\n      aIsMT = a.type === 'mitochondrion',\n      bIsMT = b.type === 'mitochondrion';\n      // aIsPlastid = aIsMT && a.name !== 'MT', // e.g. B1 in rice genome GCF_001433935.1\n      // bIsPlastid = bIsMT && b.name !== 'MT';\n\n    if (aIsNuclear && bIsNuclear) {\n      return Ideogram.naturalSort(a.name, b.name);\n    } else if (!aIsNuclear && bIsNuclear) {\n      return 1;\n    } else if (aIsMT && bIsCP) {\n      return 1;\n    } else if (aIsCP && bIsMT) {\n      return -1;\n    } else if (!aIsMT && !aIsCP && (bIsMT || bIsCP)) {\n      return -1;\n    }\n  }\n\n  /*\n  *  Returns names and lengths of chromosomes for an organism's best-known\n  *  genome assembly.  Gets data from NCBI EUtils web API.\n  */\n  getAssemblyAndChromosomesFromEutils(callback) {\n    var asmAndChrArray, // [assembly_accession, chromosome_objects_array]\n      organism, assemblyAccession, chromosomes, asmSearch,\n      asmUid, asmSummary,\n      rsUid, nuccoreLink,\n      links, ntSummary,\n      results, result, cnIndex, chrName, chrLength, chromosome, type,\n      ideo = this;\n\n    organism = ideo.config.organism;\n\n    asmAndChrArray = [];\n    chromosomes = [];\n\n    asmSearch =\n      ideo.esearch +\n      '&db=assembly' +\n      '&term=%22' + organism + '%22[organism]' +\n        'AND%20(%22latest%20refseq%22[filter])%20' +\n        'AND%20(%22chromosome%20level%22[filter]%20' +\n        'OR%20%22complete%20genome%22[filter])';\n\n    var promise = d3.promise.json(asmSearch);\n\n    promise\n      .then(function(data) {\n        // NCBI Assembly database's internal identifier (uid) for this assembly\n        asmUid = data.esearchresult.idlist[0];\n        asmSummary = ideo.esummary + '&db=assembly&id=' + asmUid;\n\n        return d3.promise.json(asmSummary);\n      })\n      .then(function(data) {\n        // RefSeq UID for this assembly\n        rsUid = data.result[asmUid].rsuid;\n        assemblyAccession = data.result[asmUid].assemblyaccession;\n\n        asmAndChrArray.push(assemblyAccession);\n\n        // Get a list of IDs for the chromosomes in this genome.\n        //\n        // This information does not seem to be available from well-known\n        // NCBI databases like Assembly or Nucleotide, so we use GenColl,\n        // a lesser-known NCBI database.\n        var qs = '&db=nuccore&linkname=gencoll_nuccore_chr&from_uid=' + rsUid;\n        nuccoreLink = ideo.elink + qs;\n\n        return d3.promise.json(nuccoreLink);\n      })\n      .then(function(data) {\n        links = data.linksets[0].linksetdbs[0].links.join(',');\n        ntSummary = ideo.esummary + '&db=nucleotide&id=' + links;\n\n        return d3.promise.json(ntSummary);\n      })\n      .then(function(data) {\n        results = data.result;\n\n        for (var x in results) {\n          result = results[x];\n\n          // omit list of reult uids\n          if (x === 'uids') {\n            continue;\n          }\n\n          if (result.genome === 'mitochondrion') {\n            if (ideo.config.showNonNuclearChromosomes) {\n              type = result.genome;\n              cnIndex = result.subtype.split('|').indexOf('plasmid');\n              if (cnIndex === -1) {\n                chrName = 'MT';\n              } else {\n                // Seen in e.g. rice genome IRGSP-1.0 (GCF_001433935.1),\n                // From https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?retmode=json&db=nucleotide&id=996703432,996703431,996703430,996703429,996703428,996703427,996703426,996703425,996703424,996703423,996703422,996703421,194033210,11466763,7524755\n                // genome: 'mitochondrion',\n                // subtype: 'cell_line|plasmid',\n                // subname: 'A-58 CMS|B1',\n                chrName = result.subname.split('|')[cnIndex];\n              }\n            } else {\n              continue;\n            }\n          } else if (\n            result.genome === 'chloroplast' ||\n            result.genome === 'plastid'\n          ) {\n            type = 'chloroplast';\n            // Plastid encountered with rice genome IRGSP-1.0 (GCF_001433935.1)\n            if (ideo.config.showNonNuclearChromosomes) {\n              chrName = 'CP';\n            } else {\n              continue;\n            }\n          } else {\n            type = 'nuclear';\n            cnIndex = result.subtype.split('|').indexOf('chromosome');\n\n            chrName = result.subname.split('|')[cnIndex];\n\n            if (\n              typeof chrName !== 'undefined' &&\n              chrName.substr(0, 3) === 'chr'\n            ) {\n              // Convert \"chr12\" to \"12\", e.g. for banana (GCF_000313855.2)\n              chrName = chrName.substr(3);\n            }\n          }\n\n          chrLength = result.slen;\n\n          chromosome = {\n            name: chrName,\n            length: chrLength,\n            type: type\n          };\n\n          chromosomes.push(chromosome);\n        }\n\n        chromosomes = chromosomes.sort(ideo.sortChromosomes);\n        asmAndChrArray.push(chromosomes);\n\n        ideo.coordinateSystem = 'bp';\n\n        return callback(asmAndChrArray);\n      });\n  }\n\n  drawSexChromosomes(bandsArray, taxid, container, defs, j, chrs) {\n    var chromosome, bands, chrModel, shape, sci, k,\n      sexChromosomeIndexes,\n      ideo = this;\n\n    if (ideo.config.sex === 'male') {\n      sexChromosomeIndexes = [1, 0];\n    } else {\n      sexChromosomeIndexes = [0, 0];\n    }\n\n    for (k = 0; k < sexChromosomeIndexes.length; k++) {\n      sci = sexChromosomeIndexes[k] + j;\n      chromosome = chrs[sci];\n      bands = bandsArray[sci];\n      chrModel = ideo.getChromosomeModel(bands, chromosome, taxid, sci);\n      shape = ideo.drawChromosome(chrModel, j, container, k);\n      defs.append('clipPath')\n        .attr('id', chrModel.id + '-chromosome-set-clippath')\n        .selectAll('path')\n        .data(shape)\n        .enter()\n        .append('path')\n        .attr('d', function(d) {\n          return d.path;\n        }).attr('class', function(d) {\n          return d.class;\n        });\n    }\n  }\n\n  /*\n  * Configures chromosome data and calls downstream chromosome drawing functions\n  */\n  initDrawChromosomes(bandsArray) {\n    var ideo = this,\n      taxids = ideo.config.taxids,\n      ploidy = ideo.config.ploidy,\n      taxid,\n      chrIndex = 0,\n      chrSetNumber = 0,\n      bands,\n      i, j, chrs, chromosome, chrModel,\n      defs, transform;\n\n    defs = d3.select(ideo.selector + ' defs');\n\n    for (i = 0; i < taxids.length; i++) {\n      taxid = taxids[i];\n      chrs = ideo.config.chromosomes[taxid];\n\n      ideo.chromosomes[taxid] = {};\n\n      ideo.setSexChromosomes(chrs);\n\n      for (j = 0; j < chrs.length; j++) {\n        chromosome = chrs[j];\n        bands = bandsArray[chrIndex];\n        chrIndex += 1;\n\n        chrModel = ideo.getChromosomeModel(bands, chromosome, taxid, chrIndex);\n\n        ideo.chromosomes[taxid][chromosome] = chrModel;\n        ideo.chromosomesArray.push(chrModel);\n\n        if (\n          'sex' in ideo.config &&\n          (\n            ploidy === 2 && ideo.sexChromosomes.index + 2 === chrIndex ||\n            ideo.config.sex === 'female' && chrModel.name === 'Y'\n          )\n        ) {\n          continue;\n        }\n\n        transform = ideo._layout.getChromosomeSetTranslate(chrSetNumber);\n        chrSetNumber += 1;\n\n        // Append chromosome set container\n        var container = d3.select(ideo.selector)\n          .append('g')\n          .attr('class', 'chromosome-set-container')\n          .attr('data-set-number', j)\n          .attr('transform', transform)\n          .attr('id', chrModel.id + '-chromosome-set');\n\n        if (\n          'sex' in ideo.config &&\n          ploidy === 2 &&\n          ideo.sexChromosomes.index + 1 === chrIndex\n        ) {\n          ideo.drawSexChromosomes(bandsArray, taxid, container, defs, j, chrs);\n          continue;\n        }\n\n        var shape;\n        var numChrsInSet = 1;\n        if (ploidy > 1) {\n          numChrsInSet = this._ploidy.getChromosomesNumber(j);\n        }\n        for (var k = 0; k < numChrsInSet; k++) {\n          shape = ideo.drawChromosome(chrModel, chrIndex - 1, container, k);\n        }\n\n        defs.append('clipPath')\n          .attr('id', chrModel.id + '-chromosome-set-clippath')\n          .selectAll('path')\n          .data(shape)\n          .enter()\n          .append('path')\n          .attr('d', function(d) {\n            return d.path;\n          }).attr('class', function(d) {\n            return d.class;\n          });\n      }\n\n      if (ideo.config.showBandLabels === true) {\n        ideo.drawBandLabels(ideo.chromosomes);\n      }\n    }\n  }\n\n  // Get ideogram SVG container\n  getSvg() {\n    return d3.select(this.selector).node();\n  }\n\n  /*\n  * Sets instance properties regarding sex chromosomes.\n  * Currently only supported for mammals.\n  * TODO: Support all sexually reproducing taxa\n  *   XY sex-determination (mammals):\n  *     - Male: XY <- heterogametic\n  *     - Female: XX\n  *   ZW sex-determination (birds):\n  *     - Male: ZZ\n  *     - Female: ZW <- heterogametic\n  *   X0 sex-determination (some insects):\n  *     - Male: X0, i.e. only X <- heterogametic?\n  *     - Female: XX\n  * TODO: Support sex chromosome aneuploidies in mammals\n  *     - Turner syndrome: X0\n  *     - Klinefelter syndome: XXY\n  *  More types:\n  *  https:*en.wikipedia.org/wiki/Category:Sex_chromosome_aneuploidies\n  */\n  setSexChromosomes(chrs) {\n    if (this.config.ploidy !== 2 || !this.config.sex) {\n      return;\n    }\n\n    var ideo = this,\n      sexChrs = {X: 1, Y: 1},\n      chr, i;\n\n    ideo.sexChromosomes.list = [];\n\n    for (i = 0; i < chrs.length; i++) {\n      chr = chrs[i];\n\n      if (ideo.config.sex === 'male' && chr in sexChrs) {\n        ideo.sexChromosomes.list.push(chr);\n        if (!ideo.sexChromosomes.index) {\n          ideo.sexChromosomes.index = i;\n        }\n      } else if (chr === 'X') {\n        ideo.sexChromosomes.list.push(chr, chr);\n        ideo.sexChromosomes.index = i;\n      }\n    }\n  }\n\n  /*\n  * Completes default ideogram initialization\n  * by calling downstream functions to\n  * process raw band data into full JSON objects,\n  * render chromosome and cytoband figures and labels,\n  * apply initial graphical transformations,\n  * hide overlapping band labels, and\n  * execute callbacks defined by client code\n  */\n  processBandData() {\n    var bandsArray, maxLength, i, j, k, chromosome, bands,\n      chrLength, chr,\n      bandData, bandsByChr,\n      taxid, taxids, chrs, chrsByTaxid,\n      ideo = this;\n\n    bandsArray = [];\n    maxLength = 0;\n\n    if (ideo.config.multiorganism === true) {\n      ideo.coordinateSystem = 'bp';\n      taxids = ideo.config.taxids;\n      for (i = 0; i < taxids.length; i++) {\n        taxid = taxids[i];\n      }\n    } else {\n      if (typeof ideo.config.taxid === 'undefined') {\n        ideo.config.taxid = ideo.config.taxids[0];\n      }\n      taxid = ideo.config.taxid;\n      taxids = [taxid];\n      ideo.config.taxids = taxids;\n    }\n\n    if ('chromosomes' in ideo.config) {\n      chrs = ideo.config.chromosomes;\n    }\n    if (ideo.config.multiorganism) {\n      chrsByTaxid = chrs;\n    }\n\n    ideo.config.chromosomes = {};\n\n    var t0B = new Date().getTime();\n\n    for (j = 0; j < taxids.length; j++) {\n      taxid = taxids[j];\n\n      if (ideo.config.multiorganism) {\n        chrs = chrsByTaxid[taxid];\n      }\n\n      if (ideo.coordinateSystem === 'iscn' || ideo.config.multiorganism) {\n        bandData = ideo.bandData[taxid];\n\n        bandsByChr = ideo.getBands(bandData, taxid, chrs);\n\n        chrs = Object.keys(bandsByChr).sort(function(a, b) {\n          return Ideogram.naturalSort(a, b);\n        });\n\n        ideo.config.chromosomes[taxid] = chrs.slice();\n        ideo.numChromosomes += ideo.config.chromosomes[taxid].length;\n\n        for (k = 0; k < chrs.length; k++) {\n          chromosome = chrs[k];\n          bands = bandsByChr[chromosome];\n          bandsArray.push(bands);\n\n          chrLength = {\n            iscn: bands[bands.length - 1].iscn.stop,\n            bp: bands[bands.length - 1].bp.stop\n          };\n\n          if (chrLength.iscn > ideo.maxLength.iscn) {\n            ideo.maxLength.iscn = chrLength.iscn;\n          }\n\n          if (chrLength.bp > ideo.maxLength.bp) {\n            ideo.maxLength.bp = chrLength.bp;\n          }\n        }\n      } else if (ideo.coordinateSystem === 'bp') {\n        // If lacking band-level data\n\n        ideo.config.chromosomes[taxid] = chrs.slice();\n        ideo.numChromosomes += ideo.config.chromosomes[taxid].length;\n\n        for (k = 0; k < chrs.length; k++) {\n          chr = chrs[k];\n          if (chr.length > ideo.maxLength.bp) {\n            ideo.maxLength.bp = chr.length;\n          }\n        }\n      }\n    }\n\n    var t1B = new Date().getTime();\n    if (ideo.debug) {\n      console.log('Time in processBandData: ' + (t1B - t0B) + ' ms');\n    }\n\n    return bandsArray;\n  }\n\n  /**\n  * Initializes an ideogram.\n  * Sets some high-level properties based on instance configuration,\n  * fetches band and annotation data if needed, and\n  * writes an SVG element to the document to contain the ideogram\n  */\n  init() {\n    var taxid, i, svgClass;\n\n    var ideo = this;\n\n    var t0 = new Date().getTime();\n\n    var bandsArray = [],\n      numBandDataResponses = 0,\n      resolution = this.config.resolution,\n      accession;\n\n    var promise = new Promise(function(resolve) {\n      ideo.getTaxids(resolve);\n    });\n\n    promise.then(function(taxids) {\n      taxid = taxids[0];\n      ideo.config.taxid = taxid;\n      ideo.config.taxids = taxids;\n\n      var assemblies,\n        bandFileName;\n\n      var bandDataFileNames = {\n        9606: '',\n        10090: ''\n      };\n\n      for (i = 0; i < taxids.length; i++) {\n        taxid = String(taxids[i]);\n\n        if (!ideo.config.assembly) {\n          ideo.config.assembly = 'default';\n        }\n        assemblies = ideo.organisms[taxid].assemblies;\n        accession = assemblies[ideo.config.assembly];\n\n        bandFileName = [];\n        bandFileName.push(\n          Ideogram.slugify(ideo.organisms[taxid].scientificName)\n        );\n        if (accession !== assemblies.default) {\n          bandFileName.push(accession);\n        }\n        if (\n          taxid === '9606' &&\n          (accession !== assemblies.default || resolution !== 850)\n        ) {\n          bandFileName.push(resolution);\n        }\n        bandFileName = bandFileName.join('-') + '.js';\n\n        if (taxid === '9606' || taxid === '10090') {\n          bandDataFileNames[taxid] = bandFileName;\n        }\n\n        if (typeof chrBands === 'undefined' && taxid in bandDataFileNames) {\n          d3.request(ideo.config.dataDir + bandDataFileNames[taxid])\n            .on('beforesend', function(data) {\n              // Ensures correct taxid is processed in response callback; using\n              // simply 'taxid' variable gives the last *requested* taxid, which\n              // fails when dealing with multiple taxa.\n              data.taxid = taxid;\n            })\n            .get(function(error, data) {\n              eval(data.response);\n\n              ideo.bandData[data.taxid] = chrBands;\n              numBandDataResponses += 1;\n\n              if (numBandDataResponses === taxids.length) {\n                bandsArray = ideo.processBandData();\n                writeContainer();\n              }\n            });\n        } else {\n          if (typeof chrBands !== 'undefined') {\n          // If bands already available,\n          // e.g. via <script> tag in initial page load\n            ideo.bandData[taxid] = chrBands;\n          }\n          bandsArray = ideo.processBandData();\n          writeContainer();\n        }\n      }\n    });\n\n    function writeContainer() {\n\n      if (ideo.config.annotationsPath) {\n         ideo.fetchAnnots(ideo.config.annotationsPath);\n       }\n\n      // If ploidy description is a string, then convert it to the canonical\n      // array format.  String ploidyDesc is used when depicting e.g. parental\n      // origin each member of chromosome pair in a human genome.\n      // See ploidy_basic.html for usage example.\n      if (\n        'ploidyDesc' in ideo.config &&\n        typeof ideo.config.ploidyDesc === 'string'\n      ) {\n        var tmp = [];\n        for (var i = 0; i < ideo.numChromosomes; i++) {\n          tmp.push(ideo.config.ploidyDesc);\n        }\n        ideo.config.ploidyDesc = tmp;\n      }\n      // Organism ploidy description\n      ideo._ploidy = new Ploidy(ideo.config);\n\n      // Chromosome's layout\n      ideo._layout = Layout.getInstance(ideo.config, ideo);\n\n      svgClass = '';\n      if (ideo.config.showChromosomeLabels) {\n        if (ideo.config.orientation === 'horizontal') {\n          svgClass += 'labeledLeft ';\n        } else {\n          svgClass += 'labeled ';\n        }\n      }\n\n      if (\n      ideo.config.annotationsLayout &&\n      ideo.config.annotationsLayout === 'overlay'\n    ) {\n        svgClass += 'faint';\n      }\n\n      var gradients = ideo.getBandColorGradients();\n      var svgWidth = ideo._layout.getWidth(taxid);\n      var svgHeight = ideo._layout.getHeight(taxid);\n\n      d3.select(ideo.config.container)\n        .append('div')\n          .append('svg')\n            .attr('id', '_ideogram')\n            .attr('class', svgClass)\n            .attr('width', svgWidth)\n            .attr('height', svgHeight)\n            .html(gradients);\n\n      finishInit();\n    }\n\n    function finishInit() {\n      try {\n        var t0A = new Date().getTime();\n\n        var i;\n\n        ideo.initDrawChromosomes(bandsArray);\n\n        // Waits for potentially large annotation dataset\n        // to be received by the client, then triggers annotation processing\n        if (ideo.config.annotationsPath) {\n          function pa() {\n            if (typeof ideo.timeout !== 'undefined') {\n              window.clearTimeout(ideo.timeout);\n            }\n\n            ideo.annots = ideo.processAnnotData(ideo.rawAnnots);\n            ideo.drawProcessedAnnots(ideo.annots);\n\n            if (typeof crossfilter !== 'undefined' && ideo.initCrossFilter) {\n              ideo.initCrossFilter();\n            }\n          }\n\n          if (ideo.rawAnnots) {\n            pa();\n          } else {\n            (function checkAnnotData() {\n              ideo.timeout = setTimeout(function() {\n                if (!ideo.rawAnnots) {\n                  checkAnnotData();\n                } else {\n                  pa();\n                }\n              },\n            50\n          );\n            })();\n          }\n        }\n\n        if (ideo.config.showBandLabels === true) {\n          var bandsToShow = ideo.bandsToShow.join(',');\n\n          // d3.selectAll resolves to querySelectorAll (QSA).\n          // QSA takes a surprisingly long time to complete,\n          // and scales with the number of selectors.\n          // Most bands are hidden, so we can optimize by\n          // Hiding all bands, then QSA'ing and displaying the\n          // relatively few bands that are shown.\n          var t0C = new Date().getTime();\n          d3.selectAll(ideo.selector + ' .bandLabel, .bandLabelStalk')\n          .style('display', 'none');\n          d3.selectAll(bandsToShow).style('display', '');\n          var t1C = new Date().getTime();\n          if (ideo.debug) {\n            console.log('Time in showing bands: ' + (t1C - t0C) + ' ms');\n          }\n\n          if (ideo.config.orientation === 'vertical') {\n            var chrID;\n            for (i = 0; i < ideo.chromosomesArray.length; i++) {\n              chrID = '#' + ideo.chromosomesArray[i].id;\n              ideo.rotateChromosomeLabels(d3.select(chrID), i);\n            }\n          }\n        }\n\n        if (ideo.config.showChromosomeLabels === true) {\n          ideo.drawChromosomeLabels(ideo.chromosomes);\n        }\n\n        if (ideo.config.brush === true) {\n          ideo.createBrush();\n        }\n\n        if (ideo.config.annotations) {\n          ideo.drawAnnots(ideo.config.annotations);\n        }\n\n        var t1A = new Date().getTime();\n        if (ideo.debug) {\n          console.log('Time in drawChromosome: ' + (t1A - t0A) + ' ms');\n        }\n\n        var t1 = new Date().getTime();\n        if (ideo.debug) {\n          console.log('Time constructing ideogram: ' + (t1 - t0) + ' ms');\n        }\n\n        if (ideo.onLoadCallback) {\n          ideo.onLoadCallback();\n        }\n\n        if (!('rotatable' in ideo.config && ideo.config.rotatable === false)) {\n          d3.selectAll(ideo.selector + ' .chromosome').on('click', function() {\n            ideo.rotateAndToggleDisplay(this);\n          });\n        } else {\n          d3.selectAll(ideo.selector + ' .chromosome')\n            .style('cursor', 'default');\n        }\n      } catch (e) {\n        // console.log(e);\n        throw e;\n      }\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/core.js","!function(e,n){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=n(require(\"d3-request\")):\"function\"==typeof define&&define.amd?define([\"d3-request\"],n):(e.d3=e.d3||{},e.d3.promise=n(e.d3))}(this,function(e){\"use strict\";function n(e,n){return function(){for(var t=arguments.length,r=Array(t),o=0;t>o;o++)r[o]=arguments[o];return new Promise(function(t,o){var u=function(e,n){return e?void o(Error(e)):void t(n)};n.apply(e,r.concat(u))})}}var t={};return[\"csv\",\"tsv\",\"json\",\"xml\",\"text\",\"html\"].forEach(function(r){t[r]=n(e,e[r])}),t});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3.promise/dist/d3.promise.min.js\n// module id = 4\n// module chunks = 0","// https://d3js.org/d3-request/ Version 1.0.5. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-collection'), require('d3-dispatch'), require('d3-dsv')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-collection', 'd3-dispatch', 'd3-dsv'], factory) :\n\t(factory((global.d3 = global.d3 || {}),global.d3,global.d3,global.d3));\n}(this, (function (exports,d3Collection,d3Dispatch,d3Dsv) { 'use strict';\n\nvar request = function(url, callback) {\n  var request,\n      event = d3Dispatch.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = d3Collection.map(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv = dsv(\"text/csv\", d3Dsv.csvParse);\n\nvar tsv = dsv(\"text/tab-separated-values\", d3Dsv.tsvParse);\n\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv;\nexports.tsv = tsv;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3.promise/node_modules/d3-request/build/d3-request.js\n// module id = 5\n// module chunks = 0","// https://d3js.org/d3-collection/ Version 1.0.0. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  var prefix = \"$\";\n\n  function Map() {}\n\n  Map.prototype = map.prototype = {\n    constructor: Map,\n    has: function(key) {\n      return (prefix + key) in this;\n    },\n    get: function(key) {\n      return this[prefix + key];\n    },\n    set: function(key, value) {\n      this[prefix + key] = value;\n      return this;\n    },\n    remove: function(key) {\n      var property = prefix + key;\n      return property in this && delete this[property];\n    },\n    clear: function() {\n      for (var property in this) if (property[0] === prefix) delete this[property];\n    },\n    keys: function() {\n      var keys = [];\n      for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n      return keys;\n    },\n    values: function() {\n      var values = [];\n      for (var property in this) if (property[0] === prefix) values.push(this[property]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n      return entries;\n    },\n    size: function() {\n      var size = 0;\n      for (var property in this) if (property[0] === prefix) ++size;\n      return size;\n    },\n    empty: function() {\n      for (var property in this) if (property[0] === prefix) return false;\n      return true;\n    },\n    each: function(f) {\n      for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n    }\n  };\n\n  function map(object, f) {\n    var map = new Map;\n\n    // Copy constructor.\n    if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n    // Index array by numeric index or specified key function.\n    else if (Array.isArray(object)) {\n      var i = -1,\n          n = object.length,\n          o;\n\n      if (f == null) while (++i < n) map.set(i, object[i]);\n      else while (++i < n) map.set(f(o = object[i], i, object), o);\n    }\n\n    // Convert object to map.\n    else if (object) for (var key in object) map.set(key, object[key]);\n\n    return map;\n  }\n\n  function nest() {\n    var keys = [],\n        sortKeys = [],\n        sortValues,\n        rollup,\n        nest;\n\n    function apply(array, depth, createResult, setResult) {\n      if (depth >= keys.length) return rollup != null\n          ? rollup(array) : (sortValues != null\n          ? array.sort(sortValues)\n          : array);\n\n      var i = -1,\n          n = array.length,\n          key = keys[depth++],\n          keyValue,\n          value,\n          valuesByKey = map(),\n          values,\n          result = createResult();\n\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n          values.push(value);\n        } else {\n          valuesByKey.set(keyValue, [value]);\n        }\n      }\n\n      valuesByKey.each(function(values, key) {\n        setResult(result, key, apply(values, depth, createResult, setResult));\n      });\n\n      return result;\n    }\n\n    function entries(map, depth) {\n      if (++depth > keys.length) return map;\n      var array, sortKey = sortKeys[depth - 1];\n      if (rollup != null && depth >= keys.length) array = map.entries();\n      else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n      return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n    }\n\n    return nest = {\n      object: function(array) { return apply(array, 0, createObject, setObject); },\n      map: function(array) { return apply(array, 0, createMap, setMap); },\n      entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n      key: function(d) { keys.push(d); return nest; },\n      sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n      sortValues: function(order) { sortValues = order; return nest; },\n      rollup: function(f) { rollup = f; return nest; }\n    };\n  }\n\n  function createObject() {\n    return {};\n  }\n\n  function setObject(object, key, value) {\n    object[key] = value;\n  }\n\n  function createMap() {\n    return map();\n  }\n\n  function setMap(map, key, value) {\n    map.set(key, value);\n  }\n\n  function Set() {}\n\n  var proto = map.prototype;\n\n  Set.prototype = set.prototype = {\n    constructor: Set,\n    has: proto.has,\n    add: function(value) {\n      value += \"\";\n      this[prefix + value] = value;\n      return this;\n    },\n    remove: proto.remove,\n    clear: proto.clear,\n    values: proto.keys,\n    size: proto.size,\n    empty: proto.empty,\n    each: proto.each\n  };\n\n  function set(object, f) {\n    var set = new Set;\n\n    // Copy constructor.\n    if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n    // Otherwise, assume it’s an array.\n    else if (object) {\n      var i = -1, n = object.length;\n      if (f == null) while (++i < n) set.add(object[i]);\n      else while (++i < n) set.add(f(object[i], i, object));\n    }\n\n    return set;\n  }\n\n  function keys(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  }\n\n  function values(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  }\n\n  function entries(map) {\n    var entries = [];\n    for (var key in map) entries.push({key: key, value: map[key]});\n    return entries;\n  }\n\n  exports.nest = nest;\n  exports.set = set;\n  exports.map = map;\n  exports.keys = keys;\n  exports.values = values;\n  exports.entries = entries;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-collection/build/d3-collection.js\n// module id = 6\n// module chunks = 0","// https://d3js.org/d3-dispatch/ Version 1.0.0. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  var noop = {value: function() {}};\n\n  function dispatch() {\n    for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n      if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n      _[t] = [];\n    }\n    return new Dispatch(_);\n  }\n\n  function Dispatch(_) {\n    this._ = _;\n  }\n\n  function parseTypenames(typenames, types) {\n    return typenames.trim().split(/^|\\s+/).map(function(t) {\n      var name = \"\", i = t.indexOf(\".\");\n      if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n      if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n      return {type: t, name: name};\n    });\n  }\n\n  Dispatch.prototype = dispatch.prototype = {\n    constructor: Dispatch,\n    on: function(typename, callback) {\n      var _ = this._,\n          T = parseTypenames(typename + \"\", _),\n          t,\n          i = -1,\n          n = T.length;\n\n      // If no callback was specified, return the callback of the given type and name.\n      if (arguments.length < 2) {\n        while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n        return;\n      }\n\n      // If a type was specified, set the callback for the given type and name.\n      // Otherwise, if a null callback was specified, remove callbacks of the given name.\n      if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      while (++i < n) {\n        if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n        else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n      }\n\n      return this;\n    },\n    copy: function() {\n      var copy = {}, _ = this._;\n      for (var t in _) copy[t] = _[t].slice();\n      return new Dispatch(copy);\n    },\n    call: function(type, that) {\n      if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n      if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n      for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n    },\n    apply: function(type, that, args) {\n      if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n      for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n    }\n  };\n\n  function get(type, name) {\n    for (var i = 0, n = type.length, c; i < n; ++i) {\n      if ((c = type[i]).name === name) {\n        return c.value;\n      }\n    }\n  }\n\n  function set(type, name, callback) {\n    for (var i = 0, n = type.length; i < n; ++i) {\n      if (type[i].name === name) {\n        type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n        break;\n      }\n    }\n    if (callback != null) type.push({name: name, value: callback});\n    return type;\n  }\n\n  exports.dispatch = dispatch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-dispatch/build/d3-dispatch.js\n// module id = 7\n// module chunks = 0","// https://d3js.org/d3-dsv/ Version 1.0.0. Copyright 2016 Mike Bostock.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3 = global.d3 || {})));\n}(this, function (exports) { 'use strict';\n\n  function objectConverter(columns) {\n    return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n      return JSON.stringify(name) + \": d[\" + i + \"]\";\n    }).join(\",\") + \"}\");\n  }\n\n  function customConverter(columns, f) {\n    var object = objectConverter(columns);\n    return function(row, i) {\n      return f(object(row), i, columns);\n    };\n  }\n\n  // Compute unique columns in order of discovery.\n  function inferColumns(rows) {\n    var columnSet = Object.create(null),\n        columns = [];\n\n    rows.forEach(function(row) {\n      for (var column in row) {\n        if (!(column in columnSet)) {\n          columns.push(columnSet[column] = column);\n        }\n      }\n    });\n\n    return columns;\n  }\n\n  function dsv(delimiter) {\n    var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n]\"),\n        delimiterCode = delimiter.charCodeAt(0);\n\n    function parse(text, f) {\n      var convert, columns, rows = parseRows(text, function(row, i) {\n        if (convert) return convert(row, i - 1);\n        columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n      });\n      rows.columns = columns;\n      return rows;\n    }\n\n    function parseRows(text, f) {\n      var EOL = {}, // sentinel value for end-of-line\n          EOF = {}, // sentinel value for end-of-file\n          rows = [], // output rows\n          N = text.length,\n          I = 0, // current character index\n          n = 0, // the current line number\n          t, // the current token\n          eol; // is the current token followed by EOL?\n\n      function token() {\n        if (I >= N) return EOF; // special case: end of file\n        if (eol) return eol = false, EOL; // special case: end of line\n\n        // special case: quotes\n        var j = I, c;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n        }\n\n        // common case: find next delimiter or newline\n        while (I < N) {\n          var k = 1;\n          c = text.charCodeAt(I++);\n          if (c === 10) eol = true; // \\n\n          else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n          else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n\n        // special case: last token before EOF\n        return text.slice(j);\n      }\n\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n\n      return rows;\n    }\n\n    function format(rows, columns) {\n      if (columns == null) columns = inferColumns(rows);\n      return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n        return columns.map(function(column) {\n          return formatValue(row[column]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    }\n\n    function formatRows(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    }\n\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n\n    function formatValue(text) {\n      return text == null ? \"\"\n          : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n          : text;\n    }\n\n    return {\n      parse: parse,\n      parseRows: parseRows,\n      format: format,\n      formatRows: formatRows\n    };\n  }\n\n  var csv = dsv(\",\");\n\n  var csvParse = csv.parse;\n  var csvParseRows = csv.parseRows;\n  var csvFormat = csv.format;\n  var csvFormatRows = csv.formatRows;\n\n  var tsv = dsv(\"\\t\");\n\n  var tsvParse = tsv.parse;\n  var tsvParseRows = tsv.parseRows;\n  var tsvFormat = tsv.format;\n  var tsvFormatRows = tsv.formatRows;\n\n  exports.dsvFormat = dsv;\n  exports.csvParse = csvParse;\n  exports.csvParseRows = csvParseRows;\n  exports.csvFormat = csvFormat;\n  exports.csvFormatRows = csvFormatRows;\n  exports.tsvParse = tsvParse;\n  exports.tsvParseRows = tsvParseRows;\n  exports.tsvFormat = tsvFormat;\n  exports.tsvFormatRows = tsvFormatRows;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/d3-dsv/build/d3-dsv.js\n// module id = 8\n// module chunks = 0","/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n * @version   4.1.1\n */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.ES6Promise = factory());\n}(this, (function () { 'use strict';\n\nfunction objectOrFunction(x) {\n  var type = typeof x;\n  return x !== null && (type === 'object' || type === 'function');\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\nvar _isArray = undefined;\nif (Array.isArray) {\n  _isArray = Array.isArray;\n} else {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n}\n\nvar isArray = _isArray;\n\nvar len = 0;\nvar vertxNext = undefined;\nvar customSchedulerFn = undefined;\n\nvar asap = function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 2, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    if (customSchedulerFn) {\n      customSchedulerFn(flush);\n    } else {\n      scheduleFlush();\n    }\n  }\n};\n\nfunction setScheduler(scheduleFn) {\n  customSchedulerFn = scheduleFn;\n}\n\nfunction setAsap(asapFn) {\n  asap = asapFn;\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && ({}).toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // see https://github.com/cujojs/when/issues/410 for details\n  return function () {\n    return process.nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  if (typeof vertxNext !== 'undefined') {\n    return function () {\n      vertxNext(flush);\n    };\n  }\n\n  return useSetTimeout();\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  // Store setTimeout reference so es6-promise will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var globalSetTimeout = setTimeout;\n  return function () {\n    return globalSetTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue[i];\n    var arg = queue[i + 1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertx() {\n  try {\n    var r = require;\n    var vertx = r('vertx');\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush = undefined;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && typeof require === 'function') {\n  scheduleFlush = attemptVertx();\n} else {\n  scheduleFlush = useSetTimeout();\n}\n\nfunction then(onFulfillment, onRejection) {\n  var _arguments = arguments;\n\n  var parent = this;\n\n  var child = new this.constructor(noop);\n\n  if (child[PROMISE_ID] === undefined) {\n    makePromise(child);\n  }\n\n  var _state = parent._state;\n\n  if (_state) {\n    (function () {\n      var callback = _arguments[_state - 1];\n      asap(function () {\n        return invokeCallback(_state, child, callback, parent._result);\n      });\n    })();\n  } else {\n    subscribe(parent, child, onFulfillment, onRejection);\n  }\n\n  return child;\n}\n\n/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {Any} value value that the returned promise will be resolved with\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve$1(object) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop);\n  resolve(promise, object);\n  return promise;\n}\n\nvar PROMISE_ID = Math.random().toString(36).substring(16);\n\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nvar GET_THEN_ERROR = new ErrorObject();\n\nfunction selfFulfillment() {\n  return new TypeError(\"You cannot resolve a promise with itself\");\n}\n\nfunction cannotReturnOwn() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction getThen(promise) {\n  try {\n    return promise.then;\n  } catch (error) {\n    GET_THEN_ERROR.error = error;\n    return GET_THEN_ERROR;\n  }\n}\n\nfunction tryThen(then$$1, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then$$1.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then$$1) {\n  asap(function (promise) {\n    var sealed = false;\n    var error = tryThen(then$$1, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        resolve(promise, value);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      return resolve(promise, value);\n    }, function (reason) {\n      return reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then$$1) {\n  if (maybeThenable.constructor === promise.constructor && then$$1 === then && maybeThenable.constructor.resolve === resolve$1) {\n    handleOwnThenable(promise, maybeThenable);\n  } else {\n    if (then$$1 === GET_THEN_ERROR) {\n      reject(promise, GET_THEN_ERROR.error);\n      GET_THEN_ERROR.error = null;\n    } else if (then$$1 === undefined) {\n      fulfill(promise, maybeThenable);\n    } else if (isFunction(then$$1)) {\n      handleForeignThenable(promise, maybeThenable, then$$1);\n    } else {\n      fulfill(promise, maybeThenable);\n    }\n  }\n}\n\nfunction resolve(promise, value) {\n  if (promise === value) {\n    reject(promise, selfFulfillment());\n  } else if (objectOrFunction(value)) {\n    handleMaybeThenable(promise, value, getThen(value));\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onerror) {\n    promise._onerror(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length !== 0) {\n    asap(publish, promise);\n  }\n}\n\nfunction reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n\n  asap(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var _subscribers = parent._subscribers;\n  var length = _subscribers.length;\n\n  parent._onerror = null;\n\n  _subscribers[length] = child;\n  _subscribers[length + FULFILLED] = onFulfillment;\n  _subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    asap(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = undefined,\n      callback = undefined,\n      detail = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, detail);\n    } else {\n      callback(detail);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction ErrorObject() {\n  this.error = null;\n}\n\nvar TRY_CATCH_ERROR = new ErrorObject();\n\nfunction tryCatch(callback, detail) {\n  try {\n    return callback(detail);\n  } catch (e) {\n    TRY_CATCH_ERROR.error = e;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction invokeCallback(settled, promise, callback, detail) {\n  var hasCallback = isFunction(callback),\n      value = undefined,\n      error = undefined,\n      succeeded = undefined,\n      failed = undefined;\n\n  if (hasCallback) {\n    value = tryCatch(callback, detail);\n\n    if (value === TRY_CATCH_ERROR) {\n      failed = true;\n      error = value.error;\n      value.error = null;\n    } else {\n      succeeded = true;\n    }\n\n    if (promise === value) {\n      reject(promise, cannotReturnOwn());\n      return;\n    }\n  } else {\n    value = detail;\n    succeeded = true;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && succeeded) {\n      resolve(promise, value);\n    } else if (failed) {\n      reject(promise, error);\n    } else if (settled === FULFILLED) {\n      fulfill(promise, value);\n    } else if (settled === REJECTED) {\n      reject(promise, value);\n    }\n}\n\nfunction initializePromise(promise, resolver) {\n  try {\n    resolver(function resolvePromise(value) {\n      resolve(promise, value);\n    }, function rejectPromise(reason) {\n      reject(promise, reason);\n    });\n  } catch (e) {\n    reject(promise, e);\n  }\n}\n\nvar id = 0;\nfunction nextId() {\n  return id++;\n}\n\nfunction makePromise(promise) {\n  promise[PROMISE_ID] = id++;\n  promise._state = undefined;\n  promise._result = undefined;\n  promise._subscribers = [];\n}\n\nfunction Enumerator$1(Constructor, input) {\n  this._instanceConstructor = Constructor;\n  this.promise = new Constructor(noop);\n\n  if (!this.promise[PROMISE_ID]) {\n    makePromise(this.promise);\n  }\n\n  if (isArray(input)) {\n    this.length = input.length;\n    this._remaining = input.length;\n\n    this._result = new Array(this.length);\n\n    if (this.length === 0) {\n      fulfill(this.promise, this._result);\n    } else {\n      this.length = this.length || 0;\n      this._enumerate(input);\n      if (this._remaining === 0) {\n        fulfill(this.promise, this._result);\n      }\n    }\n  } else {\n    reject(this.promise, validationError());\n  }\n}\n\nfunction validationError() {\n  return new Error('Array Methods must be provided an Array');\n}\n\nEnumerator$1.prototype._enumerate = function (input) {\n  for (var i = 0; this._state === PENDING && i < input.length; i++) {\n    this._eachEntry(input[i], i);\n  }\n};\n\nEnumerator$1.prototype._eachEntry = function (entry, i) {\n  var c = this._instanceConstructor;\n  var resolve$$1 = c.resolve;\n\n  if (resolve$$1 === resolve$1) {\n    var _then = getThen(entry);\n\n    if (_then === then && entry._state !== PENDING) {\n      this._settledAt(entry._state, i, entry._result);\n    } else if (typeof _then !== 'function') {\n      this._remaining--;\n      this._result[i] = entry;\n    } else if (c === Promise$2) {\n      var promise = new c(noop);\n      handleMaybeThenable(promise, entry, _then);\n      this._willSettleAt(promise, i);\n    } else {\n      this._willSettleAt(new c(function (resolve$$1) {\n        return resolve$$1(entry);\n      }), i);\n    }\n  } else {\n    this._willSettleAt(resolve$$1(entry), i);\n  }\n};\n\nEnumerator$1.prototype._settledAt = function (state, i, value) {\n  var promise = this.promise;\n\n  if (promise._state === PENDING) {\n    this._remaining--;\n\n    if (state === REJECTED) {\n      reject(promise, value);\n    } else {\n      this._result[i] = value;\n    }\n  }\n\n  if (this._remaining === 0) {\n    fulfill(promise, this._result);\n  }\n};\n\nEnumerator$1.prototype._willSettleAt = function (promise, i) {\n  var enumerator = this;\n\n  subscribe(promise, undefined, function (value) {\n    return enumerator._settledAt(FULFILLED, i, value);\n  }, function (reason) {\n    return enumerator._settledAt(REJECTED, i, reason);\n  });\n};\n\n/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all$1(entries) {\n  return new Enumerator$1(this, entries).promise;\n}\n\n/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} promises array of promises to observe\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race$1(entries) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (!isArray(entries)) {\n    return new Constructor(function (_, reject) {\n      return reject(new TypeError('You must pass an array to race.'));\n    });\n  } else {\n    return new Constructor(function (resolve, reject) {\n      var length = entries.length;\n      for (var i = 0; i < length; i++) {\n        Constructor.resolve(entries[i]).then(resolve, reject);\n      }\n    });\n  }\n}\n\n/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {Any} reason value that the returned promise will be rejected with.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject$1(reason) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop);\n  reject(promise, reason);\n  return promise;\n}\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise's eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @param {function} resolver\n  Useful for tooling.\n  @constructor\n*/\nfunction Promise$2(resolver) {\n  this[PROMISE_ID] = nextId();\n  this._result = this._state = undefined;\n  this._subscribers = [];\n\n  if (noop !== resolver) {\n    typeof resolver !== 'function' && needsResolver();\n    this instanceof Promise$2 ? initializePromise(this, resolver) : needsNew();\n  }\n}\n\nPromise$2.all = all$1;\nPromise$2.race = race$1;\nPromise$2.resolve = resolve$1;\nPromise$2.reject = reject$1;\nPromise$2._setScheduler = setScheduler;\nPromise$2._setAsap = setAsap;\nPromise$2._asap = asap;\n\nPromise$2.prototype = {\n  constructor: Promise$2,\n\n  /**\n    The primary way of interacting with a promise is through its `then` method,\n    which registers callbacks to receive either a promise's eventual value or the\n    reason why the promise cannot be fulfilled.\n  \n    ```js\n    findUser().then(function(user){\n      // user is available\n    }, function(reason){\n      // user is unavailable, and you are given the reason why\n    });\n    ```\n  \n    Chaining\n    --------\n  \n    The return value of `then` is itself a promise.  This second, 'downstream'\n    promise is resolved with the return value of the first promise's fulfillment\n    or rejection handler, or rejected if the handler throws an exception.\n  \n    ```js\n    findUser().then(function (user) {\n      return user.name;\n    }, function (reason) {\n      return 'default name';\n    }).then(function (userName) {\n      // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n      // will be `'default name'`\n    });\n  \n    findUser().then(function (user) {\n      throw new Error('Found user, but still unhappy');\n    }, function (reason) {\n      throw new Error('`findUser` rejected and we're unhappy');\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n      // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n    });\n    ```\n    If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n  \n    ```js\n    findUser().then(function (user) {\n      throw new PedagogicalException('Upstream error');\n    }).then(function (value) {\n      // never reached\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // The `PedgagocialException` is propagated all the way down to here\n    });\n    ```\n  \n    Assimilation\n    ------------\n  \n    Sometimes the value you want to propagate to a downstream promise can only be\n    retrieved asynchronously. This can be achieved by returning a promise in the\n    fulfillment or rejection handler. The downstream promise will then be pending\n    until the returned promise is settled. This is called *assimilation*.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // The user's comments are now available\n    });\n    ```\n  \n    If the assimliated promise rejects, then the downstream promise will also reject.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // If `findCommentsByAuthor` fulfills, we'll have the value here\n    }, function (reason) {\n      // If `findCommentsByAuthor` rejects, we'll have the reason here\n    });\n    ```\n  \n    Simple Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let result;\n  \n    try {\n      result = findResult();\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n    findResult(function(result, err){\n      if (err) {\n        // failure\n      } else {\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findResult().then(function(result){\n      // success\n    }, function(reason){\n      // failure\n    });\n    ```\n  \n    Advanced Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let author, books;\n  \n    try {\n      author = findAuthor();\n      books  = findBooksByAuthor(author);\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n  \n    function foundBooks(books) {\n  \n    }\n  \n    function failure(reason) {\n  \n    }\n  \n    findAuthor(function(author, err){\n      if (err) {\n        failure(err);\n        // failure\n      } else {\n        try {\n          findBoooksByAuthor(author, function(books, err) {\n            if (err) {\n              failure(err);\n            } else {\n              try {\n                foundBooks(books);\n              } catch(reason) {\n                failure(reason);\n              }\n            }\n          });\n        } catch(error) {\n          failure(err);\n        }\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findAuthor().\n      then(findBooksByAuthor).\n      then(function(books){\n        // found books\n    }).catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method then\n    @param {Function} onFulfilled\n    @param {Function} onRejected\n    Useful for tooling.\n    @return {Promise}\n  */\n  then: then,\n\n  /**\n    `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n    as the catch block of a try/catch statement.\n  \n    ```js\n    function findAuthor(){\n      throw new Error('couldn't find that author');\n    }\n  \n    // synchronous\n    try {\n      findAuthor();\n    } catch(reason) {\n      // something went wrong\n    }\n  \n    // async with promises\n    findAuthor().catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method catch\n    @param {Function} onRejection\n    Useful for tooling.\n    @return {Promise}\n  */\n  'catch': function _catch(onRejection) {\n    return this.then(null, onRejection);\n  }\n};\n\n/*global self*/\nfunction polyfill$1() {\n    var local = undefined;\n\n    if (typeof global !== 'undefined') {\n        local = global;\n    } else if (typeof self !== 'undefined') {\n        local = self;\n    } else {\n        try {\n            local = Function('return this')();\n        } catch (e) {\n            throw new Error('polyfill failed because global object is unavailable in this environment');\n        }\n    }\n\n    var P = local.Promise;\n\n    if (P) {\n        var promiseToString = null;\n        try {\n            promiseToString = Object.prototype.toString.call(P.resolve());\n        } catch (e) {\n            // silently ignored\n        }\n\n        if (promiseToString === '[object Promise]' && !P.cast) {\n            return;\n        }\n    }\n\n    local.Promise = Promise$2;\n}\n\n// Strange compat..\nPromise$2.polyfill = polyfill$1;\nPromise$2.Promise = Promise$2;\n\nreturn Promise$2;\n\n})));\n\n//# sourceMappingURL=es6-promise.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/es6-promise/dist/es6-promise.js\n// module id = 9\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = 10\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 11\n// module chunks = 0","\n// import {VerticalLayout} from './vertical-layout';\n// import {HorizontalLayout} from './horizontal-layout';\n// import {PairedLayout} from './paired-layout';\n// import {SmallLayout} from './small-layout';\n\nimport * as d3 from 'd3';\n\nimport {ChromosomeUtil} from './../views/chromosome-util';\n\nexport class Layout {\n\n  constructor(config, ideo) {\n    this._config = config;\n    this._ideo = ideo;\n    this._ploidy = this._ideo._ploidy;\n    this._translate = undefined;\n\n    if ('chrSetMargin' in config) {\n      this.chrSetMargin = config.chrSetMargin;\n    } else {\n      var k = this._config.chrMargin;\n      this.chrSetMargin = (this._config.ploidy > 1 ? k : 0);\n    }\n\n    // Chromosome band's size.\n    this._tickSize = 8;\n\n    // Chromosome rotation state.\n    this._isRotated = false;\n  }\n\n  // Factory method\n  static getInstance(config, ideo) {\n    if ('perspective' in config && config.perspective === 'comparative') {\n      return new PairedLayout(config, ideo);\n    } else if ('rows' in config && config.rows > 1) {\n      return new SmallLayout(config, ideo);\n    } else if (config.orientation === 'vertical') {\n      return new VerticalLayout(config, ideo);\n    } else if (config.orientation === 'horizontal') {\n      return new HorizontalLayout(config, ideo);\n    } else {\n      return new VerticalLayout(config, ideo);\n    }\n  }\n\n  // Get chart left margin\n  _getLeftMargin() {\n    return this._margin.left;\n  }\n\n  // Get rotated chromosome y scale\n  _getYScale() {\n      // 20 is width of rotated chromosome.\n    return 20 / this._config.chrWidth;\n  }\n\n  // Get chromosome labels\n  getChromosomeLabels(chrElement) {\n    var util = new ChromosomeUtil(chrElement);\n\n    return [util.getSetLabel(), util.getLabel()].filter(function(d) {\n      return d.length > 0;\n    });\n  }\n\n  // Rotate chromosome to original position\n  rotateBack() {\n    throw new Error(this._class + '#rotateBack not implemented');\n  }\n\n  // Rotate chromosome to opposite position\n  rotateForward() {\n    throw new Error(this._class + '#rotateForward not implemented');\n  }\n\n  rotate(chrSetNumber, chrNumber, chrElement) {\n    var ideo = this._ideo;\n\n      // Find chromosomes which should be hidden\n    var otherChrs = d3.selectAll(ideo.selector + ' g.chromosome')\n      .filter(function() {\n        return this !== chrElement;\n      });\n\n    if (this._isRotated) {\n          // Reset _isRotated flag\n      this._isRotated = false;\n          // Rotate chromosome back\n      this.rotateBack(chrSetNumber, chrNumber, chrElement, function() {\n              // Show all other chromosomes and chromosome labels\n        otherChrs.style('display', null);\n        d3.selectAll(ideo.selector + ' .chrSetLabel, .chrLabel')\n          .style('display', null);\n      });\n    } else {\n          // Set _isRotated flag\n      this._isRotated = true;\n\n          // Hide all other chromosomes and chromosome labels\n      otherChrs.style('display', 'none');\n      d3.selectAll(ideo.selector + ' .chrSetLabel, .chrLabel')\n        .style('display', 'none');\n\n          // Rotate chromosome\n      this.rotateForward(chrSetNumber, chrNumber, chrElement);\n    }\n  }\n\n  getChromosomeLabelClass() {\n    if (this._config.ploidy === 1) {\n      return 'chrLabel';\n    } else {\n      return 'chrSetLabel';\n    }\n  }\n\n  _getAdditionalOffset() {\n    return (\n      (this._config.annotationHeight || 0) * (this._config.numAnnotTracks || 1)\n    );\n  }\n\n  _getChromosomeSetSize(chrSetNumber) {\n    // Get last chromosome set size.\n    var setSize = this._ploidy.getSetSize(chrSetNumber);\n\n    // Increase offset by last chromosome set size\n    return (\n      setSize * this._config.chrWidth * 2 + (this.chrSetMargin)\n    );\n  }\n\n  // Get layout margin\n  getMargin() {\n    return this._margin;\n  }\n\n  // Get SVG element height\n  getHeight() {\n    throw new Error(this._class + '#getHeight not implemented');\n  }\n\n  getChromosomeBandTickY1() {\n    throw new Error(this._class + '#getChromosomeBandTickY1 not implemented');\n  }\n\n  getChromosomeBandTickY2() {\n    throw new Error(this._class + '#getChromosomeBandTickY2 not implemented');\n  }\n\n  // Get chromosome's band translate attribute\n  getChromosomeBandLabelTranslate() {\n    throw new Error(\n      this._class + '#getChromosomeBandLabelTranslate not implemented'\n    );\n  }\n\n  // Get chromosome set label anchor property\n  getChromosomeSetLabelAnchor() {\n    return 'middle';\n  }\n\n  // Get chromosome's band label text-anchor value\n  getChromosomeBandLabelAnchor() {\n    throw (\n      new Error(this._class + '#getChromosomeBandLabelAnchor not implemented')\n    );\n  }\n\n  getChromosomeLabelXPosition() {\n    throw new Error(\n      this._class + '#getChromosomeLabelXPosition not implemented'\n    );\n  }\n\n  // Get chromosome label y position.\n  getChromosomeLabelYPosition() {\n    return -5.5;\n  }\n\n  // \"i\" is chromosome number\n  getChromosomeSetLabelYPosition(i) {\n    if (this._config.ploidy === 1) {\n      return this.getChromosomeLabelYPosition(i);\n    } else {\n      return -2 * this._config.chrWidth;\n    }\n  }\n\n  getChromosomeSetLabelXPosition() {\n    throw (\n      new Error(\n        this._class + '#getChromosomeSetLabelXPosition not implemented'\n      )\n    );\n  }\n\n  getChromosomeSetLabelTranslate() {\n    throw (\n      new Error(this._class + '#getChromosomeSetLabelTranslate not implemented')\n    );\n  }\n\n  // Get chromosome set translate attribute\n  getChromosomeSetTranslate() {\n    throw new Error(this._class + '#getChromosomeSetTranslate not implemented');\n  }\n\n  // Get chromosome set translate's y offset\n  getChromosomeSetYTranslate() {\n    throw new Error(\n      this._class + '#getChromosomeSetYTranslate not implemented'\n    );\n  }\n}\n\n\n\nexport class HorizontalLayout extends Layout {\n\n  constructor(config, ideo) {\n    super(config, ideo);\n    this._class = 'HorizontalLayout';\n    this._margin = {\n      left: 20,\n      top: 30\n    };\n  }\n\n  _getLeftMargin() {\n    var margin = Layout.prototype._getLeftMargin.call(this);\n    if (this._config.ploidy > 1) {\n      margin *= 1.8;\n    }\n\n    return margin;\n  }\n\n  rotateForward(setNumber, chrNumber, chrElement, callback) {\n    var xOffset = 30;\n\n    var ideoBox = d3.select(this._ideo.selector).node().getBoundingClientRect();\n    var chrBox = chrElement.getBoundingClientRect();\n\n    var scaleX = (ideoBox.height / (chrBox.width + xOffset / 2)) * 0.9;\n    var scaleY = this._getYScale();\n\n    var yOffset = (chrNumber + 1) * ((this._config.chrWidth * 2) * scaleY);\n\n    var transform = (\n      'rotate(90) ' +\n      'translate(' + xOffset + ', -' + yOffset + ') ' +\n      'scale(' + scaleX + ', ' + scaleY + ')'\n    );\n\n    d3.select(chrElement.parentNode)\n      .transition()\n      .attr(\"transform\", transform)\n      .on('end', callback);\n\n    // Append new chromosome labels\n    var labels = this.getChromosomeLabels(chrElement);\n    d3.select(this._ideo.getSvg())\n      .append('g')\n      .attr('class', 'tmp')\n      .selectAll('text')\n      .data(labels)\n      .enter()\n      .append('text')\n      .attr('class', function(d, i) {\n        return i === 0 && labels.length === 2 ? 'chrSetLabel' : null;\n      })\n      .attr('x', 30)\n      .attr('y', function(d, i) {\n        return (i + 1 + labels.length % 2) * 12;\n      })\n      .style('text-anchor', 'middle')\n      .style('opacity', 0)\n      .text(String)\n      .transition()\n      .style('opacity', 1);\n  }\n\n  rotateBack(setNumber, chrNumber,\n             chrElement, callback) {\n    var translate = this.getChromosomeSetTranslate(setNumber);\n\n    d3.select(chrElement.parentNode)\n      .transition()\n      .attr(\"transform\", translate)\n      .on('end', callback);\n\n    d3.selectAll(this._ideo.selector + ' g.tmp')\n      .style('opacity', 0)\n      .remove();\n  }\n\n  getHeight(taxId) {\n    // Get last chromosome set offset.\n    var numChromosomes = this._config.chromosomes[taxId].length;\n    var lastSetOffset = this.getChromosomeSetYTranslate(numChromosomes - 1);\n\n    // Get last chromosome set size.\n    var lastSetSize = this._getChromosomeSetSize(numChromosomes - 1);\n\n    // Increase offset by last chromosome set size\n    lastSetOffset += lastSetSize;\n\n    return lastSetOffset + this._getAdditionalOffset() * 2;\n  }\n\n  getWidth() {\n    return this._config.chrHeight + this._margin.top * 1.5;\n  }\n\n  getChromosomeSetLabelAnchor() {\n    return 'end';\n  }\n\n  getChromosomeBandLabelAnchor() {\n    return null;\n  }\n\n  getChromosomeBandTickY1() {\n    return 2;\n  }\n\n  getChromosomeBandTickY2() {\n    return 10;\n  }\n\n  getChromosomeBandLabelTranslate(band) {\n    var x =\n      this._ideo.round(-this._tickSize + band.px.start + band.px.width / 2);\n    var y = -10;\n\n    return {\n      x: x,\n      y: y,\n      translate: 'translate(' + x + ',' + y + ')'\n    };\n  }\n\n  getChromosomeSetLabelTranslate() {\n    return null;\n  }\n\n  getChromosomeSetTranslate(setNumber) {\n    var leftMargin = this._getLeftMargin();\n    var chromosomeSetYTranslate = this.getChromosomeSetYTranslate(setNumber);\n    return 'translate(' + leftMargin + ', ' + chromosomeSetYTranslate + ')';\n  }\n\n  getChromosomeSetYTranslate(setNumber) {\n    // If no detailed description provided just use one formula for all cases.\n    if (!this._config.ploidyDesc) {\n      return this._config.chrMargin * (setNumber + 1);\n    }\n\n    // Id detailed description provided start to calculate offsets\n    //  for each chromosome set separately. This should be done only once.\n    if (!this._translate) {\n      // First offset equals to zero.\n      this._translate = [1];\n\n      // Loop through description set\n      for (var i = 1; i < this._config.ploidyDesc.length; i++) {\n        this._translate[i] =\n          this._translate[i - 1] + this._getChromosomeSetSize(i - 1);\n      }\n    }\n\n    return this._translate[setNumber];\n  }\n\n  getChromosomeSetLabelXPosition(i) {\n    if (this._config.ploidy === 1) {\n      return this.getChromosomeLabelXPosition(i);\n    } else {\n      return -20;\n    }\n  }\n\n  getChromosomeSetLabelYPosition(i) {\n    var setSize = this._ploidy.getSetSize(i),\n      config = this._config,\n      chrMargin = config.chrMargin,\n      chrWidth = config.chrWidth,\n      y;\n\n    if (config.ploidy === 1) {\n      y = chrWidth / 2 + 3;\n    } else {\n      y = (setSize * chrMargin) / 2;\n    }\n\n    return y;\n  }\n\n  getChromosomeLabelXPosition() {\n    return -8;\n  }\n\n  getChromosomeLabelYPosition() {\n    return this._config.chrWidth;\n  }\n\n}\n\n\n\n\nexport class PairedLayout extends Layout {\n\n  constructor(config, ideo) {\n    super(config, ideo);\n\n    this._class = 'PairedLayout';\n\n    this._margin = {\n      left: 30\n    };\n  }\n\n  rotateForward(setNumber, chrNumber, chrElement, callback) {\n    var self = this;\n    var ideo = this._ideo;\n\n    // Get ideo container and chromosome set dimensions\n    var ideoBox = d3.select(ideo.selector).node().getBoundingClientRect();\n    var chrBox = chrElement.getBoundingClientRect();\n\n    // Evaluate dimensions scale coefficients\n    var scaleX = (ideoBox.width / chrBox.height) * 0.97;\n    var scaleY = this._getYScale();\n\n    // Evaluate y offset of chromosome.\n    // It is different for first and the second one\n    var yOffset = setNumber ? 150 : 25;\n\n    var transform =\n      'translate(15, ' + yOffset + ') scale(' + scaleX + ', ' + scaleY + ')';\n\n    // Run rotation procedure\n    d3.select(chrElement.parentNode)\n      .transition()\n      .attr(\"transform\", transform)\n      .on('end', function() {\n        // Run callback function if provided\n        if (callback) {\n          callback();\n        }\n\n        var translateY = (6 * Number(!setNumber));\n\n        // Rotate band labels\n        d3.select(chrElement.parentNode).selectAll('g.bandLabel text')\n          .attr('transform', 'rotate(90) translate(0, ' + translateY + ')')\n          .attr('text-anchor', 'middle');\n\n        // Hide syntenic regions\n        d3.selectAll(ideo.selector + ' .syntenicRegion')\n          .style('display', 'none');\n      });\n\n    // Append new chromosome labels\n    var labels = this.getChromosomeLabels(chrElement);\n\n    d3.select(this._ideo.getSvg())\n      .append('g')\n      .attr('class', 'tmp')\n      .selectAll('text')\n      .data(this.getChromosomeLabels(chrElement))\n      .enter()\n      .append('text')\n      .attr('class', function(d, i) {\n        return i === 0 && labels.length === 2 ? 'chrSetLabel' : null;\n      })\n      .attr('x', 0)\n      .attr('y', yOffset + (self._config.chrWidth * scaleX / 2) * 1.15)\n      .style('opacity', 0)\n      .text(String)\n      .transition()\n      .style('opacity', 1);\n  }\n\n  rotateBack(setNumber, chrNumber, chrElement, callback) {\n    var ideo = this._ideo;\n\n    // Get intial transformation string for chromosome set\n    var translate = this.getChromosomeSetTranslate(setNumber);\n\n    // Run rotation procedure\n    d3.select(chrElement.parentNode)\n      .transition()\n      .attr('transform', translate)\n      .on('end', function() {\n        // Run callback fnuction if provided\n        callback();\n\n        // Show syntenic regions\n        d3.selectAll(ideo.select + ' .syntenicRegion')\n          .style('display', null);\n\n        // Reset changed attributes to original state\n        d3.select(chrElement.parentNode).selectAll('g.bandLabel text')\n          .attr('transform', null)\n          .attr('text-anchor', setNumber ? null : 'end');\n      });\n\n    d3.selectAll(ideo.selector + ' g.tmp')\n      .style('opacity', 0)\n      .remove();\n  }\n\n  getHeight() {\n    return this._config.chrHeight + this._margin.left * 1.5;\n  }\n\n  getWidth() {\n    return '97%';\n  }\n\n  getChromosomeBandTickY1(chrNumber) {\n    return chrNumber % 2 ? this._config.chrWidth : this._config.chrWidth * 2;\n  }\n\n  getChromosomeBandTickY2(chrNumber) {\n    var width = this._config.chrWidth;\n    return chrNumber % 2 ? width - this._tickSize : width * 2 + this._tickSize;\n  }\n\n  getChromosomeBandLabelAnchor(chrNumber) {\n    return chrNumber % 2 ? null : 'end';\n  }\n\n  getChromosomeBandLabelTranslate(band, chrNumber) {\n    var x = chrNumber % 2 ? 10 : -this._config.chrWidth - 10;\n    var y = this._ideo.round(band.px.start + band.px.width / 2) + 3;\n\n    return {\n      x: y,\n      y: y,\n      translate: 'rotate(-90) translate(' + x + ', ' + y + ')'\n    };\n  }\n\n  getChromosomeLabelXPosition() {\n    return -this._tickSize;\n  }\n\n  getChromosomeSetLabelXPosition() {\n    return this._config.chrWidth / -2;\n  }\n\n  getChromosomeSetLabelTranslate() {\n    return 'rotate(-90)';\n  }\n\n  getChromosomeSetTranslate(setNumber) {\n    var chromosomeSetYTranslate = this.getChromosomeSetYTranslate(setNumber);\n    return (\n      'rotate(90) ' +\n      'translate(' + this._margin.left + ', -' + chromosomeSetYTranslate + ')'\n    );\n  }\n\n  getChromosomeSetYTranslate(setNumber) {\n    return 200 * (setNumber + 1);\n  }\n\n}\n\n\n\nexport class SmallLayout extends Layout {\n\n  constructor(config, ideo) {\n    super(config, ideo);\n\n    this._class = 'SmallLayout';\n\n    this._margin = {\n      left: 36.5,\n      top: 10\n    };\n  }\n\n  rotateForward(setNumber, chrNumber, chrElement, callback) {\n    var ideoBox = d3.select(this._ideo.selector).node().getBoundingClientRect();\n    var chrBox = chrElement.getBoundingClientRect();\n\n    var scaleX = (ideoBox.width / chrBox.height) * 0.97;\n    var scaleY = this._getYScale();\n\n    transform = 'translate(5, 25) scale(' + scaleX + ', ' + scaleY + ')';\n\n    d3.select(chrElement.parentNode)\n      .transition()\n      .attr('transform', transform)\n      .on('end', callback);\n  }\n\n  rotateBack(setNumber, chrNumber, chrElement, callback) {\n    var translate = this.getChromosomeSetTranslate(setNumber);\n\n    d3.select(chrElement.parentNode)\n      .transition()\n      .attr('transform', translate)\n      .on('end', callback);\n  }\n\n  getHeight() {\n    var chrHeight = this._config.chrHeight;\n    return this._config.rows * (chrHeight + this._margin.top * 1.5);\n  }\n\n  getWidth() {\n    return '97%';\n  }\n\n  getChromosomeBandLabelTranslate() {\n\n  }\n\n  getChromosomeSetLabelTranslate() {\n    return 'rotate(-90)';\n  }\n\n  getChromosomeSetTranslate(setNumber) {\n    // Get organisms id list\n    var organisms = [];\n    this._ideo.getTaxids(function(taxIdList) {\n      organisms = taxIdList;\n    });\n    // Get first organism chromosomes amount\n    var size = this._ideo.config.chromosomes[organisms[0]].length;\n    // Amount of chromosomes per number\n    var rowSize = size / this._config.rows;\n\n    var xOffset;\n    var yOffset;\n\n    if (setNumber > rowSize - 1) {\n      xOffset = this._margin.left + this._config.chrHeight * 1.4;\n      yOffset = this.getChromosomeSetYTranslate(setNumber - rowSize);\n    } else {\n      xOffset = this._margin.left;\n      yOffset = this.getChromosomeSetYTranslate(setNumber);\n    }\n\n    return 'rotate(90) translate(' + xOffset + ', -' + yOffset + ')';\n  }\n\n  getChromosomeSetYTranslate(setNumber) {\n    // Get additional padding caused by annotation tracks\n    var additionalPadding = this._getAdditionalOffset();\n    // If no detailed description provided just use one formula for all cases\n    return (\n      this._margin.left * (setNumber) + this._config.chrWidth +\n      additionalPadding * 2 + additionalPadding * setNumber\n    );\n  }\n\n  getChromosomeSetLabelXPosition(setNumber) {\n    return (\n      ((this._ploidy.getSetSize(setNumber) * this._config.chrWidth + 20) / -2) +\n      (this._config.ploidy > 1 ? 0 : this._config.chrWidth)\n    );\n  }\n\n  getChromosomeLabelXPosition() {\n    return this._config.chrWidth / -2;\n  }\n\n}\n\n\n\n\nexport class VerticalLayout extends Layout {\n\n  constructor(config, ideo) {\n    super(config, ideo);\n    this._class = 'VerticalLayout';\n    // Layout margins\n    this._margin = {\n      top: 30,\n      left: 15\n    };\n  }\n\n  rotateForward(setNumber, chrNumber, chrElement, callback) {\n    var self = this;\n\n    var xOffset = 20;\n\n    var ideoBox = d3.select(this._ideo.selector).node().getBoundingClientRect();\n    var chrBox = chrElement.getBoundingClientRect();\n\n    var scaleX = (ideoBox.width / chrBox.height) * 0.97;\n    var scaleY = this._getYScale();\n\n    var transform =\n      'translate(' + xOffset + ', 25) scale(' + scaleX + ', ' + scaleY + ')';\n\n    d3.select(chrElement.parentNode)\n      .transition()\n      .attr('transform', transform)\n      .on('end', callback);\n\n    // Append new chromosome labels\n    var labels = this.getChromosomeLabels(chrElement);\n    var y = (xOffset + self._config.chrWidth) * 1.3;\n    d3.select(this._ideo.getSvg())\n      .append('g')\n      .attr('class', 'tmp')\n      .selectAll('text')\n      .data(labels)\n      .enter()\n      .append('text')\n      .attr('class', function(d, i) {\n        return i === 0 && labels.length === 2 ? 'chrSetLabel' : null;\n      })\n      .attr('x', 0)\n      .attr('y', y).style('opacity', 0)\n      .text(String)\n      .transition()\n      .style('opacity', 1);\n  }\n\n  rotateBack(setNumber, chrNumber,\n             chrElement, callback) {\n    var translate = this.getChromosomeSetTranslate(setNumber);\n\n    d3.select(chrElement.parentNode)\n      .transition()\n      .attr('transform', translate)\n      .on('end', callback);\n\n    d3.selectAll(this._ideo.selector + ' g.tmp')\n      .style('opacity', 0)\n      .remove();\n  }\n\n  getHeight() {\n    return this._config.chrHeight + this._margin.top * 1.5;\n  }\n\n  getWidth() {\n    return '97%';\n  }\n\n  getChromosomeBandLabelTranslate() {\n\n  }\n\n  getChromosomeSetLabelTranslate() {\n    return 'rotate(-90)';\n  }\n\n  getChromosomeSetTranslate(setNumber) {\n    var marginTop = this._margin.top;\n    var chromosomeSetYTranslate = this.getChromosomeSetYTranslate(setNumber);\n    return (\n      'rotate(90) ' +\n      'translate(' + marginTop + ', -' + chromosomeSetYTranslate + ')'\n    );\n  }\n\n  getChromosomeSetYTranslate(setNumber) {\n    // Get additional padding caused by annotation/histogram tracks\n    var pad = this._getAdditionalOffset(),\n      margin = this._config.chrMargin,\n      width = this._config.chrWidth,\n      translate;\n\n    // If no detailed description provided just use one formula for all cases\n    if (!this._config.ploidyDesc) {\n      // TODO:\n      // This part of code contains a lot magic numbers and if\n      // statements for exactly corresponing to original ideogram examples.\n      // But all this stuff should be removed. Calculation of translate\n      // should be a simple formula applied for all cases listed below.\n      // Now they are diffirent because of Layout:_getAdditionalOffset do\n      // not meet for cases when no annotation, when annotation exists and\n      // when histogram used\n\n      if (this._config.annotationsLayout === 'histogram') {\n        return margin / 2 + setNumber * (margin + width + 2) + pad * 2 + 1;\n      } else {\n        translate = width + setNumber * (margin + width) + pad * 2;\n        if (pad > 0) {\n          return translate;\n        } else {\n          return translate + 4 + (2 * setNumber);\n        }\n      }\n    }\n\n    // If detailed description provided start to calculate offsets\n    // for each chromosome set separately. This should be done only once\n    if (!this._translate) {\n      // First offset equals to zero\n      this._translate = [this._ploidy.getSetSize(0) * width * 2];\n      var prevTranslate;\n      // Loop through description set\n      for (var i = 1; i < this._config.ploidyDesc.length; i++) {\n        prevTranslate = this._translate[i - 1];\n        this._translate[i] = prevTranslate + this._getChromosomeSetSize(i - 1);\n      }\n    }\n\n    return this._translate[setNumber];\n  }\n\n  getChromosomeSetLabelXPosition() {\n    return (this._config.chrWidth * this._config.ploidy) / -2;\n  }\n\n  getChromosomeLabelXPosition() {\n    return this._config.chrWidth / -2;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/layouts/layout.js","import * as d3 from 'd3';\n\n// Chromosome's view utility class\nexport class ChromosomeUtil {\n\n  constructor(node) {\n    this._node = node;\n  }\n\n  getLabel() {\n    var label =\n      d3\n        .select(this._node)\n        .select('text.chrLabel')\n        .text();\n    return label;\n  }\n\n  // Get chromosome set label\n  getSetLabel() {\n    var setLabel =\n      d3\n        .select(this._node.parentNode)\n        .select('text.chromosome-set-label')\n        .text();\n    return setLabel;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/views/chromosome-util.js","export class ModelAdapter {\n\n  constructor(model) {\n    this._model = model;\n    this._class = 'ModelAdapter';\n  }\n\n  static getInstance(model) {\n    if (model.bands) {\n      return new ModelAdapter(model);\n    } else {\n      return new ModelNoBandsAdapter(model);\n    }\n  }\n\n  getModel() {\n    return this._model;\n  }\n\n  getCssClass() {\n    return '';\n  }\n}\n\nexport class ModelNoBandsAdapter extends ModelAdapter {\n\n  constructor(model) {\n    super(model);\n    this._class = 'ModelNoBandsAdapter';\n  }\n\n  getModel() {\n    this._model.bands = [];\n\n      // If chromosome width more, then 1 add single band to bands array\n    if (this._model.width > 1) {\n      this._model.bands.push({\n        name: 'q',\n        px: {\n          start: 0,\n          stop: this._model.width,\n          width: this._model.width\n        }\n      });\n    }\n\n    return this._model;\n  }\n\n  getCssClass() {\n    return 'noBands';\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/model-adapter.js","import {Color} from './../color';\nimport {Range} from './../range';\n\nexport class Chromosome {\n\n  constructor(adapter, config, ideo) {\n    this._adapter = adapter;\n    this._model = this._adapter.getModel();\n    this._config = config;\n    this._ideo = ideo;\n    this._color = new Color(this._config);\n    this._bumpCoefficient = 5;\n  }\n\n  // Factory method\n  static getInstance(adapter, config, ideo) {\n    if (adapter.getModel().centromerePosition === 'telocentric') {\n      return new TelocentricChromosome(adapter, config, ideo);\n    } else {\n      return new MetacentricChromosome(adapter, config, ideo);\n    }\n  };\n\n  _addPArmShape(clipPath, isPArmRendered) {\n    if (isPArmRendered) {\n      return clipPath.concat(this._getPArmShape());\n    } else {\n      return clipPath;\n    }\n  };\n\n  _addQArmShape(clipPath, isQArmRendered) {\n    if (isQArmRendered) {\n      return clipPath.concat(this._getQArmShape());\n    } else {\n      return clipPath;\n    }\n  };\n\n  render(container, chrSetNumber, chrNumber) {\n      // Append bands container and apply clip-path on it\n\n    var self = this;\n\n    container = container.append('g')\n      .attr('class', 'bands')\n      .attr(\"clip-path\", \"url(#\" + this._model.id + \"-chromosome-set-clippath)\");\n\n      // Render chromosome arms\n    var isPArmRendered = this._renderPArm(container, chrSetNumber, chrNumber);\n    var isQArmRendered = this._renderQArm(container, chrSetNumber, chrNumber);\n\n      // Render range set\n    this._renderRangeSet(container, chrSetNumber, chrNumber);\n\n      // Push arms shape string into clipPath array\n    var clipPath = [];\n    clipPath = this._addPArmShape(clipPath, isPArmRendered);\n    clipPath = this._addQArmShape(clipPath, isQArmRendered);\n\n    var opacity = '0';\n    var fill = '';\n    var isFullyBanded = this.isFullyBanded();\n    if ('ancestors' in this._ideo.config && !('rangeSet' in this._ideo.config)) {\n      // E.g. diploid human genome (with translucent overlay)\n      fill = self._color.getArmColor(chrSetNumber, chrNumber, 0);\n      if (isFullyBanded) {\n        opacity = '0.5';\n      }\n    } else if (isFullyBanded) {\n      // E.g. mouse reference genome\n      opacity = null;\n      fill = 'transparent';\n    } else if (!('ancestors' in this._ideo.config)) {\n      // E.g. chimpanzee assembly Pan_tro 3.0\n      opacity = '1';\n    }\n\n    // Render chromosome border\n    container.append('g')\n      .attr('class', 'chromosome-border')\n      .selectAll('path')\n      .data(clipPath)\n      .enter()\n      .append('path')\n      .attr('fill', fill)\n      .style('fill-opacity', opacity)\n      .attr('stroke', function(d, i) {\n        return self._color.getBorderColor(chrSetNumber, chrNumber, i);\n      })\n      .attr('stroke-width', function(d) {\n        return ('strokeWidth' in d ? d.strokeWidth : 1);\n      })\n      .attr('d', function(d) {\n        return d.path;\n      }).attr('class', function(d) {\n        return d.class;\n      });\n\n    return clipPath;\n  };\n\n  _renderRangeSet(container, chrSetNumber, chrNumber) {\n    if (!('rangeSet' in this._config)) {\n      return;\n    }\n\n    var rangeSet = this._config.rangeSet.filter(function(range) {\n      return range.chr - 1 === chrSetNumber;\n    }).map(function(range) {\n      return new Range(range);\n    });\n\n    var rangesContainer = container.append('g').attr('class', 'range-set');\n\n    var self = this;\n    var ideo = self._ideo;\n    var bandsXOffset = ideo._bandsXOffset;\n\n    rangesContainer.selectAll('rect.range')\n      .data(rangeSet)\n      .enter()\n      .append('rect')\n      .attr('class', 'range')\n      .attr('x', function(range) {\n        var startPx = ideo.convertBpToPx(self._model, range.getStart());\n        return startPx - bandsXOffset;\n      }).attr('y', 0)\n      .attr('width', function(range) {\n        var lengthPx = ideo.convertBpToPx(self._model, range.getLength());\n        return lengthPx - bandsXOffset;\n      }).attr('height', this._config.chrWidth)\n      .style('fill', function(range) {\n        return range.getColor(chrNumber);\n      });\n  };\n\n  // Get chromosome's shape main values\n  _getShapeData() {\n      // First q band from bands sequence\n    var firstQBand;\n    for (var i = 0; i < this._model.bands.length; i++) {\n      if (this._model.bands[i].name[0] === 'q') {\n        firstQBand = this._model.bands[i];\n        break;\n      }\n    }\n\n    // Chromosome's right position\n    var lastBand = this._model.bands.length - 1;\n    var rightTerminalPosition = this._model.bands[lastBand].px.stop;\n\n      // Properties description:\n      // x1 - left terminal start position\n      // x2 - centromere position\n      // x3 - right terminal end position\n      // w - chromosome width\n      // b - bump size\n    return {\n      x1: 0,\n      x2: firstQBand ? firstQBand.px.start : rightTerminalPosition,\n      x3: rightTerminalPosition,\n      w: this._config.chrWidth,\n      b: this._config.chrWidth / this._bumpCoefficient\n    };\n  };\n\n  _getPArmShape() {\n    var d = this._getShapeData(),\n      x = d.x2 - d.b;\n\n    if (this.isFullyBanded() || 'ancestors' in this._ideo.config) {\n      // Encountered when chromosome has any of:\n      //  - One placeholder \"band\", e.g. pig genome GCF_000003025.5\n      //  - Many (> 2) bands, e.g. human reference genome\n      //  - Ancestor colors in ploidy configuration, as in ploidy_basic.html\n      return {\n        class: '',\n        path:\n          'M' + d.b + ',0 ' +\n          'L' + x + ',0 ' +\n          'Q' + (d.x2 + d.b) + ',' + (d.w / 2) + ',' + x + ',' + d.w + ' ' +\n          'L' + d.b + ',' + d.w + ' ' +\n          'Q-' + d.b + ',' + (d.w / 2) + ',' + d.b + ',0'\n      };\n    } else {\n      // e.g. chimpanzee assembly Pan_tro 3.0\n      return [{\n        class: '',\n        path:\n          'M' + d.b + ',0 ' +\n          'L' + (x - 2) + ',0 ' +\n          'L' + (x - 2) + ',' + d.w + ' ' +\n          'L' + d.b + ',' + d.w + ' ' +\n          'Q-' + d.b + ',' + (d.w / 2) + ',' + d.b + ',0'\n      }, {\n        class: 'acen',\n        path:\n          'M' + x + ',0 ' +\n          'Q' + (d.x2 + d.b) + ',' + (d.w / 2) + ',' + x + ',' + d.w + ' ' +\n          'L' + x + ',' + d.w + ' ' +\n          'L' + (x - 2) + ',' + d.w + ' ' +\n          'L' + (x - 2) + ',0'\n      }];\n    }\n  };\n\n  _getQArmShape() {\n    var d = this._getShapeData(),\n      x = d.x3 - d.b,\n      x2b = d.x2 + d.b;\n\n    if (this.isFullyBanded() || 'ancestors' in this._ideo.config) {\n      return {\n        class: '',\n        path:\n          'M' + x2b + ',0 ' +\n          'L' + x + ',0 ' +\n          'Q' + (d.x3 + d.b) + ',' + (d.w / 2) + ',' + x + ',' + d.w + ' ' +\n          'L' + x2b + ',' + d.w + ' ' +\n          'Q' + (d.x2 - d.b) + ',' + (d.w / 2) + ',' + x2b + ',0'\n      };\n    } else {\n      // e.g. chimpanzee assembly Pan_tro 3.0\n      return [{\n        path:\n          'M' + x2b + ',0 ' +\n          'L' + x + ',0 ' +\n          'Q' + (d.x3 + d.b) + ',' + (d.w / 2) + ',' + x + ',' + d.w + ' ' +\n          'L' + x2b + ',' + d.w + ' ' +\n          'L' + x2b + ',0'\n      }, {\n        class: 'acen',\n        path:\n          'M' + x2b + ',0' +\n          'Q' + (d.x2 - d.b) + ',' + (d.w / 2) + ',' + x2b + ',' + d.w + ' ' +\n          'L' + x2b + ',' + d.w +\n          'L' + (x2b + 2) + ',' + d.w +\n          'L' + (x2b + 2) + ',0'\n      }];\n    }\n  };\n\n  isFullyBanded() {\n    return (\n      this._model.bands &&\n      (this._model.bands.length !== 2 || this._model.bands[0].name[0] === 'q')\n    );\n  };\n\n  // Render arm bands\n  _renderBands(container, chrSetNumber, chrNumber, bands, arm) {\n    var self = this;\n    var armNumber = arm === 'p' ? 0 : 1;\n    var fill = '';\n    if ('ancestors' in this._ideo.config && !(this.isFullyBanded())) {\n      fill = self._color.getArmColor(chrSetNumber, chrNumber, armNumber);\n    }\n\n    container.selectAll(\"path.band.\" + arm)\n      .data(bands)\n      .enter()\n      .append(\"path\")\n      .attr(\"id\", function(d) {\n        return self._model.id + \"-\" + d.name.replace(\".\", \"-\");\n      })\n      .attr(\"class\", function(d) {\n        return 'band ' + arm + '-band ' + d.stain;\n      })\n      .attr(\"d\", function(d) {\n        var start = self._ideo.round(d.px.start);\n        var length = self._ideo.round(d.px.width);\n\n        var x = start + length;\n\n        return \"M \" + start + \", 0\" +\n              \"l \" + length + \" 0 \" +\n              \"l 0 \" + self._config.chrWidth + \" \" +\n              \"l -\" + length + \" 0 z\";\n      })\n      .style('fill', fill);\n  };\n\n  // Render chromosome's p arm.\n  // Returns boolean which indicates is any bands was rendered\n  _renderPArm(container, chrSetNumber, chrNumber) {\n    var bands = this._model.bands.filter(function(band) {\n      return band.name[0] === 'p';\n    });\n\n    this._renderBands(container, chrSetNumber, chrNumber, bands, 'p');\n\n    return Boolean(bands.length);\n  };\n\n  // Render chromosome's q arm.\n  // Returns boolean which indicates is any bands was rendered\n  _renderQArm(container, chrSetNumber, chrNumber) {\n    var bands = this._model.bands.filter(function(band) {\n      return band.name[0] === 'q';\n    });\n\n    this._renderBands(container, chrSetNumber, chrNumber, bands, 'q');\n\n    return Boolean(bands.length);\n  };\n}\n\n\n\nexport class MetacentricChromosome extends Chromosome {\n\n  constructor(model, config, ideo) {\n    super(model, config, ideo);\n    this._class = 'MetacentricChromosome';\n  }\n}\n\n\n\nexport class TelocentricChromosome extends Chromosome {\n\n  constructor(model, config, ideo) {\n    super(model, config, ideo);\n    this._class = 'TelocentricChromosome';\n    this._pArmOffset = 3;\n  }\n\n  _addPArmShape(clipPath) {\n    return clipPath.concat(this._getPArmShape());\n  };\n\n  _getPArmShape() {\n    var d = this._getShapeData();\n    d.o = this._pArmOffset;\n\n    return [{\n      class: 'acen',\n      path: 'M' + (d.x2 + 2) + ',1' +\n      'L' + (d.x2 + d.o + 3.25) + ',1 ' +\n      'L' + (d.x2 + d.o + 3.25) + ',' + (d.w - 1) + ' ' +\n      'L' + (d.x2 + 2) + ',' + (d.w - 1)\n    }, {\n      class: 'gpos66',\n      path: 'M' + (d.x2 - d.o + 5) + ',0' +\n      'L' + (d.x2 - d.o + 3) + ',0 ' +\n      'L' + (d.x2 - d.o + 3) + ',' + d.w + ' ' +\n      'L' + (d.x2 - d.o + 5) + ',' + d.w,\n      strokeWidth: 0.5\n    }];\n  };\n\n  _getQArmShape() {\n    var d = this._getShapeData(),\n      x = d.x3 - d.b,\n      o = this._pArmOffset + 3;\n\n    return {\n      class: '',\n      path:\n      'M' + (d.x2 + o) + ',0 ' +\n      'L' + x + ',0 ' +\n      'Q' + (d.x3 + d.b) + ',' + (d.w / 2) + ',' + x + ',' + d.w + ' ' +\n      'L' + (d.x2 + o) + ',' + d.w\n    };\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/views/chromosome.js","import {Ploidy} from './ploidy';\n\nexport class Color {\n\n  constructor(config) {\n      // Ideogram config\n    this._config = config;\n    this._ploidy = new Ploidy(this._config);\n  }\n\n  getArmColor(chrSetNumber, chrNumber, armNumber) {\n    if (this._config.armColors) {\n      return this._config.armColors[armNumber];\n    } else if (this._config.ancestors) {\n      return this._getPolyploidArmColor(chrSetNumber, chrNumber, armNumber);\n    } else {\n      return null;\n    }\n  }\n\n  getBorderColor(chrSetNumber, chrNumber, armNumber) {\n    if (chrNumber < this._config.ploidy) {\n      return '#000';\n    } else if (this._ploidy.exists(chrSetNumber, chrNumber, armNumber)) {\n      return '#000';\n    } else {\n      return '#fff';\n    }\n  }\n\n  _getPolyploidArmColor(chrSetNumber, chrNumber, armNumber) {\n    if (!this._ploidy.exists(chrSetNumber, chrNumber, armNumber)) {\n      return 'transparent';\n    } else {\n      var ancestor =\n        this._ploidy.getAncestor(chrSetNumber, chrNumber, armNumber);\n      return this._config.ancestors[ancestor];\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/color.js","export class Range {\n\n  /**\n  * Chromosome range.\n  * @public\n  * @class\n  * @param {Object} data - range data.\n  * @param {Integer} data.chr - chromosome index.\n  * @param {Integer[]} [data.ploidy] - array which controls on which chromosomes range should appear in case of ploidy.\n  * @param {Integer} data.start - range start.\n  * @param {Integer} data.stop - range end.\n  * @param {String} data.color - range color.\n  */\n  constructor(data) {\n    this._data = data;\n  }\n\n  getStart() {\n    return this._data.start;\n  }\n\n  getStop() {\n    return this._data.stop;\n  }\n\n  getLength() {\n    return this._data.stop - this._data.start;\n  }\n\n  getColor(chrNumber) {\n    if (!('ploidy' in this._data)) {\n      return this._getColor(chrNumber);\n    } else if ('ploidy' in this._data && this._data.ploidy[chrNumber]) {\n      return this._getColor(chrNumber);\n    } else {\n      return 'transparent';\n    }\n  }\n\n  _getColor(chrNumber) {\n    if (Array.isArray(this._data.color)) {\n      return this._data.color[chrNumber];\n    } else {\n      return this._data.color;\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/range.js","export class BedParser {\n\n  constructor(bed, ideo) {\n    this.rawAnnots = this.parseBed(bed, ideo);\n  }\n\n  // http://stackoverflow.com/a/5624139\n  static componentToHex(c) {\n    var hex = parseInt(c, 10).toString(16);\n    return hex.length === 1 ? \"0\" + hex : hex;\n  }\n\n  static rgbToHex(r, g, b) {\n    return (\n      \"#\" +\n      BedParser.componentToHex(r) +\n      BedParser.componentToHex(g) +\n      BedParser.componentToHex(b)\n    );\n  }\n\n  /*\n  * Parses a BED file, returns raw annotations\n  * BED documentation: https://genome.ucsc.edu/FAQ/FAQformat#format1\n  */\n  parseBed(bed, ideo) {\n\n    var tsvLines, i, columns, chrs, chr, start, stop, chrIndex, annots, annot,\n      bedStartIndex, ucscStyle, rgb, color, label, keys,\n      rawAnnots;\n\n    annots = [];\n\n    chrs = Object.keys(ideo.chromosomes[ideo.config.taxid]);\n\n    for (i = 0; i < chrs.length; i++) {\n      chr = chrs[i];\n      annots.push({chr: chr, annots: []});\n    }\n\n    tsvLines = bed.split(/\\r\\n|\\n/);\n\n    bedStartIndex = 0; // 1 if BED has header (i.e. track line), 0 otherwise\n    ucscStyle = true;\n    if (tsvLines[0].slice(0, 3) === 'chr' || isNaN(parseInt(tsvLines[0], 10))) {\n      bedStartIndex = 1;\n    }\n\n    if (isNaN(parseInt(tsvLines[bedStartIndex], 10)) === false) {\n      ucscStyle = false;\n    }\n\n    for (i = bedStartIndex; i < tsvLines.length; i++) {\n      columns = tsvLines[i].split(/\\s/g);\n\n      // These three columns (i.e. fields) are required\n      chr = columns[0];\n      start = parseInt(columns[1], 10);\n      stop = parseInt(columns[2], 10);\n\n      length = stop - start;\n\n      if (ucscStyle) {\n        chr = chr.slice(3);\n      }\n      chrIndex = chrs.indexOf(chr);\n      if (chrIndex === -1) {\n        continue;\n      }\n      annot = [\"\", start, length, 0];\n\n      if (columns.length >= 4) {\n        label = columns[3];\n        annot[0] = label;\n      }\n\n      if (columns.length >= 8) {\n        rgb = columns[8].split(',');\n        color = BedParser.rgbToHex(rgb[0], rgb[1], rgb[2]);\n        annot.push(color);\n      }\n\n      annots[chrIndex].annots.push(annot);\n    }\n    keys = ['name', 'start', 'length', 'trackIndex'];\n    if (tsvLines[bedStartIndex].length >= 8) {\n      keys.push('color');\n    }\n    rawAnnots = {\n      keys: keys,\n      annots: annots\n    };\n    return rawAnnots;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/parsers/bed-parser.js"],"sourceRoot":""}